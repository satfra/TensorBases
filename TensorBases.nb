(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    547257,      12626]
NotebookOptionsPosition[    528468,      12337]
NotebookOutlinePosition[    529258,      12363]
CellTagsIndexPosition[    529215,      12360]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["TensorBases Package", "Title",
 CellChangeTimes->{{3.919139788507444*^9, 3.919139800355089*^9}, 
   3.933821601668194*^9, 
   3.935831565020671*^9},ExpressionUUID->"255990ba-0600-4517-a841-\
3b30ef1076f1"],

Cell[CellGroupData[{

Cell["Package Setup", "Chapter",
 CellChangeTimes->{{3.919139903504201*^9, 
  3.919139906695078*^9}},ExpressionUUID->"2d5f9f27-5490-4bea-8ecf-\
1b321b723da0"],

Cell[CellGroupData[{

Cell["Welcome  message", "Section",
 CellChangeTimes->{{3.933860697506505*^9, 3.9338607012823157`*^9}, 
   3.9358315612993937`*^9},ExpressionUUID->"14b72385-f030-403e-a0c1-\
5d8222f87d9c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"\"\<AllowInternetUse\>\"", " ", "/.", " ", 
     RowBox[{"SystemInformation", "[", "\"\<Network\>\"", "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "TBCurPacletAddr", ",", "TBCurPaclet", ",", "TBCurVersion", ",", 
         "\[IndentingNewLine]", "TBInstalledPaclet", ",", 
         "TBInstalledVersion"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "TBCurPacletAddr", "=", 
         "\"\<https://github.com/satfra/TensorBases/raw/refs/heads/main/\
PacletInfo.m\>\""}], ";", "\[IndentingNewLine]", 
        RowBox[{"TBCurPaclet", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"List", "@@", 
            RowBox[{"Import", "[", "TBCurPacletAddr", "]"}]}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"TBCurVersion", "=", 
         RowBox[{"TBCurPaclet", "[", "\"\<Version\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"TBInstalledPaclet", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"List", "@@", 
            RowBox[{"Import", "[", 
             RowBox[{"FileNameJoin", "[", 
              RowBox[{"{", 
               RowBox[{
               "$UserBaseDirectory", ",", "\"\<Applications\>\"", ",", 
                "\"\<TensorBases\>\"", ",", "\"\<PacletInfo.m\>\""}], "}"}], 
              "]"}], "]"}]}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"TBInstalledVersion", "=", 
         RowBox[{"TBInstalledPaclet", "[", "\"\<Version\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"TBCurVersion", "=!=", "TBInstalledVersion"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ChoiceDialog", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"TemplateApply", "[", 
                RowBox[{
                "\"\<There is a newer TensorBases version on the internet. \n\
The installed version is `a`, whereas `b` is available. Do you want to \
install it?\>\"", ",", 
                 RowBox[{"<|", 
                  RowBox[{
                   RowBox[{"\"\<a\>\"", "->", "TBInstalledVersion"}], ",", 
                   RowBox[{"\"\<b\>\"", "->", "TBCurVersion"}]}], "|>"}]}], 
                "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"WindowTitle", "->", "\"\<Update TensorBases\>\""}], 
               ",", 
               RowBox[{"WindowSize", "->", 
                RowBox[{"{", 
                 RowBox[{"Medium", ",", "All"}], "}"}]}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "Import", "[", 
               "\"\<https://raw.githubusercontent.com/satfra/TensorBases/main/\
TensorBasesInstaller.m\>\"", "]"}], ";", 
              RowBox[{"Abort", "[", "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "Print", "[", 
               "\"\<Consider updating the TensorBases package for bugfixes \
and new features!\>\"", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}],
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
      ";"}]}], "\n", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.969423224905064*^9, 3.969423506793309*^9}, {
  3.96942369325712*^9, 3.9694238536809998`*^9}, {3.969423928897141*^9, 
  3.969424002217407*^9}, {3.96942405085797*^9, 3.969424119054247*^9}, {
  3.969424154209969*^9, 3.969424204489299*^9}, {3.969424340461267*^9, 
  3.969424388417314*^9}},ExpressionUUID->"2125670c-8e80-4950-89c2-\
d22305005954"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  "\"\<Mathematica package \
\!\(\*StyleBox[\"TensorBases\",FontWeight->\"Bold\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\"]\)loaded\n\
\!\(\*StyleBox[\"Authors\",FontWeight->\"Bold\"]\): Andreas Gei\[SZ]el, Franz \
Richard Sattler\n\!\(\*StyleBox[\"Version\",FontWeight->\"Bold\"]\): 1.0\n\
\!\(\*StyleBox[\"Year\",FontWeight->\"Bold\"]\): 2025\n\nFor a list of \
available bases, call \!\(\*StyleBox[\"TBInfo\",FontColor->RGBColor[1, 0.5, \
0]]\)[]. For further information on a particular basis, call \
\!\(\*StyleBox[\"TBInfo\",FontColor->RGBColor[1, 0.5, \
0]]\)[\\\"\!\(\*StyleBox[\"BasisName\",FontColor->GrayLevel[0.5]]\)\\\"].\n\n\
This package provides the methods \
\!\(\*StyleBox[\"TBGetBasisElement\",FontColor->RGBColor[1, 0.5, 0]]\), \
\!\(\*StyleBox[\"TBGetInnerProduct\",FontColor->RGBColor[1, 0.5, 0]]\), \
\!\(\*StyleBox[\"TBGetMetric\",FontColor->RGBColor[1, 0.5, 0]]\), \
\!\(\*StyleBox[\"TBGetInverseMetric\",FontColor->RGBColor[1, 0.5, 0]]\), \!\(\
\*StyleBox[\"TBGetProjector\",FontColor->RGBColor[1, 0.5, 0]]\) for every \
tensor basis available.\nFor closer explanations, please call their usage \
messages, e.g. \!\(\*StyleBox[\"TBGetProjector\",FontColor->RGBColor[1, 0.5, \
0]]\)::\!\(\*StyleBox[\"usage\",FontColor->RGBColor[0, 0, 1]]\).\n\nOther \
useful tools include \
\!\(\*StyleBox[\"TBBasisTransformation\",FontColor->RGBColor[1, 0.5, 0]]\), \
\!\(\*StyleBox[\"TBVertexTransformation\",FontColor->RGBColor[1, 0.5, 0]]\), \
\!\(\*StyleBox[\"TBGetIdentityMatrix\",FontColor->RGBColor[1, 0.5, 0]]\), \
\!\(\*StyleBox[\"TBGetBasisSize\",FontColor->RGBColor[1, 0.5, \
0]]\),\!\(\*StyleBox[\" \",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[\"TBGetIndexSet\",FontColor->RGBColor[1, 0.5, \
0]]\),\!\(\*StyleBox[\" \",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[\"TBMakePropagator\",FontColor->RGBColor[1, 0.5, 0]]\).\n\
\nTo build or manipulate bases, please call \
\!\(\*StyleBox[\"TBInfo\",FontColor->RGBColor[1, 0.5, 0]]\)[\\\"BaseBuilder\\\
\"].\n\nTo show information on the used notation, call \
\!\(\*StyleBox[\"TBInfo\",FontColor->RGBColor[1, 0.5, \
0]]\)[\\\"Notation\\\"].\n\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.93382135272999*^9, 3.933821544369678*^9}, {
   3.933852102960898*^9, 3.93385215369654*^9}, {3.9338533716572638`*^9, 
   3.933853391208394*^9}, 3.933853820321669*^9, {3.9338561865614557`*^9, 
   3.9338561884407663`*^9}, {3.933856230552123*^9, 3.933856361417264*^9}, {
   3.93385647006616*^9, 3.933856531233593*^9}, {3.9338604605457373`*^9, 
   3.933860560578547*^9}, 3.933918356157299*^9, {3.933996906999851*^9, 
   3.933996927267945*^9}, {3.94122064029466*^9, 3.9412206791818523`*^9}, {
   3.949680491293685*^9, 3.9496805095854893`*^9}, {3.949681114089796*^9, 
   3.949681114201562*^9}, {3.950776424506304*^9, 3.9507764276738043`*^9}, {
   3.950784274930175*^9, 3.9507843217808533`*^9}, {3.969415191956509*^9, 
   3.969415210095763*^9}},ExpressionUUID->"cff12a64-b8f4-41c0-bf5f-\
6bed048747c5"],

Cell[BoxData["\<\"Mathematica package \
\\!\\(\\*StyleBox[\\\"TensorBases\\\",FontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\
StyleBox[\\\" \
\\\",FontWeight->\\\"Bold\\\"]\\)loaded\\n\\!\\(\\*StyleBox[\\\"Authors\\\",\
FontWeight->\\\"Bold\\\"]\\): Andreas Gei\[SZ]el, Franz Richard Sattler\\n\\!\
\\(\\*StyleBox[\\\"Version\\\",FontWeight->\\\"Bold\\\"]\\): \
1.0\\n\\!\\(\\*StyleBox[\\\"Year\\\",FontWeight->\\\"Bold\\\"]\\): \
2024\\n\\nFor a list of available bases, call \
\\!\\(\\*StyleBox[\\\"TBInfo\\\",FontColor->RGBColor[1, 0.5, 0]]\\)[]. For \
further information on a particular basis, call \
\\!\\(\\*StyleBox[\\\"TBInfo\\\",FontColor->RGBColor[1, 0.5, \
0]]\\)[\\\"\\!\\(\\*StyleBox[\\\"BasisName\\\",FontColor->GrayLevel[0.5]]\\)\\\
\"].\\n\\nThis package provides the methods \
\\!\\(\\*StyleBox[\\\"TBGetBasisElement\\\",FontColor->RGBColor[1, 0.5, \
0]]\\), \\!\\(\\*StyleBox[\\\"TBGetInnerProduct\\\",FontColor->RGBColor[1, \
0.5, 0]]\\), \\!\\(\\*StyleBox[\\\"TBGetMetric\\\",FontColor->RGBColor[1, \
0.5, 0]]\\), \
\\!\\(\\*StyleBox[\\\"TBGetInverseMetric\\\",FontColor->RGBColor[1, 0.5, \
0]]\\), \\!\\(\\*StyleBox[\\\"TBGetProjector\\\",FontColor->RGBColor[1, 0.5, \
0]]\\) for every tensor basis available.\\nFor closer explanations, please \
call their usage messages, e.g. \
\\!\\(\\*StyleBox[\\\"TBGetProjector\\\",FontColor->RGBColor[1, 0.5, 0]]\\)::\
\\!\\(\\*StyleBox[\\\"usage\\\",FontColor->RGBColor[0, 0, 1]]\\).\\n\\nTo \
build or manipulate bases, please call \
\\!\\(\\*StyleBox[\\\"TBInfo\\\",FontColor->RGBColor[1, 0.5, \
0]]\\)[\\\"BaseBuilder\\\"].\\n\"\>"], "Print",
 CellChangeTimes->{
  3.933860706886597*^9, 3.933864540851795*^9, 3.933904794757718*^9, 
   3.933914006318946*^9, 3.933917960176111*^9, 3.933919663865212*^9, 
   3.933919699568782*^9, {3.933919781117552*^9, 3.9339198102042923`*^9}, 
   3.933919882713066*^9, {3.933919943833292*^9, 3.933919951572888*^9}, 
   3.933920004188856*^9, 3.933920107416561*^9, {3.933920201830823*^9, 
   3.93392022537457*^9}, 3.933920258100485*^9, 3.933920343864513*^9, 
   3.933920421528428*^9, 3.933920473229265*^9, 3.933920578955982*^9, {
   3.933920647660254*^9, 3.933920657380004*^9}, 3.9339206952689247`*^9, 
   3.93392079028916*^9, 3.933921177442209*^9, 3.933921214570123*^9, 
   3.9339212458662157`*^9, {3.9339212765739317`*^9, 3.93392129481119*^9}, 
   3.93392134875428*^9, {3.9339214368741083`*^9, 3.933921455203621*^9}, {
   3.933921878274128*^9, 3.933921903297876*^9}, 3.933921954254926*^9, 
   3.9339220537696037`*^9, 3.933922087351147*^9, 3.933922147861457*^9, 
   3.933922268200555*^9, {3.933922327282453*^9, 3.933922344399807*^9}, {
   3.933922395531685*^9, 3.9339224405799913`*^9}, {3.933922685785295*^9, 
   3.933922704800593*^9}, 3.9339227626011486`*^9, 3.933922828596006*^9, 
   3.933922865770799*^9, 3.933922932078459*^9, 3.933923042865692*^9, 
   3.933923244320567*^9, 3.93392329106692*^9, 3.933923334446946*^9, 
   3.933923402636452*^9, {3.933923576205758*^9, 3.933923597894836*^9}, 
   3.933923781989824*^9, {3.9339238342502117`*^9, 3.933923850142005*^9}, 
   3.933923881712904*^9, 3.933923946260261*^9, 3.933923994048168*^9, {
   3.933924047243856*^9, 3.933924098824136*^9}, {3.933924169137102*^9, 
   3.933924177372635*^9}, 3.933936124831513*^9, 3.933942762661152*^9, {
   3.93394279568764*^9, 3.9339428003176603`*^9}, 3.933943030163054*^9, 
   3.933943076315659*^9, {3.933943155744521*^9, 3.9339431844059668`*^9}, 
   3.9339432393250637`*^9, {3.933943290831739*^9, 3.9339433553221273`*^9}, 
   3.933943460297895*^9, 3.933943495172192*^9, {3.933959099311705*^9, 
   3.933959114695131*^9}, 3.9339591819910307`*^9, 3.933959219955804*^9, 
   3.933959318606521*^9, 3.933959364982352*^9, {3.933959430319045*^9, 
   3.933959491316974*^9}, {3.933996482765983*^9, 3.933996508225358*^9}, {
   3.933996542317891*^9, 3.933996556448373*^9}, 3.933996704785754*^9, 
   3.9339967414892488`*^9, 3.93399682173739*^9, 3.9411737044338007`*^9, 
   3.9412206811465683`*^9, 3.941524046351659*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"653ab452-b552-416d-a18f-e66588142d05"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load FormTracer", "Section",
 CellChangeTimes->{{3.933837174349139*^9, 3.9338371819973392`*^9}, 
   3.93383778328452*^9},ExpressionUUID->"436dffab-0715-4dc4-9893-\
1534c639b158"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FormTracerLoaded", "[", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"Select", "[", 
       RowBox[{"$Packages", ",", 
        RowBox[{
         RowBox[{"#", "==", "\"\<FormTracer`\>\""}], "&"}]}], "]"}], "]"}], 
     ">", "0"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FormTracerInstalled", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "FTDirectory", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FTDirectory", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"SelectFirst", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Join", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"FileNameJoin", "[", 
                 RowBox[{"{", 
                  RowBox[{
                  "$UserBaseDirectory", ",", "\"\<Applications\>\"", ",", 
                   "\"\<FormTracer\>\""}], "}"}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"FileNameJoin", "[", 
                 RowBox[{"{", 
                  RowBox[{
                  "$BaseDirectory", ",", "\"\<Applications\>\"", ",", 
                   "\"\<FormTracer\>\""}], "}"}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"FileNameJoin", "[", 
                 RowBox[{"{", 
                  RowBox[{
                  "$InstallationDirectory", ",", "\"\<AddOns\>\"", ",", 
                   "\"\<Applications\>\"", ",", "\"\<FormTracer\>\""}], "}"}],
                  "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"FileNameJoin", "[", 
                 RowBox[{"{", 
                  RowBox[{
                  "$InstallationDirectory", ",", "\"\<AddOns\>\"", ",", 
                   "\"\<Packages\>\"", ",", "\"\<FormTracer\>\""}], "}"}], 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"FileNameJoin", "[", 
                 RowBox[{"{", 
                  RowBox[{
                  "$InstallationDirectory", ",", "\"\<AddOns\>\"", ",", 
                   "\"\<ExtraPackages\>\"", ",", "\"\<FormTracer\>\""}], 
                  "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Select", "[", 
               RowBox[{"$Path", ",", 
                RowBox[{
                 RowBox[{"StringContainsQ", "[", 
                  RowBox[{"#", ",", "\"\<FormTracer\>\""}], "]"}], "&"}]}], 
               "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"DirectoryQ", "[", "#", "]"}], "&"}]}], 
           "\[IndentingNewLine]", "]"}], "<>", "\"\</\>\""}], "//", 
         "Quiet"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "FTDirectory", "]"}], "=!=", "String"}], ",", 
         RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "True", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"Not", "@", 
      RowBox[{"FormTracerInstalled", "[", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ChoiceDialog", "[", 
         RowBox[{
         "\"\<FormTracer does not seem to be installed. Do you want to \
install it?\>\"", ",", 
          RowBox[{"WindowTitle", "->", "\"\<Install FormTracer\>\""}], ",", 
          RowBox[{"WindowSize", "->", 
           RowBox[{"{", 
            RowBox[{"Medium", ",", "All"}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
        "Import", "[", 
         "\"\<https://raw.githubusercontent.com/FormTracer/FormTracer/master/\
src/FormTracerInstaller.m\>\"", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<The \!\(\*StyleBox[\"TensorBases\",FontWeight->\"Bold\"]\) \
package requires \!\(\*StyleBox[\"FormTracer\",FontWeight->\"Bold\"]\) to \
run.\>\"", "]"}], ";", 
         RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"Not", "@", 
      RowBox[{"FormTracerLoaded", "[", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "Print", "}"}], ",", 
        RowBox[{"Get", "[", "\"\<FormTracer`\>\"", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FormTracerLoaded", "[", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<\!\(\*StyleBox[\"FormTracer\",FontWeight->\"Bold\"]\) package \
loaded. \>\"", "]"}], ";"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<Error: Could not load \
\!\(\*StyleBox[\"FormTracer\",FontWeight->\"Bold\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\"]\)package.\>\"", "]"}], ";", 
         RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}],
      ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "Print", "[", 
       "\"\<\!\(\*StyleBox[\"FormTracer\",FontWeight->\"Bold\"]\) package \
already loaded. \>\"", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
      "Print", "[", 
       "\"\<Clearing all extra variables for compatibility!\\n\>\"", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"FormTracer`DefineExtraVars", "[", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", "Print", "}"}], ",", 
   RowBox[{
    RowBox[{"FiniteT", "[", "True", "]"}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "Print", "}"}], ",", 
    RowBox[{
     RowBox[{"FastGamma5Trace", "[", "True", "]"}], ";"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Head", "[", "$DistributedContexts", "]"}], "=!=", "List"}], ",", 
    RowBox[{"$DistributedContexts", "=", 
     RowBox[{"{", "}"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"$DistributedContexts", "=", 
  RowBox[{"$DistributedContexts", "\[Union]", 
   RowBox[{"{", 
    RowBox[{
    "$Context", ",", "\"\<TensorBases`Private`\>\"", ",", 
     "\"\<TensorBases`\>\"", ",", "\"\<FormTracer`\>\"", ",", 
     "\"\<FormTracer`Private`\>\""}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.93385219520897*^9, 3.933852222240543*^9}, {
   3.9338524351050625`*^9, 3.933852465713541*^9}, {3.933918492106637*^9, 
   3.933918668002691*^9}, {3.933918702168983*^9, 3.933918728258304*^9}, {
   3.933918758964038*^9, 3.933918802118586*^9}, {3.933918895229331*^9, 
   3.933918932051613*^9}, {3.933919004408513*^9, 3.933919082216424*^9}, {
   3.9339201841213017`*^9, 3.933920198582844*^9}, {3.933959390979403*^9, 
   3.933959401832511*^9}, {3.935825296100589*^9, 3.9358252983887367`*^9}, 
   3.93582548530595*^9, {3.9358255561767197`*^9, 3.9358256106974287`*^9}, {
   3.941265795979643*^9, 3.941265796274908*^9}, {3.950785101072967*^9, 
   3.9507851726553297`*^9}, {3.950785289897085*^9, 
   3.950785290253031*^9}},ExpressionUUID->"b5c156b0-48dd-4f0b-b103-\
49b8869d43c2"],

Cell[BoxData["\<\"\\!\\(\\*StyleBox[\\\"FormTracer\\\",FontWeight->\\\"Bold\\\
\"]\\) package loaded. \"\>"], "Print",
 CellChangeTimes->{3.941173707373698*^9, 3.941524047342352*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"c9f3d842-9ce9-41fa-acbe-888c601f1def"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"FormTracer`\"\>", ",", "\<\"FormTracer`Private`\"\>", 
   ",", "\<\"Global`\"\>", ",", "\<\"TensorBases`\"\>", 
   ",", "\<\"TensorBases`Private`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.941173707405624*^9, 3.941524047350499*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"e91ed60a-a087-42b8-bdc0-acad488342af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<To see all (user-defined and package-defined) FormTracer definitions, \
call \!\(\*StyleBox[\"TBInfo\",FontColor->RGBColor[1, 0.5, \
0]]\)[\\\"FormTracer\\\"].\nFurthermore, \
\!\(\*StyleBox[\"TensorBases\",FontWeight->\"Bold\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\"]\)extends \
\!\(\*StyleBox[\"FormTracer\",FontWeight->\"Bold\"]\). To see all extensions, \
call \!\(\*StyleBox[\"TBInfo\",FontColor->RGBColor[1, 0.5, \
0]]\)[\\\"Extensions\\\"]\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.933918396360083*^9, 3.9339184809519243`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"102739d5-abf9-4cd7-b201-831760d9bc3c"],

Cell[BoxData["\<\"To see all (user-defined and package-defined) FormTracer \
definitions, call \\!\\(\\*StyleBox[\\\"TBInfo\\\",FontColor->RGBColor[1, \
0.5, 0]]\\)[\\\"FormTracer\\\"].\\nFurthermore, \
\\!\\(\\*StyleBox[\\\"TensorBases\\\",FontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\
StyleBox[\\\" \\\",FontWeight->\\\"Bold\\\"]\\)extends \
\\!\\(\\*StyleBox[\\\"FormTracer\\\",FontWeight->\\\"Bold\\\"]\\). To see all \
extensions, call \\!\\(\\*StyleBox[\\\"TBInfo\\\",FontColor->RGBColor[1, 0.5, \
0]]\\)[\\\"Extensions\\\"]\"\>"], "Print",
 CellChangeTimes->{{3.933918476605418*^9, 3.933918482389546*^9}, 
   3.933919667192206*^9, 3.933919699627207*^9, {3.933919781154171*^9, 
   3.933919810235797*^9}, 3.933919882769688*^9, {3.9339199438894653`*^9, 
   3.933919951635635*^9}, 3.933920004227519*^9, 3.9339201074861407`*^9, {
   3.933920201897373*^9, 3.933920258210779*^9}, 3.9339203439229736`*^9, 
   3.93392042156782*^9, 3.933920473286034*^9, 3.933920578989906*^9, {
   3.93392064769509*^9, 3.9339206574240093`*^9}, 3.9339206953040953`*^9, 
   3.933920790324881*^9, 3.933921177535849*^9, 3.933921214618534*^9, 
   3.933921245927779*^9, {3.933921276611042*^9, 3.9339212948570976`*^9}, 
   3.933921348793583*^9, {3.933921436938816*^9, 3.933921455239996*^9}, {
   3.9339218783151097`*^9, 3.933921903343731*^9}, 3.933921958707645*^9, {
   3.933922057917094*^9, 3.933922087431692*^9}, 3.933922147902053*^9, 
   3.933922268235346*^9, {3.933922327338935*^9, 3.933922348439273*^9}, {
   3.933922395602935*^9, 3.933922440629615*^9}, {3.933922685882423*^9, 
   3.933922709035887*^9}, 3.933922765515178*^9, 3.93392282863351*^9, 
   3.933922868743571*^9, 3.9339229321192403`*^9, 3.933923042960502*^9, 
   3.933923255244622*^9, 3.933923291097835*^9, 3.9339233345145073`*^9, 
   3.9339234066762457`*^9, {3.933923576280695*^9, 3.933923597944482*^9}, 
   3.9339237820439587`*^9, {3.933923834309033*^9, 3.933923850177672*^9}, 
   3.9339238817736883`*^9, 3.933923946297322*^9, 3.933923998121661*^9, {
   3.933924047318684*^9, 3.933924098866329*^9}, {3.93392416917238*^9, 
   3.9339241774091067`*^9}, 3.933936127417364*^9, 3.9339427627335467`*^9, {
   3.933942795725277*^9, 3.93394280035614*^9}, 3.933943030202971*^9, 
   3.933943076412441*^9, {3.933943155801502*^9, 3.93394318448041*^9}, 
   3.933943239397493*^9, {3.933943290904334*^9, 3.933943355392971*^9}, 
   3.933943460370068*^9, 3.93394349524382*^9, {3.933959099521126*^9, 
   3.9339591181739798`*^9}, 3.933959182120697*^9, 3.933959219992105*^9, 
   3.9339593216924686`*^9, 3.933959365109415*^9, {3.933959430354637*^9, 
   3.933959436879932*^9}, {3.933959469325207*^9, 3.933959494487677*^9}, {
   3.93399648296645*^9, 3.9339965084083652`*^9}, {3.933996542450644*^9, 
   3.933996556606247*^9}, 3.9339967049288797`*^9, 3.933996741671815*^9, 
   3.933996821874953*^9, 3.941173709077032*^9, 3.941524047361261*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"a221858b-784e-48a1-a052-ff381322f202"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<\\nTo see all momentum transformations that can be performed by \
\!\(\*StyleBox[\"TensorBases\",FontWeight->\"Bold\"]\), call \
\!\(\*StyleBox[\"TBInfo\",FontColor->RGBColor[1, 0.5, 0]]\)[\\\"Momenta\\\"].\
\\n\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.935568788650167*^9, 3.935568825777368*^9}, {
  3.935568860369876*^9, 3.9355688607935877`*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"b2853eeb-7d21-4045-928b-88a01a09d003"],

Cell[BoxData["\<\"\\nTo see all momentum transformations that can be \
performed by \
\\!\\(\\*StyleBox[\\\"TensorBases\\\",FontWeight->\\\"Bold\\\"]\\), call \
\\!\\(\\*StyleBox[\\\"TBInfo\\\",FontColor->RGBColor[1, 0.5, \
0]]\\)[\\\"Momenta\\\"].\\n\"\>"], "Print",
 CellChangeTimes->{3.941524048804544*^9},
 CellLabel->
  "During evaluation of \
In[206]:=",ExpressionUUID->"b040574c-0232-4e09-94d7-1ecfc83fd757"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FormTracer extensions", "Section",
 CellChangeTimes->{{3.933821636751761*^9, 3.933821641378183*^9}, {
  3.933837818421231*^9, 3.9338378244613*^9}, {3.933917615609971*^9, 
  3.933917618733121*^9}},ExpressionUUID->"db779555-ecf5-414b-9ffe-\
a23354af864d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GetFormTracerGroups", "::", "usage"}], "=", 
   "\"\<GetFormTracerGroups[]\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FormTracerGroupExistsQ", "::", "usage"}], "=", 
   "\"\<GetFormTracerGroupList[name_Symbol]\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetFormTracerGroupList", "::", "usage"}], "=", 
   "\"\<GetFormTracerGroupList[name_Symbol]\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AddGroupTensors", "::", "usage"}], "=", 
   "\"\<AddGroupTensors[groupDef_List]\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetFormTracerGroupConstants", "::", "usage"}], "=", 
   "\"\<GetFormTracerGroupConstants[]\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetFormTracerGroupConstant", "::", "usage"}], "=", 
   "\"\<GetFormTracerGroupConstant[name_Symbol]\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AddFormTracerGroup", "::", "usage"}], "=", 
   "\"\<AddFormTracerGroup[{ingroupName_Symbol,inkind_Symbol,inconstant_}]\>\"\
"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UseLorentzLinearitySP", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UseLorentzLinearityVec", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UseLorentzLinearity", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBInsertCombinedLorentzTensors", "::", "usage"}], "=", 
   "\"\<\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.9339176216077003`*^9, 3.933917655315116*^9}, {
  3.933917691127015*^9, 3.933917698849932*^9}, {3.9339177432568817`*^9, 
  3.933917817895645*^9}, {3.933917851229491*^9, 3.933917884757104*^9}, {
  3.936683878341463*^9, 3.936683879075419*^9}, {3.9380759367438717`*^9, 
  3.938075939218268*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"6b97ee68-1ec3-4863-b4b5-c6c874bbb5ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ShowFormTracerExtensions", "[", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "Print", "[", 
       "\"\<\!\(\*StyleBox[\"TensorBases\",FontWeight->\"Bold\"]\) defines \
the following functions in extension to \
\!\(\*StyleBox[\"FormTracer\",FontWeight->\"Bold\"]\) functionality.\nIn \
order to get detailed information on each of those, please call their usage \
messages, e.g. \!\(\*StyleBox[\"GetFormTracerGroups\",FontColor->RGBColor[1, \
0.5, 0]]\)::\!\(\*StyleBox[\"usage\",FontColor->RGBColor[0, 0, 1]]\).\n\n\!\(\
\*StyleBox[\"GetFormTracerGroups\",FontColor->RGBColor[1, 0.5, 0]]\),\n\
\!\(\*StyleBox[\"FormTracerGroupExists\",FontColor->RGBColor[1, 0.5, 0]]\),\n\
\!\(\*StyleBox[\"GetFormTracerGroupList\",FontColor->RGBColor[1, 0.5, 0]]\),\n\
\!\(\*StyleBox[\"AddGroupTensors\",FontColor->RGBColor[1, 0.5, 0]]\),\n\
\!\(\*StyleBox[\"AddFormTracerGroup\",FontColor->RGBColor[1, 0.5, 0]]\),\n\
\!\(\*StyleBox[\"GetFormTracerGroupConstants\",FontColor->RGBColor[1, 0.5, \
0]]\),\n\!\(\*StyleBox[\"GetFormTracerGroupConstant\",FontColor->RGBColor[1, \
0.5, 0]]\),\n\!\(\*StyleBox[\"UseLorentzLinearitySP\",FontColor->RGBColor[1, \
0.5, 0]]\),\n\!\(\*StyleBox[\"UseLorentzLinearityVec\",FontColor->RGBColor[1, \
0.5, 0]]\),\n\!\(\*StyleBox[\"UseLorentzLinearity\",FontColor->RGBColor[1, \
0.5, 0]]\),\n\
\!\(\*StyleBox[\"TBInsertCombinedLorentzTensors\",FontColor->RGBColor[1, 0.5, \
0]]\)\>\"", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.933919279677336*^9, 3.933919293420315*^9}, {
   3.933924270312574*^9, 3.93392427312786*^9}, {3.9339243261629987`*^9, 
   3.93392443111744*^9}, {3.933924475496725*^9, 3.933924606583571*^9}, 
   3.936683879980558*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"9d748520-463b-4673-8dbf-05d7992768a8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GetFormTracerGroups", "[", "]"}], ":=", 
   "FormTracer`Private`groupNames"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FormTracerGroupExistsQ", "[", "name_Symbol", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "@", 
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"GetFormTracerGroups", "[", "]"}], ",", "name"}], "]"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", "False", "]"}], ";"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", "True", "]"}], ";"}]}], "\[IndentingNewLine]",
        "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetFormTracerGroupTypes", "[", "]"}], ":=", 
   "FormTracer`Private`groupTypes"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetFormTracerGroupNamesAndTypes", "[", "]"}], ":=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
     "FormTracer`Private`groupNames", ",", "FormTracer`Private`groupTypes"}], 
     "}"}], "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetFormTracerGroupList", "[", "name_Symbol", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "idx", ",", "type", ",", "constant", ",", "mRules", ",", "funcs"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "@", 
         RowBox[{"FormTracerGroupExistsQ", "[", "name", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Logic error: \>\"", "~~", 
           RowBox[{"ToString", "[", "name", "]"}], "~~", 
           "\"\< is not an already defined group\>\""}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"idx", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Position", "[", 
          RowBox[{"FormTracer`Private`groupNames", ",", "name"}], "]"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"type", "=", 
       RowBox[{"FormTracer`Private`groupTypes", "[", 
        RowBox[{"[", "idx", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"constant", "=", 
       RowBox[{
        RowBox[{"FormTracer`Private`groupConstantsTable", "[", 
         RowBox[{"[", "idx", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mRules", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
         "Normal", "[", 
          "FormTracer`Private`groupTensorReplacementRulesOutput", "]"}], ",", 
         
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"#", ",", "name", ",", "Infinity"}], "]"}], "&"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"funcs", "=", 
       RowBox[{
        RowBox[{"mRules", "//.", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a_", ":>", "b_"}], ")"}], ":>", "b"}]}], "//.", 
        RowBox[{
         RowBox[{"a_", "[", 
          RowBox[{"b___", ",", "FormTracer`Private`a$"}], "]"}], "->", 
         RowBox[{"a", "[", 
          RowBox[{"b", ",", "i", ",", "j", ",", "k"}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"type", ",", " ", 
          RowBox[{"{", 
           RowBox[{"name", ",", " ", "constant"}], "}"}]}], "}"}], ",", 
        "funcs"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AddGroupTensors", "[", "groupDef_List", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "alreadyPresent", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"alreadyPresent", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
       "GetFormTracerGroupList", ",", "FormTracer`Private`groupNames"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DefineGroupTensors", "[", 
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{"alreadyPresent", ",", "\[IndentingNewLine]", 
        RowBox[{"{", "groupDef", "}"}]}], "\[IndentingNewLine]", "]"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.933835300276236*^9, 3.933835319588954*^9}, {
   3.933835402412833*^9, 3.933835521964748*^9}, {3.9338355673727617`*^9, 
   3.933835595598947*^9}, {3.933835632765954*^9, 3.933835674686392*^9}, {
   3.933835722447042*^9, 3.9338357523030853`*^9}, {3.9338357838314953`*^9, 
   3.933835806143768*^9}, {3.933836209446793*^9, 3.933836328309881*^9}, {
   3.93383642218978*^9, 3.9338365354862623`*^9}, {3.933836616166263*^9, 
   3.933836683500967*^9}, 3.933836774398122*^9, {3.933852886410634*^9, 
   3.933852903378417*^9}, {3.933856814819769*^9, 3.933856878802391*^9}, {
   3.933913765005976*^9, 3.933913784302087*^9}, 3.933917715589666*^9, {
   3.94122221570605*^9, 3.9412223407735443`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"f56832ff-a350-4aa1-8112-dc4f04970905"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RemoveGroupTensor", "[", "name_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"alreadyPresent", ",", "obj"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"alreadyPresent", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
        "GetFormTracerGroupList", ",", "FormTracer`Private`groupNames"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"obj", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"alreadyPresent", ",", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"#", ",", "name", ",", "Infinity"}], "]"}], "&"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "obj", "]"}], "===", "0"}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<No group called \>\"", "<>", 
           RowBox[{"ToString", "[", "name", "]"}], "<>", 
           "\"\< present!\>\""}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"DefineGroupTensors", "[", "\[IndentingNewLine]", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"alreadyPresent", ",", 
         RowBox[{"obj", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.950710593961*^9, 3.950710734744225*^9}, {
  3.950710784516275*^9, 3.950710799016094*^9}, {3.950710897216195*^9, 
  3.950710911968144*^9}, {3.9507109465435963`*^9, 
  3.950710954924294*^9}},ExpressionUUID->"e50ee3b0-10d2-4eed-b352-\
52a93420a5f3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetNf", "[", "3", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RemoveGroupTensor", "[", "flavor", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Unprotect", "[", "Nf", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ClearAll", "[", "Nf", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Nf", "=", "3"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Protect", "[", "Nf", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"AddGroupTensors", "[", 
      RowBox[{"{", 
       RowBox[{"FormTracer`SU3fundexplicit", ",", " ", 
        RowBox[{"{", 
         RowBox[{"flavor", ",", "3"}], "}"}], ",", " ", 
        RowBox[{"deltaAdjFlav", "[", 
         RowBox[{"a", ",", " ", "b"}], "]"}], ",", " ", 
        RowBox[{"FFlav", "[", 
         RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}], ",", " ", 
        RowBox[{"deltaFundFlav", "[", 
         RowBox[{"a", ",", " ", "b"}], "]"}], ",", " ", 
        RowBox[{"TFlav", "[", 
         RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}], ",", " ", 
        RowBox[{"epsAdjFlav", "[", 
         RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}], ",", 
        RowBox[{"epsFundFlav", "[", 
         RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}]}], "}"}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetNf", "[", "2", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RemoveGroupTensor", "[", "flavor", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Unprotect", "[", "Nf", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ClearAll", "[", "Nf", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Nf", "=", "2"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Protect", "[", "Nf", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"AddGroupTensors", "[", 
      RowBox[{"{", 
       RowBox[{"FormTracer`SU2fundexplicit", ",", " ", 
        RowBox[{"{", 
         RowBox[{"flavor", ",", "2"}], "}"}], ",", " ", 
        RowBox[{"deltaAdjFlav", "[", 
         RowBox[{"a", ",", " ", "b"}], "]"}], ",", " ", 
        RowBox[{"FFlav", "[", 
         RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}], ",", " ", 
        RowBox[{"deltaFundFlav", "[", 
         RowBox[{"a", ",", " ", "b"}], "]"}], ",", " ", 
        RowBox[{"TFlav", "[", 
         RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}], ",", " ", 
        RowBox[{"epsAdjFlav", "[", 
         RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}], ",", 
        RowBox[{"epsFundFlav", "[", 
         RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}]}], "}"}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetNf", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RemoveGroupTensor", "[", "flavor", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ClearAll", "[", "Nf", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AddFormTracerGroup", "[", 
      RowBox[{"{", 
       RowBox[{"flavor", ",", "SUNfund", ",", "Nf"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetNf", "[", "i_", "]"}], ":=", 
  RowBox[{
  "Print", "[", 
   "\"\<Can only set flavor group number to 2 or 3; to set it to Nf, use \
SetNf[]\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.950710994988845*^9, 3.950711284557118*^9}, {
  3.950711328576537*^9, 3.950711367240556*^9}, {3.950711444910448*^9, 
  3.950711462411079*^9}},ExpressionUUID->"d6b6bbb9-3345-45a0-85dd-\
a35cd6fbe82c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetNc", "[", "3", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RemoveGroupTensor", "[", "color", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Unprotect", "[", "Nc", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ClearAll", "[", "Nc", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Nc", "=", "3"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Protect", "[", "Nc", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"AddGroupTensors", "[", 
      RowBox[{"{", 
       RowBox[{"FormTracer`SU3fundexplicit", ",", " ", 
        RowBox[{"{", 
         RowBox[{"color", ",", "3"}], "}"}], ",", " ", 
        RowBox[{"deltaAdjCol", "[", 
         RowBox[{"a", ",", " ", "b"}], "]"}], ",", " ", 
        RowBox[{"FCol", "[", 
         RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}], ",", " ", 
        RowBox[{"deltaFundCol", "[", 
         RowBox[{"a", ",", " ", "b"}], "]"}], ",", " ", 
        RowBox[{"TCol", "[", 
         RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}], ",", 
        RowBox[{"epsAdjCol", "[", 
         RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}], ",", " ", 
        RowBox[{"epsFundCol", "[", 
         RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}]}], "}"}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetNc", "[", "2", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RemoveGroupTensor", "[", "color", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Unprotect", "[", "Nc", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ClearAll", "[", "Nc", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Nc", "=", "2"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Protect", "[", "Nc", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"AddGroupTensors", "[", 
      RowBox[{"{", 
       RowBox[{"FormTracer`SU2fundexplicit", ",", " ", 
        RowBox[{"{", 
         RowBox[{"color", ",", "2"}], "}"}], ",", " ", 
        RowBox[{"deltaAdjCol", "[", 
         RowBox[{"a", ",", " ", "b"}], "]"}], ",", " ", 
        RowBox[{"FCol", "[", 
         RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}], ",", " ", 
        RowBox[{"deltaFundCol", "[", 
         RowBox[{"a", ",", " ", "b"}], "]"}], ",", " ", 
        RowBox[{"TCol", "[", 
         RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}], ",", 
        RowBox[{"epsAdjCol", "[", 
         RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}], ",", " ", 
        RowBox[{"epsFundCol", "[", 
         RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}]}], "}"}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetNc", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RemoveGroupTensor", "[", "color", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Unprotect", "[", "Nc", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ClearAll", "[", "Nc", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Protect", "[", "Nc", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"AddFormTracerGroup", "[", 
      RowBox[{"{", 
       RowBox[{"color", ",", "SUNfund", ",", "Nc"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetNc", "[", "i_", "]"}], ":=", 
  RowBox[{
  "Print", "[", 
   "\"\<Can only set color group number to 2 or 3; to set it to Nc, use \
SetNc[]\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{
  3.9507111810279284`*^9, {3.950711262752727*^9, 3.950711277944421*^9}, {
   3.950711374248913*^9, 
   3.950711437614518*^9}},ExpressionUUID->"aa92b93a-9b79-4b4b-b856-\
7897148043bc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GetFormTracerGroupConstants", "[", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{"FormTracer`Private`groupConstantsTable", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetFormTracerGroupConstant", "[", "name_Symbol", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "idx", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"idx", "=", 
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"GetFormTracerGroups", "[", "]"}], ",", "name"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{
       RowBox[{"GetFormTracerGroupConstants", "[", "]"}], "[", 
       RowBox[{"[", "idx", "]"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.9338750040460367`*^9, 3.933875079285588*^9}, {
  3.933908556334145*^9, 3.933908623926667*^9}, {3.933908699246624*^9, 
  3.93390872285395*^9}, {3.933913808748081*^9, 3.933913822529798*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"dd937277-d672-41e4-9591-3f9cf27c3310"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MakeConstant", "[", "name_Symbol", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "stripped", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Return", "[", 
      RowBox[{"Symbol", "[", 
       RowBox[{"SymbolName", "[", "name", "]"}], "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MakeConstant", "[", "number_Integer", "]"}], ":=", "number"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.933908194062007*^9, 3.933908206406273*^9}, {
   3.933913953848399*^9, 3.933914003705154*^9}, {3.9339145687093363`*^9, 
   3.933914590797891*^9}, {3.933918111074504*^9, 3.9339181199786572`*^9}, {
   3.9366834324421186`*^9, 3.936683442106833*^9}, 3.9366839052762337`*^9, {
   3.938052485920335*^9, 3.93805250237087*^9}, {3.9411741759346867`*^9, 
   3.941174194095202*^9}, 3.941221564141368*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"f4b4be25-93f6-4d3d-9c1f-25ef9d1ee98e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AddFormTracerGroup", "[", 
    RowBox[{"{", 
     RowBox[{"ingroupName_Symbol", ",", "inkind_Symbol", ",", "inconstant_"}],
      "}"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "groupName", ",", "kind", ",", "constant", ",", "args", ",", 
       "\[IndentingNewLine]", "a", ",", "b", ",", "c"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"groupName", "=", 
       RowBox[{"Symbol", "[", 
        RowBox[{"SymbolName", "[", "ingroupName", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kind", "=", 
       RowBox[{"Symbol", "[", 
        RowBox[{"\"\<FormTracer`\>\"", "~~", 
         RowBox[{"SymbolName", "[", "inkind", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"constant", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Global`MakeConstant", "[", "inconstant", "]"}], "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"groupName", "===", "color"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Unprotect", "[", 
          RowBox[{"color", ",", "Nc"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Not", "@", 
            RowBox[{"FormTracerGroupExistsQ", "[", "color", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ClearAll", "[", "color", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
            "Print", "[", 
             "\"\<\!\(\*StyleBox[\"Group\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"with\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"name\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"color\",FontSize->10,FontColor->RGBColor[0.\
5, 0, 0.5]]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"undefined\",FontSize->10]\)\!\(\*StyleBox[\
\",\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"using\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"default\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"names\",FontSize->10]\)\!\(\*StyleBox[\".\"\
,FontSize->10]\)\>\"", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"IntegerQ", "[", "Nc", "]"}], "&&", 
               RowBox[{"2", "<=", "Nc", "<=", "3"}]}], ",", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<Nc is set to \>\"", ",", " ", "Nc"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"ClearAll", "[", "Nc", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AddGroupTensors", "[", 
             RowBox[{"{", 
              RowBox[{"FormTracer`SUNfund", ",", " ", 
               RowBox[{"{", 
                RowBox[{"color", ",", "Global`Nc"}], "}"}], ",", " ", 
               RowBox[{"deltaAdjCol", "[", 
                RowBox[{"a", ",", " ", "b"}], "]"}], ",", " ", 
               RowBox[{"FCol", "[", 
                RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}], ",", " ", 
               
               RowBox[{"deltaFundCol", "[", 
                RowBox[{"a", ",", " ", "b"}], "]"}], ",", " ", 
               RowBox[{"TCol", "[", 
                RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}], ",", 
               RowBox[{"epsAdjCol", "[", 
                RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}], ",", " ", 
               
               RowBox[{"epsFundCol", "[", 
                RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}]}], "}"}], 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Protect", "[", 
          RowBox[{"color", ",", "Nc"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"groupName", "===", "flavor"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Unprotect", "[", 
          RowBox[{"flavor", ",", "Nf"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Not", "@", 
            RowBox[{"FormTracerGroupExistsQ", "[", "flavor", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ClearAll", "[", "flavor", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
            "Print", "[", 
             "\"\<\!\(\*StyleBox[\"Group\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"with\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"name\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"flavor\",FontSize->10,FontColor->RGBColor[\
0.5, 0, 0.5]]\)\!\(\*StyleBox[\" \",FontSize->10]\)\!\(\*StyleBox[\"undefined\
\",FontSize->10]\)\!\(\*StyleBox[\",\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"using\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"default\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"names\",FontSize->10]\)\!\(\*StyleBox[\".\"\
,FontSize->10]\)\>\"", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"IntegerQ", "[", "Nf", "]"}], "&&", 
               RowBox[{"2", "<=", "Nf", "<=", "3"}]}], ",", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<Nc is set to \>\"", ",", " ", "Nc"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"ClearAll", "[", "Nf", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AddGroupTensors", "[", 
             RowBox[{"{", 
              RowBox[{"FormTracer`SUNfund", ",", " ", 
               RowBox[{"{", 
                RowBox[{"flavor", ",", "Global`Nf"}], "}"}], ",", " ", 
               RowBox[{"deltaAdjFlav", "[", 
                RowBox[{"a", ",", " ", "b"}], "]"}], ",", " ", 
               RowBox[{"FFlav", "[", 
                RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}], ",", " ", 
               
               RowBox[{"deltaFundFlav", "[", 
                RowBox[{"a", ",", " ", "b"}], "]"}], ",", " ", 
               RowBox[{"TFlav", "[", 
                RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}], ",", " ", 
               
               RowBox[{"epsAdjFlav", "[", 
                RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}], ",", 
               RowBox[{"epsFundFlav", "[", 
                RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}]}], "}"}], 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Protect", "[", 
          RowBox[{"flavor", ",", "Nf"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Unprotect", "[", 
       RowBox[{"Evaluate", "[", "groupName", "]"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "@", 
         RowBox[{"FormTracerGroupExistsQ", "[", "groupName", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ClearAll", "[", 
          RowBox[{"Evaluate", "[", "groupName", "]"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<\!\(\*StyleBox[\"Group\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"with\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"name\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\>\"", "~~", 
           RowBox[{"ToString", "[", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"ToString", "[", "groupName", "]"}], ",", "Purple"}], 
             "]"}], "]"}], "~~", 
           "\"\<\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"undefined\",FontSize->10]\)\!\(\*StyleBox[\
\",\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"using\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"default\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"names\",FontSize->10]\)\!\(\*StyleBox[\".\"\
,FontSize->10]\)\>\""}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerQ", "[", "constant", "]"}], "&&", 
            RowBox[{"2", "<=", "constant", "<=", "3"}]}], ",", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<Group constant is set to \>\"", ",", " ", "constant"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Unprotect", "[", 
             RowBox[{"Evaluate", "[", "constant", "]"}], "]"}], ";", 
            RowBox[{"ClearAll", "[", 
             RowBox[{"Evaluate", "[", "constant", "]"}], "]"}]}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"args", "=", 
          RowBox[{"{", 
           RowBox[{"kind", ",", " ", 
            RowBox[{"{", 
             RowBox[{"groupName", ",", "constant"}], "}"}], ",", " ", 
            RowBox[{"deltaAdj", "[", 
             RowBox[{"groupName", ",", "a", ",", " ", "b"}], "]"}], ",", " ", 
            
            RowBox[{"F", "[", 
             RowBox[{"groupName", ",", "a", ",", " ", "b", ",", " ", "c"}], 
             "]"}], ",", " ", 
            RowBox[{"deltaFund", "[", 
             RowBox[{"groupName", ",", "a", ",", " ", "b"}], "]"}], ",", " ", 
            
            RowBox[{"T", "[", 
             RowBox[{"groupName", ",", "a", ",", " ", "b", ",", " ", "c"}], 
             "]"}], ",", 
            RowBox[{"epsAdj", "[", 
             RowBox[{"groupName", ",", "a", ",", " ", "b", ",", " ", "c"}], 
             "]"}], ",", " ", 
            RowBox[{"epsFund", "[", 
             RowBox[{"groupName", ",", "a", ",", " ", "b", ",", " ", "c"}], 
             "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AddGroupTensors", "@", "args"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "@", 
         RowBox[{"IntegerQ", "[", "constant", "]"}]}], ",", 
        RowBox[{"Protect", "[", "constant", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Protect", "[", 
       RowBox[{"Evaluate", "[", "groupName", "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.933907304542448*^9, 3.933907406255789*^9}, {
   3.933907538943683*^9, 3.933907742344888*^9}, {3.9339078006411457`*^9, 
   3.933907842576613*^9}, {3.933908241121593*^9, 3.933908345657202*^9}, {
   3.933908414009386*^9, 3.933908425162029*^9}, {3.933913316922656*^9, 
   3.933913322819392*^9}, {3.933913418285419*^9, 3.9339134186121902`*^9}, {
   3.933914020718803*^9, 3.933914023489592*^9}, {3.933914083803967*^9, 
   3.933914104296892*^9}, {3.933914158676682*^9, 3.933914163485305*^9}, {
   3.933914235045306*^9, 3.933914263685003*^9}, {3.933914316210216*^9, 
   3.93391431817527*^9}, {3.933914396416908*^9, 3.933914422318817*^9}, {
   3.933914515307384*^9, 3.933914564592965*^9}, {3.933914658622121*^9, 
   3.933914660014269*^9}, {3.93391470338391*^9, 3.9339147128241596`*^9}, {
   3.933915441674728*^9, 3.933915459876303*^9}, {3.933917721495549*^9, 
   3.933917735539371*^9}, {3.93391812321207*^9, 3.933918188099464*^9}, 
   3.9339182560672493`*^9, {3.936068365393424*^9, 3.936068474915547*^9}, {
   3.936068538028059*^9, 3.936068576165761*^9}, {3.936069470350368*^9, 
   3.9360695301834993`*^9}, {3.936683138610075*^9, 3.936683148929987*^9}, 
   3.936683207546241*^9, {3.936683300262734*^9, 3.9366833295444803`*^9}, {
   3.936683388186541*^9, 3.936683391050086*^9}, 3.936683807309517*^9, {
   3.9366838742291107`*^9, 3.936683875412505*^9}, {3.936683907808991*^9, 
   3.9366839493092613`*^9}, {3.938061287242773*^9, 3.938061339342564*^9}, {
   3.938061399490547*^9, 3.938061408107038*^9}, {3.93806144601433*^9, 
   3.938061449766081*^9}, {3.93806148085472*^9, 3.93806149656287*^9}, {
   3.941174029578071*^9, 3.941174037478776*^9}, {3.941174096503346*^9, 
   3.941174110078786*^9}, {3.941174166125162*^9, 3.941174168131057*^9}, {
   3.941174218332019*^9, 3.9411742184830027`*^9}, {3.9411743044237537`*^9, 
   3.941174444688097*^9}, {3.941174992135351*^9, 3.9411749986227217`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"136f0a81-1f78-410c-a510-fd6e05afdfe1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{
      "Normal", "[", "FormTracer`Private`lorentzTensorReplacementRulesInput", 
       "]"}], "]"}], "==", "0"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
     "Print", "[", 
      "\"\<\!\(\*StyleBox[\"Lorentz\",FontSize->10,FontColor->RGBColor[0.5, \
0, 0.5]]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"group\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"undefined\",FontSize->10]\)\!\(\*StyleBox[\
\",\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"using\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"default\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)\!\(\*StyleBox[\"names\",FontSize->10]\)\!\(\*StyleBox[\".\"\
,FontSize->10]\)\>\"", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"DefineLorentzTensors", "[", 
      RowBox[{
       RowBox[{"deltaLorentz", "[", 
        RowBox[{"mu", ",", " ", "nu"}], "]"}], ",", " ", 
       RowBox[{"vec", "[", 
        RowBox[{"p", ",", " ", "mu"}], "]"}], ",", " ", 
       RowBox[{"sp", "[", 
        RowBox[{"p", ",", " ", "q"}], "]"}], ",", " ", 
       RowBox[{"epsLorentz", "[", 
        RowBox[{"i", ",", " ", "j", ",", " ", "k"}], "]"}], ",", " ", 
       RowBox[{"deltaDirac", "[", 
        RowBox[{"i", ",", " ", "j"}], "]"}], ",", " ", 
       RowBox[{"gamma", "[", 
        RowBox[{"mu", ",", " ", "i", ",", " ", "j"}], "]"}], ",", " ", 
       RowBox[{"gamma5", "[", 
        RowBox[{"i", ",", " ", "j"}], "]"}], ",", " ", 
       RowBox[{"vecs", "[", 
        RowBox[{"p", ",", " ", "mu"}], "]"}], ",", " ", 
       RowBox[{"sps", "[", 
        RowBox[{"p", ",", " ", "q"}], "]"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.933834295053794*^9, 3.933834429108039*^9}, {
   3.933834551932987*^9, 3.9338345891340857`*^9}, {3.9338363555816803`*^9, 
   3.933836395693281*^9}, {3.933836573629896*^9, 3.933836582756948*^9}, 
   3.9338366309095507`*^9, 3.933836687479423*^9, {3.933836730440038*^9, 
   3.933837102078774*^9}, {3.933837150760655*^9, 3.933837323010747*^9}, {
   3.933837373189653*^9, 3.93383742724104*^9}, {3.933837732507954*^9, 
   3.933837733466455*^9}, {3.933838087330298*^9, 3.933838104846426*^9}, {
   3.933844911308015*^9, 3.933844923826456*^9}, {3.933852555303521*^9, 
   3.933852569238021*^9}, {3.933853415964135*^9, 3.933853546002076*^9}, {
   3.9338536399950323`*^9, 3.933853648320397*^9}, {3.933853800354845*^9, 
   3.933853914227417*^9}, {3.93385521431513*^9, 3.933855216770421*^9}, {
   3.933856101698318*^9, 3.933856138521762*^9}, {3.933856843548977*^9, 
   3.933856856099874*^9}, {3.933908741439818*^9, 3.933908741607065*^9}, {
   3.9339099661287107`*^9, 3.933909987742989*^9}, {3.9339131892849083`*^9, 
   3.933913200325548*^9}, {3.93391837430237*^9, 3.933918378646865*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"1d0a7378-10e8-44e5-ac34-cc759cb2766f"],

Cell[BoxData["\<\"\\!\\(\\*StyleBox[\\\"Lorentz\\\",FontSize->10,FontColor->\
RGBColor[0.5, 0, 0.5]]\\)\\!\\(\\*StyleBox[\\\" \
\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\"group\\\",FontSize->10]\\)\\!\\(\\*\
StyleBox[\\\" \
\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\"undefined\\\",FontSize->10]\\)\\!\\\
(\\*StyleBox[\\\",\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\" \
\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\"using\\\",FontSize->10]\\)\\!\\(\\*\
StyleBox[\\\" \
\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\"default\\\",FontSize->10]\\)\\!\\(\
\\*StyleBox[\\\" \
\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\"names\\\",FontSize->10]\\)\\!\\(\\*\
StyleBox[\\\".\\\",FontSize->10]\\)\"\>"], "Print",
 CellChangeTimes->{3.9411737178513527`*^9, 3.941524047500401*^9},
 CellLabel->
  "During evaluation of \
In[34]:=",ExpressionUUID->"dba95bb8-bad2-470c-9618-59bee8165789"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBInsertOutputNaming", "[", "expr_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "outputRulesLorentzTensors", ",", "outputRulesGroupTensors", ",", 
       "outputRules"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"outputRulesLorentzTensors", "=", 
       RowBox[{
        RowBox[{
        "Normal", "[", 
         "FormTracer`Private`lorentzTensorReplacementRulesOutput", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a_", "[", "c___", "]"}], ":>", "b_"}], ")"}], ":>", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Symbol", "[", 
              RowBox[{"\"\<Global`TB\>\"", "~~", 
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{
                  RowBox[{"ToString", "[", "a", "]"}], ",", "\"\<FTx\>\""}], 
                 "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "[", "c", "]"}], ":>",
             "b"}], ")"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"outputRulesGroupTensors", "=", 
       RowBox[{
        RowBox[{
        "Normal", "[", "FormTracer`Private`groupTensorReplacementRulesOutput",
          "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a_", "[", "c___", "]"}], ":>", "b_"}], ")"}], ":>", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Symbol", "[", 
              RowBox[{"\"\<Global`TB\>\"", "~~", 
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{
                  RowBox[{"ToString", "[", "a", "]"}], ",", "\"\<FTx\>\""}], 
                 "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "[", "c", "]"}], ":>",
             "b"}], ")"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"outputRules", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"outputRulesLorentzTensors", ",", "outputRulesGroupTensors"}],
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"expr", "//.", "outputRules"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.933842067847412*^9, 3.933842095282273*^9}, {
   3.933844318967507*^9, 3.93384434263183*^9}, {3.93384447218394*^9, 
   3.9338444781195593`*^9}, {3.933844615911542*^9, 3.933844621208674*^9}, {
   3.933844679591748*^9, 3.9338446797035027`*^9}, {3.933855368834605*^9, 
   3.933855375514035*^9}, {3.9338554087622337`*^9, 3.933855460394687*^9}, 
   3.9339147676758432`*^9, 3.933922615036984*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"a4e4af53-1b25-4820-aafe-c9c3ee5db581"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TBInsertLorentzNames", "[", "expr_", "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "outputNameRulesLorentzTensors", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"outputNameRulesLorentzTensors", "=", 
      RowBox[{
       RowBox[{
       "Normal", "[", 
        "FormTracer`Private`lorentzTensorReplacementRulesOutput", "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a_", "[", "c___", "]"}], ":>", 
           RowBox[{"b_", "[", "d___", "]"}]}], ")"}], ":>", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Symbol", "[", 
            RowBox[{"\"\<Global`TB\>\"", "~~", 
             RowBox[{
              RowBox[{"StringSplit", "[", 
               RowBox[{
                RowBox[{"ToString", "[", "a", "]"}], ",", "\"\<FTx\>\""}], 
               "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], ":>", "b"}], 
          ")"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"expr", "//.", "outputNameRulesLorentzTensors"}], "]"}], "]"}],
      ";"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.933855466097767*^9, 3.933855502601494*^9}, {
   3.933855551330189*^9, 3.933855553377388*^9}, 3.933914772638819*^9, 
   3.933922619628879*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"f42e7fcf-aed4-4ea5-bb46-42d923e9aecb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Unprotect", "[", 
   RowBox[{
   "UseLorentzLinearity", ",", "UseLorentzLinearitySP", ",", 
    "UseLorentzLinearityVec"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.935485057274294*^9, 3.935485061586591*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"a12fffeb-b23c-482f-b3c6-974cd4d90c8e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"UseLorentzLinearitySP", "[", "expr_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eval", ",", 
       RowBox[{"conv", "=", "TBInsertLorentzNames"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SetAttributes", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"conv", "[", "TBsps", "]"}], "]"}], ",", "Orderless"}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"SetAttributes", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"conv", "[", "TBsp", "]"}], "]"}], ",", "Orderless"}], "]"}],
       ";", "\n", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"conv", "[", "TBsp", "]"}], "[", 
        RowBox[{"0", ",", "a_"}], "]"}], "=", "0"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"conv", "[", "TBsp", "]"}], "[", 
        RowBox[{"a_", ",", "0"}], "]"}], "=", "0"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"conv", "[", "TBsp", "]"}], "[", 
        RowBox[{"0", ",", "0"}], "]"}], "=", "0"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"conv", "[", "TBsps", "]"}], "[", 
        RowBox[{"0", ",", "a_"}], "]"}], "=", "0"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"conv", "[", "TBsps", "]"}], "[", 
        RowBox[{"a_", ",", "0"}], "]"}], "=", "0"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"conv", "[", "TBsps", "]"}], "[", 
        RowBox[{"0", ",", "0"}], "]"}], "=", "0"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"conv", "[", "TBsp", "]"}], "[", 
        RowBox[{"a_", ",", 
         RowBox[{"b_", "+", "c_"}]}], "]"}], ":=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"conv", "[", "TBsp", "]"}], "[", 
         RowBox[{"a", ",", "b"}], "]"}], "+", 
        RowBox[{
         RowBox[{"conv", "[", "TBsp", "]"}], "[", 
         RowBox[{"a", ",", "c"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"conv", "[", "TBsp", "]"}], "[", 
        RowBox[{"a_", ",", 
         RowBox[{
          RowBox[{"-", "1"}], "b_"}]}], "]"}], ":=", " ", 
       RowBox[{"-", 
        RowBox[{
         RowBox[{"conv", "[", "TBsp", "]"}], "[", 
         RowBox[{"a", ",", "b"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"conv", "[", "TBsp", "]"}], "[", 
        RowBox[{"b_", ",", 
         RowBox[{
          RowBox[{"a_", "?", "NumericQ"}], " ", "c_"}]}], "]"}], ":=", " ", 
       RowBox[{"a", " ", 
        RowBox[{
         RowBox[{"conv", "[", "TBsp", "]"}], "[", 
         RowBox[{"b", ",", "c"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"conv", "[", "TBsps", "]"}], "[", 
        RowBox[{"a_", ",", 
         RowBox[{"b_", "+", "c_"}]}], "]"}], ":=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"conv", "[", "TBsps", "]"}], "[", 
         RowBox[{"a", ",", "b"}], "]"}], "+", 
        RowBox[{
         RowBox[{"conv", "[", "TBsps", "]"}], "[", 
         RowBox[{"a", ",", "c"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"conv", "[", "TBsps", "]"}], "[", 
        RowBox[{"a_", ",", 
         RowBox[{
          RowBox[{"-", "1"}], "b_"}]}], "]"}], ":=", " ", 
       RowBox[{"-", 
        RowBox[{
         RowBox[{"conv", "[", "TBsps", "]"}], "[", 
         RowBox[{"a", ",", "b"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"conv", "[", "TBsps", "]"}], "[", 
        RowBox[{"b_", ",", 
         RowBox[{
          RowBox[{"a_", "?", "NumericQ"}], " ", "c_"}]}], "]"}], ":=", " ", 
       RowBox[{"a", " ", 
        RowBox[{
         RowBox[{"conv", "[", "TBsps", "]"}], "[", 
         RowBox[{"b", ",", "c"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"eval", "=", 
       RowBox[{"Evaluate", "[", "expr", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ClearAll", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"conv", "[", "TBsps", "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"conv", "[", "TBsp", "]"}], "]"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "eval", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.933855239097413*^9, 3.933855301795165*^9}, {
   3.933855338411009*^9, 3.933855351161422*^9}, {3.933855512745851*^9, 
   3.933855557753594*^9}, {3.933855678473957*^9, 3.933855678878*^9}, {
   3.933855740523931*^9, 3.933855757692075*^9}, {3.93385578896357*^9, 
   3.933855928908634*^9}, {3.933914777314333*^9, 3.933914814860846*^9}, {
   3.933914875597127*^9, 3.933914907150703*^9}, {3.93391493821709*^9, 
   3.933914953571369*^9}, 3.9339150315241547`*^9, 3.934347466796313*^9},
 CellLabel->"In[38]:=",ExpressionUUID->"941a5f15-7c76-4ca5-81aa-4e5a668fdb3e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"UseLorentzLinearityVec", "[", "expr_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eval", ",", 
       RowBox[{"conv", "=", "TBInsertLorentzNames"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"conv", "[", "TBvec", "]"}], "[", 
        RowBox[{"0", ",", "mu_"}], "]"}], "=", "0"}], ";", "\n", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"conv", "[", "TBvecs", "]"}], "[", 
        RowBox[{"0", ",", "mu_"}], "]"}], "=", "0"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"conv", "[", "TBvecs", "]"}], "[", 
        RowBox[{"p_", ",", "0"}], "]"}], "=", "0"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"conv", "[", "TBvec", "]"}], "[", 
        RowBox[{
         RowBox[{"p_", "+", "q_"}], ",", "mu_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"conv", "[", "TBvec", "]"}], "[", 
         RowBox[{"p", ",", "mu"}], "]"}], "+", 
        RowBox[{
         RowBox[{"conv", "[", "TBvec", "]"}], "[", 
         RowBox[{"q", ",", "mu"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"conv", "[", "TBvec", "]"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], " ", "p_"}], ",", "mu_"}], "]"}], ":=", " ", 
       RowBox[{"-", 
        RowBox[{
         RowBox[{"conv", "[", "TBvec", "]"}], "[", 
         RowBox[{"p", ",", "mu"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"conv", "[", "TBvec", "]"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"n_", "?", "NumericQ"}], " ", "a_"}], ",", "mu_"}], "]"}], ":=", 
       RowBox[{"n", " ", 
        RowBox[{
         RowBox[{"conv", "[", "TBvec", "]"}], "[", 
         RowBox[{"a", ",", "mu"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"conv", "[", "TBvecs", "]"}], "[", 
        RowBox[{
         RowBox[{"p_", "+", "q_"}], ",", "mu_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"conv", "[", "TBvecs", "]"}], "[", 
         RowBox[{"p", ",", "mu"}], "]"}], "+", 
        RowBox[{
         RowBox[{"conv", "[", "TBvecs", "]"}], "[", 
         RowBox[{"q", ",", "mu"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"conv", "[", "TBvecs", "]"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], " ", "p_"}], ",", "mu_"}], "]"}], ":=", " ", 
       RowBox[{"-", 
        RowBox[{
         RowBox[{"conv", "[", "TBvecs", "]"}], "[", 
         RowBox[{"p", ",", "mu"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"conv", "[", "TBvecs", "]"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"n_", "?", "NumericQ"}], " ", "a_"}], ",", "mu_"}], "]"}], ":=", 
       RowBox[{"n", " ", 
        RowBox[{
         RowBox[{"conv", "[", "TBvecs", "]"}], "[", 
         RowBox[{"a", ",", "mu"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"eval", "=", 
       RowBox[{"Evaluate", "[", "expr", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ClearAll", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"conv", "[", "TBvec", "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"conv", "[", "TBvecs", "]"}], "]"}]}], "\[IndentingNewLine]",
        "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "eval", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.933855239097413*^9, 3.933855301795165*^9}, {
   3.933855338411009*^9, 3.933855351161422*^9}, {3.933855512745851*^9, 
   3.933855557753594*^9}, {3.933855678473957*^9, 3.933855678878*^9}, {
   3.933855740523931*^9, 3.933855757692075*^9}, {3.93385578896357*^9, 
   3.933855928908634*^9}, {3.933914777314333*^9, 3.933914814860846*^9}, {
   3.933914875597127*^9, 3.933914907150703*^9}, {3.933914963201957*^9, 
   3.933914977680315*^9}, 3.933915037905003*^9, 3.93392263422458*^9, {
   3.9359091150094357`*^9, 3.935909153097698*^9}, {3.9359108029237967`*^9, 
   3.935910804210415*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"f189d402-5d73-4821-a327-342585e8f469"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UseLorentzLinearity", "[", "expr_", "]"}], ":=", 
    RowBox[{"UseLorentzLinearitySP", "[", 
     RowBox[{"UseLorentzLinearityVec", "[", "expr", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "[", 
   RowBox[{
   "UseLorentzLinearity", ",", "UseLorentzLinearitySP", ",", 
    "UseLorentzLinearityVec"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.933855239097413*^9, 3.933855301795165*^9}, {
   3.933855338411009*^9, 3.933855351161422*^9}, {3.933855512745851*^9, 
   3.933855557753594*^9}, {3.933855678473957*^9, 3.933855678878*^9}, {
   3.933855740523931*^9, 3.933855757692075*^9}, {3.93385578896357*^9, 
   3.933855928908634*^9}, {3.933914777314333*^9, 3.933914814860846*^9}, {
   3.933914875597127*^9, 3.933914907150703*^9}, {3.933914989183268*^9, 
   3.933915007900137*^9}, {3.9339150405119348`*^9, 3.933915069576241*^9}, 
   3.93391523218651*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"29f8c600-84c8-4c49-873c-18edfcb4af3b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Unprotect", "[", 
    RowBox[{"sigma", ",", "pdash", ",", "psdash"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sigma", "[", 
    RowBox[{"v1_", ",", "v2_", ",", "d1_", ",", "d2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dint1", ",", "dint2"}], "}"}], ",", 
     RowBox[{"TBInsertOutputNaming", "[", 
      RowBox[{
       FractionBox["\[ImaginaryI]", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"TBgamma", "[", 
           RowBox[{"v1", ",", "d1", ",", "dint1"}], "]"}], 
          RowBox[{"TBgamma", "[", 
           RowBox[{"v2", ",", "dint1", ",", "d2"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"TBgamma", "[", 
           RowBox[{"v2", ",", "d1", ",", "dint2"}], "]"}], 
          RowBox[{"TBgamma", "[", 
           RowBox[{"v1", ",", "dint2", ",", "d2"}], "]"}]}]}], ")"}]}], 
      "]"}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"pdash", "[", 
    RowBox[{"p_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "mu", "}"}], ",", 
     RowBox[{"TBInsertOutputNaming", "[", 
      RowBox[{
       RowBox[{"TBgamma", "[", 
        RowBox[{"mu", ",", "i", ",", "j"}], "]"}], 
       RowBox[{"TBvec", "[", 
        RowBox[{"p", ",", "mu"}], "]"}]}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"psdash", "[", 
     RowBox[{"p_", ",", "i_", ",", "j_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "mu", "}"}], ",", 
      RowBox[{"TBInsertOutputNaming", "[", 
       RowBox[{
        RowBox[{"TBgamma", "[", 
         RowBox[{"mu", ",", "i", ",", "j"}], "]"}], 
        RowBox[{"TBvecs", "[", 
         RowBox[{"p", ",", "mu"}], "]"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "[", 
   RowBox[{"sigma", ",", "pdash", ",", "psdash"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.933843181350515*^9, 3.933843216848025*^9}, {
   3.933843301744976*^9, 3.933843323510812*^9}, {3.933843501295291*^9, 
   3.933843501512125*^9}, {3.933856065587247*^9, 3.933856073073703*^9}, 
   3.933908871486689*^9, {3.933914846263699*^9, 3.933914849938375*^9}, {
   3.9339226411431093`*^9, 3.933922645699367*^9}, {3.935485076771619*^9, 
   3.935485080947083*^9}, {3.941173726380453*^9, 3.9411737272647333`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"5befda18-05ad-4bf2-b49c-d50854f16f21"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "TensorBases`Private`LTCache", "=", "\[IndentingNewLine]", 
   "FormTracer`Private`combinedLorentzTensorInputCache"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"removeObj", "[", "expr_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "pos", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pos", "=", 
       RowBox[{
        RowBox[{"FirstPosition", "[", 
         RowBox[{"TensorBases`Private`LTCache", ",", "expr"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"IntegerQ", "[", "pos", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"TensorBases`Private`LTCache", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"TensorBases`Private`LTCache", ",", "pos"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"removeObj", "/@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"transProj", "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}], ",", 
     RowBox[{"transProj", "[", 
      RowBox[{"_", ",", "_", ",", "_", ",", "_"}], "]"}], ",", 
     RowBox[{"longProj", "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}], ",", 
     RowBox[{"transProjMagnetic", "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}], ",", 
     RowBox[{"transProjElectric", "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "removeObj", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.935818966256061*^9, 3.935819176878359*^9}, {
  3.93581920967111*^9, 3.935819294742858*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"349af2e8-124c-46fb-ac24-9e658f6b07b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefineCombinedLorentzTensors", "[", "\[IndentingNewLine]", 
   RowBox[{"TBInsertOutputNaming", "[", 
    RowBox[{"Union", "[", "\[IndentingNewLine]", 
     RowBox[{"TensorBases`Private`LTCache", ",", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"zero", " ", "temperature"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"transProj", "[", 
           RowBox[{"p", ",", "mu", ",", "nu"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TBdeltaLorentz", "[", 
            RowBox[{"mu", ",", "nu"}], "]"}], "-", 
           RowBox[{
            RowBox[{"TBvec", "[", 
             RowBox[{"p", ",", "mu"}], "]"}], 
            RowBox[{
             RowBox[{"TBvec", "[", 
              RowBox[{"p", ",", "nu"}], "]"}], "/", 
             RowBox[{"TBsp", "[", 
              RowBox[{"p", ",", "p"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"transProj", "[", 
           RowBox[{"p", ",", "q", ",", "mu", ",", "nu"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TBdeltaLorentz", "[", 
            RowBox[{"mu", ",", "nu"}], "]"}], "-", 
           RowBox[{
            RowBox[{"TBvec", "[", 
             RowBox[{"p", ",", "mu"}], "]"}], 
            RowBox[{
             RowBox[{"TBvec", "[", 
              RowBox[{"q", ",", "nu"}], "]"}], "/", 
             RowBox[{"TBsp", "[", 
              RowBox[{"p", ",", "q"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"longProj", "[", 
           RowBox[{"p", ",", "mu", ",", "nu"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TBvec", "[", 
            RowBox[{"p", ",", "mu"}], "]"}], 
           RowBox[{
            RowBox[{"TBvec", "[", 
             RowBox[{"p", ",", "nu"}], "]"}], "/", 
            RowBox[{"TBsp", "[", 
             RowBox[{"p", ",", "p"}], "]"}]}]}]}], "\[IndentingNewLine]", 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"finite", " ", "temperature"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"transProjMagnetic", "[", 
           RowBox[{"p", ",", "mu", ",", "nu"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TBdeltaLorentz", "[", 
            RowBox[{"mu", ",", "nu"}], "]"}], "-", 
           FractionBox[
            RowBox[{
             RowBox[{"TBvecs", "[", 
              RowBox[{"p", ",", "mu"}], "]"}], 
             RowBox[{"TBvecs", "[", 
              RowBox[{"p", ",", "nu"}], "]"}]}], 
            RowBox[{"TBsps", "[", 
             RowBox[{"p", ",", "p"}], "]"}]], "-", 
           RowBox[{
            RowBox[{"TBdeltaLorentz", "[", 
             RowBox[{"mu", ",", "0"}], "]"}], "*", 
            RowBox[{"TBdeltaLorentz", "[", 
             RowBox[{"nu", ",", "0"}], "]"}]}]}]}], "\[IndentingNewLine]", 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"transProjElectric", "[", 
           RowBox[{"p", ",", "mu", ",", "nu"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"TBdeltaLorentz", "[", 
             RowBox[{"mu", ",", "0"}], "]"}], " ", 
            RowBox[{"TBdeltaLorentz", "[", 
             RowBox[{"nu", ",", "0"}], "]"}]}], "-", 
           FractionBox[
            RowBox[{
             RowBox[{"TBvec", "[", 
              RowBox[{"p", ",", "mu"}], "]"}], " ", 
             RowBox[{"TBvec", "[", 
              RowBox[{"p", ",", "nu"}], "]"}]}], 
            RowBox[{"TBsp", "[", 
             RowBox[{"p", ",", "p"}], "]"}]], "+", 
           FractionBox[
            RowBox[{
             RowBox[{"TBvecs", "[", 
              RowBox[{"p", ",", "mu"}], "]"}], " ", 
             RowBox[{"TBvecs", "[", 
              RowBox[{"p", ",", "nu"}], "]"}]}], 
            RowBox[{"TBsps", "[", 
             RowBox[{"p", ",", "p"}], "]"}]]}]}], "\[IndentingNewLine]", 
         "}"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
     "]"}], "]"}], "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.933915534359544*^9, 3.933915540356453*^9}, 
   3.933915592861931*^9, {3.9339156403505287`*^9, 3.933915663014735*^9}, {
   3.933922656661208*^9, 3.933922661634129*^9}, {3.935639936812353*^9, 
   3.9356399868604183`*^9}, {3.935640099445117*^9, 3.935640103555663*^9}, {
   3.935640530205222*^9, 3.935640552444467*^9}, {3.93564101270929*^9, 
   3.935641036333297*^9}, {3.9358188682317944`*^9, 3.935818900624407*^9}, {
   3.93581915897567*^9, 3.935819163168051*^9}, {3.9358193009523067`*^9, 
   3.935819301264076*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"79c471e6-d456-4320-ac55-bcbbeb206c62"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "TensorBases`Private`LTCache", "=", "\[IndentingNewLine]", 
   "FormTracer`Private`lorentzTensorIdentitiesInputCache"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"removeObj", "[", "expr_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "pos", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pos", "=", 
       RowBox[{
        RowBox[{"FirstPosition", "[", 
         RowBox[{"TensorBases`Private`LTCache", ",", "expr"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"IntegerQ", "[", "pos", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"TensorBases`Private`LTCache", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"TensorBases`Private`LTCache", ",", "pos"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"removeObj", "/@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"transProj", "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}], ",", 
     RowBox[{"transProj", "[", 
      RowBox[{"_", ",", "_", ",", "_", ",", "_"}], "]"}], ",", 
     RowBox[{"longProj", "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}], ",", 
     RowBox[{"transProjMagnetic", "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}], ",", 
     RowBox[{"transProjElectric", "[", 
      RowBox[{"_", ",", "_", ",", "_"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "removeObj", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.935818966256061*^9, 3.935819176878359*^9}, {
  3.93581920967111*^9, 3.9358193184634657`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"f8d0ce3a-d9e9-440c-9456-88207b758f72"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefineLorentzTensorIdentities", "[", 
   RowBox[{"Union", "[", 
    RowBox[{"TensorBases`Private`LTCache", ",", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"zero", " ", "temperature"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transProj", "[", 
           RowBox[{"p", ",", "mu", ",", "rho"}], "]"}], 
          RowBox[{"transProj", "[", 
           RowBox[{"p", ",", "rho", ",", "nu"}], "]"}]}], ",", 
         RowBox[{"transProj", "[", 
          RowBox[{"p", ",", "mu", ",", "nu"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transProj", "[", 
           RowBox[{"p", ",", "mu", ",", "rho"}], "]"}], 
          RowBox[{"transProj", "[", 
           RowBox[{"p", ",", "nu", ",", "rho"}], "]"}]}], ",", 
         RowBox[{"transProj", "[", 
          RowBox[{"p", ",", "mu", ",", "nu"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transProj", "[", 
           RowBox[{"p", ",", "rho", ",", "mu"}], "]"}], 
          RowBox[{"transProj", "[", 
           RowBox[{"p", ",", "rho", ",", "nu"}], "]"}]}], ",", 
         RowBox[{"transProj", "[", 
          RowBox[{"p", ",", "mu", ",", "nu"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"longProj", "[", 
           RowBox[{"p", ",", "mu", ",", "rho"}], "]"}], 
          RowBox[{"longProj", "[", 
           RowBox[{"p", ",", "rho", ",", "nu"}], "]"}]}], ",", 
         RowBox[{"longProj", "[", 
          RowBox[{"p", ",", "mu", ",", "nu"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"longProj", "[", 
           RowBox[{"p", ",", "mu", ",", "rho"}], "]"}], 
          RowBox[{"longProj", "[", 
           RowBox[{"p", ",", "nu", ",", "rho"}], "]"}]}], ",", 
         RowBox[{"longProj", "[", 
          RowBox[{"p", ",", "mu", ",", "nu"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"longProj", "[", 
           RowBox[{"p", ",", "rho", ",", "mu"}], "]"}], 
          RowBox[{"longProj", "[", 
           RowBox[{"p", ",", "rho", ",", "nu"}], "]"}]}], ",", 
         RowBox[{"longProj", "[", 
          RowBox[{"p", ",", "mu", ",", "nu"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transProj", "[", 
           RowBox[{"p", ",", "mu", ",", "rho"}], "]"}], 
          RowBox[{"longProj", "[", 
           RowBox[{"p", ",", "rho", ",", "nu"}], "]"}]}], ",", "0"}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transProj", "[", 
           RowBox[{"p", ",", "rho", ",", "mu"}], "]"}], 
          RowBox[{"longProj", "[", 
           RowBox[{"p", ",", "rho", ",", "nu"}], "]"}]}], ",", "0"}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transProj", "[", 
           RowBox[{"p", ",", "mu", ",", "rho"}], "]"}], 
          RowBox[{"longProj", "[", 
           RowBox[{"p", ",", "nu", ",", "rho"}], "]"}]}], ",", "0"}], "}"}], 
       ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"finite", " ", "temperature"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transProjMagnetic", "[", 
           RowBox[{"p", ",", "mu", ",", "rho"}], "]"}], 
          RowBox[{"transProjMagnetic", "[", 
           RowBox[{"p", ",", "rho", ",", "nu"}], "]"}]}], ",", 
         RowBox[{"transProjMagnetic", "[", 
          RowBox[{"p", ",", "mu", ",", "nu"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transProjMagnetic", "[", 
           RowBox[{"p", ",", "mu", ",", "rho"}], "]"}], 
          RowBox[{"transProjMagnetic", "[", 
           RowBox[{"p", ",", "nu", ",", "rho"}], "]"}]}], ",", 
         RowBox[{"transProjMagnetic", "[", 
          RowBox[{"p", ",", "mu", ",", "nu"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transProjMagnetic", "[", 
           RowBox[{"p", ",", "rho", ",", "mu"}], "]"}], 
          RowBox[{"transProjMagnetic", "[", 
           RowBox[{"p", ",", "rho", ",", "nu"}], "]"}]}], ",", 
         RowBox[{"transProjMagnetic", "[", 
          RowBox[{"p", ",", "mu", ",", "nu"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transProjElectric", "[", 
           RowBox[{"p", ",", "mu", ",", "rho"}], "]"}], 
          RowBox[{"transProjElectric", "[", 
           RowBox[{"p", ",", "rho", ",", "nu"}], "]"}]}], ",", 
         RowBox[{"transProjElectric", "[", 
          RowBox[{"p", ",", "mu", ",", "nu"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transProjElectric", "[", 
           RowBox[{"p", ",", "mu", ",", "rho"}], "]"}], 
          RowBox[{"transProjElectric", "[", 
           RowBox[{"p", ",", "nu", ",", "rho"}], "]"}]}], ",", 
         RowBox[{"transProjElectric", "[", 
          RowBox[{"p", ",", "mu", ",", "nu"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transProjElectric", "[", 
           RowBox[{"p", ",", "rho", ",", "mu"}], "]"}], 
          RowBox[{"transProjElectric", "[", 
           RowBox[{"p", ",", "rho", ",", "nu"}], "]"}]}], ",", 
         RowBox[{"transProjElectric", "[", 
          RowBox[{"p", ",", "mu", ",", "nu"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transProjMagnetic", "[", 
           RowBox[{"p", ",", "mu", ",", "rho"}], "]"}], 
          RowBox[{"transProjElectric", "[", 
           RowBox[{"p", ",", "rho", ",", "nu"}], "]"}]}], ",", "0"}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transProjMagnetic", "[", 
           RowBox[{"p", ",", "mu", ",", "rho"}], "]"}], 
          RowBox[{"transProjElectric", "[", 
           RowBox[{"p", ",", "nu", ",", "rho"}], "]"}]}], ",", "0"}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transProjMagnetic", "[", 
           RowBox[{"p", ",", "rho", ",", "mu"}], "]"}], 
          RowBox[{"transProjElectric", "[", 
           RowBox[{"p", ",", "rho", ",", "nu"}], "]"}]}], ",", "0"}], "}"}], 
       ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transProjMagnetic", "[", 
           RowBox[{"p", ",", "mu", ",", "rho"}], "]"}], 
          RowBox[{"longProj", "[", 
           RowBox[{"p", ",", "rho", ",", "nu"}], "]"}]}], ",", "0"}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transProjMagnetic", "[", 
           RowBox[{"p", ",", "mu", ",", "rho"}], "]"}], 
          RowBox[{"longProj", "[", 
           RowBox[{"p", ",", "nu", ",", "rho"}], "]"}]}], ",", "0"}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transProjMagnetic", "[", 
           RowBox[{"p", ",", "rho", ",", "mu"}], "]"}], 
          RowBox[{"longProj", "[", 
           RowBox[{"p", ",", "rho", ",", "nu"}], "]"}]}], ",", "0"}], "}"}], 
       ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transProjElectric", "[", 
           RowBox[{"p", ",", "mu", ",", "rho"}], "]"}], 
          RowBox[{"longProj", "[", 
           RowBox[{"p", ",", "rho", ",", "nu"}], "]"}]}], ",", "0"}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transProjElectric", "[", 
           RowBox[{"p", ",", "mu", ",", "rho"}], "]"}], 
          RowBox[{"longProj", "[", 
           RowBox[{"p", ",", "nu", ",", "rho"}], "]"}]}], ",", "0"}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transProjElectric", "[", 
           RowBox[{"p", ",", "rho", ",", "mu"}], "]"}], 
          RowBox[{"longProj", "[", 
           RowBox[{"p", ",", "rho", ",", "nu"}], "]"}]}], ",", "0"}], "}"}]}],
       "\[IndentingNewLine]", "}"}]}], "]"}], "\[IndentingNewLine]", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.933842029445111*^9, {3.9338421080533533`*^9, 3.933842129427231*^9}, {
   3.933842455169437*^9, 3.933842522572337*^9}, {3.933842614402727*^9, 
   3.933842659290638*^9}, {3.933842689295689*^9, 3.9338427221514797`*^9}, {
   3.933842757308486*^9, 3.933842785760887*^9}, {3.9338536095071373`*^9, 
   3.933853624953573*^9}, {3.933853666718535*^9, 3.933853672764884*^9}, {
   3.933853768902398*^9, 3.933853774613255*^9}, {3.933854053010953*^9, 
   3.933854068419154*^9}, {3.93385691053951*^9, 3.933856924547017*^9}, 
   3.933913711062883*^9, {3.933915256954795*^9, 3.9339152729602613`*^9}, {
   3.933915303703389*^9, 3.933915356815758*^9}, 3.933915514912731*^9, 
   3.933915601027565*^9, {3.933915643244582*^9, 3.933915665520903*^9}, {
   3.93391570818364*^9, 3.933915715206454*^9}, {3.935641049324423*^9, 
   3.935641057702523*^9}, 3.935819327504658*^9},
 CellLabel->"In[55]:=",ExpressionUUID->"e922503b-8241-4aba-aa0f-75c69241d47a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TBReplacementsLorentzTensors", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"zero", " ", "temperature"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"transProj", "[", 
          RowBox[{"p_", ",", "mu_", ",", "rho_"}], "]"}], 
         RowBox[{"transProj", "[", 
          RowBox[{"p_", ",", "rho_", ",", "nu_"}], "]"}]}], ":>", 
        RowBox[{"transProj", "[", 
         RowBox[{"p", ",", "mu", ",", "nu"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"transProj", "[", 
          RowBox[{"p_", ",", "mu_", ",", "rho_"}], "]"}], 
         RowBox[{"transProj", "[", 
          RowBox[{"p_", ",", "nu_", ",", "rho_"}], "]"}]}], ":>", 
        RowBox[{"transProj", "[", 
         RowBox[{"p", ",", "mu", ",", "nu"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"transProj", "[", 
          RowBox[{"p_", ",", "rho_", ",", "mu_"}], "]"}], 
         RowBox[{"transProj", "[", 
          RowBox[{"p_", ",", "rho_", ",", "nu_"}], "]"}]}], ":>", 
        RowBox[{"transProj", "[", 
         RowBox[{"p", ",", "mu", ",", "nu"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"longProj", "[", 
          RowBox[{"p_", ",", "mu_", ",", "rho_"}], "]"}], 
         RowBox[{"longProj", "[", 
          RowBox[{"p_", ",", "rho_", ",", "nu_"}], "]"}]}], ":>", 
        RowBox[{"longProj", "[", 
         RowBox[{"p", ",", "mu", ",", "nu"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"longProj", "[", 
          RowBox[{"p_", ",", "mu_", ",", "rho_"}], "]"}], 
         RowBox[{"longProj", "[", 
          RowBox[{"p_", ",", "nu_", ",", "rho_"}], "]"}]}], ":>", 
        RowBox[{"longProj", "[", 
         RowBox[{"p", ",", "mu", ",", "nu"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"longProj", "[", 
          RowBox[{"p_", ",", "rho_", ",", "mu_"}], "]"}], 
         RowBox[{"longProj", "[", 
          RowBox[{"p_", ",", "rho_", ",", "nu_"}], "]"}]}], ":>", 
        RowBox[{"longProj", "[", 
         RowBox[{"p", ",", "mu", ",", "nu"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"transProj", "[", 
          RowBox[{"p_", ",", "mu_", ",", "rho_"}], "]"}], 
         RowBox[{"longProj", "[", 
          RowBox[{"p_", ",", "rho_", ",", "nu_"}], "]"}]}], ":>", "0"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"transProj", "[", 
          RowBox[{"p_", ",", "rho_", ",", "mu_"}], "]"}], 
         RowBox[{"longProj", "[", 
          RowBox[{"p_", ",", "rho_", ",", "nu_"}], "]"}]}], ":>", "0"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"transProj", "[", 
          RowBox[{"p_", ",", "mu_", ",", "rho_"}], "]"}], 
         RowBox[{"longProj", "[", 
          RowBox[{"p_", ",", "nu_", ",", "rho_"}], "]"}]}], ":>", "0"}], 
       "}"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TBCombinedLorentzTensorsList", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"transProj", "[", 
       RowBox[{"p_", ",", "mu_", ",", "nu_"}], "]"}], ":>", 
      RowBox[{"TBInsertOutputNaming", "[", 
       RowBox[{
        RowBox[{"TBdeltaLorentz", "[", 
         RowBox[{"mu", ",", "nu"}], "]"}], "-", 
        RowBox[{
         RowBox[{"TBvec", "[", 
          RowBox[{"p", ",", "mu"}], "]"}], 
         RowBox[{
          RowBox[{"TBvec", "[", 
           RowBox[{"p", ",", "nu"}], "]"}], "/", 
          RowBox[{"TBsp", "[", 
           RowBox[{"p", ",", "p"}], "]"}]}]}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"transProj", "[", 
       RowBox[{"p_", ",", "q_", ",", "mu_", ",", "nu_"}], "]"}], ":>", 
      RowBox[{"TBInsertOutputNaming", "[", 
       RowBox[{
        RowBox[{"TBdeltaLorentz", "[", 
         RowBox[{"mu", ",", "nu"}], "]"}], "-", 
        RowBox[{
         RowBox[{"TBvec", "[", 
          RowBox[{"p", ",", "mu"}], "]"}], 
         RowBox[{
          RowBox[{"TBvec", "[", 
           RowBox[{"q", ",", "nu"}], "]"}], "/", 
          RowBox[{"TBsp", "[", 
           RowBox[{"p", ",", "q"}], "]"}]}]}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"longProj", "[", 
       RowBox[{"p_", ",", "mu_", ",", "nu_"}], "]"}], ":>", 
      RowBox[{"TBInsertOutputNaming", "[", 
       RowBox[{
        RowBox[{"TBvec", "[", 
         RowBox[{"p", ",", "mu"}], "]"}], 
        RowBox[{
         RowBox[{"TBvec", "[", 
          RowBox[{"p", ",", "nu"}], "]"}], "/", 
         RowBox[{"TBsp", "[", 
          RowBox[{"p", ",", "p"}], "]"}]}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"finite", " ", "temperature"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"transProjMagnetic", "[", 
       RowBox[{"p_", ",", "mu_", ",", "nu_"}], "]"}], ":>", 
      RowBox[{"TBInsertOutputNaming", "[", 
       RowBox[{
        RowBox[{"TBdeltaLorentz", "[", 
         RowBox[{"mu", ",", "nu"}], "]"}], "-", 
        FractionBox[
         RowBox[{
          RowBox[{"TBvecs", "[", 
           RowBox[{"p", ",", "mu"}], "]"}], 
          RowBox[{"TBvecs", "[", 
           RowBox[{"p", ",", "nu"}], "]"}]}], 
         RowBox[{"TBsps", "[", 
          RowBox[{"p", ",", "p"}], "]"}]], "-", 
        RowBox[{
         RowBox[{"TBdeltaLorentz", "[", 
          RowBox[{"mu", ",", "0"}], "]"}], "*", 
         RowBox[{"TBdeltaLorentz", "[", 
          RowBox[{"nu", ",", "0"}], "]"}]}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"transProjElectric", "[", 
       RowBox[{"p_", ",", "mu_", ",", "nu_"}], "]"}], ":>", 
      RowBox[{"TBInsertOutputNaming", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"TBdeltaLorentz", "[", 
          RowBox[{"mu", ",", "0"}], "]"}], " ", 
         RowBox[{"TBdeltaLorentz", "[", 
          RowBox[{"nu", ",", "0"}], "]"}]}], "-", 
        FractionBox[
         RowBox[{
          RowBox[{"TBvec", "[", 
           RowBox[{"p", ",", "mu"}], "]"}], " ", 
          RowBox[{"TBvec", "[", 
           RowBox[{"p", ",", "nu"}], "]"}]}], 
         RowBox[{"TBsp", "[", 
          RowBox[{"p", ",", "p"}], "]"}]], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"TBvecs", "[", 
           RowBox[{"p", ",", "mu"}], "]"}], " ", 
          RowBox[{"TBvecs", "[", 
           RowBox[{"p", ",", "nu"}], "]"}]}], 
         RowBox[{"TBsps", "[", 
          RowBox[{"p", ",", "p"}], "]"}]]}], "]"}]}]}], "\[IndentingNewLine]",
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBInsertCombinedLorentzTensors", "[", "expr_", "]"}], ":=", 
   RowBox[{
    RowBox[{"expr", "//.", "TBReplacementsLorentzTensors"}], "//.", 
    "TBCombinedLorentzTensorsList"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.933915710756781*^9, 3.933915712734466*^9}, {
   3.933922578669111*^9, 3.933922586822522*^9}, {3.93392266767138*^9, 
   3.933922672241708*^9}, 3.935641128793009*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"f3ea6309-60d5-4adf-9938-addd5d5f4741"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ShowFormTracerDefinitions", "[", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "els", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"\"\<FormTracer Names:          \>\"", ",", 
        RowBox[{"TableForm", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[Delta]\), \(ij\)]\) in Lorentz \
group\>\"", ",", 
                 RowBox[{"TBdeltaLorentz", "[", 
                  RowBox[{"i", ",", "j"}], "]"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(p\), \(\[Mu]\)]\) Lorentz \
vector\>\"", ",", 
                 RowBox[{"TBvec", "[", 
                  RowBox[{"p", ",", "\[Mu]"}], "]"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(p\), \(i\)]\) spatial Lorentz \
vector\>\"", ",", 
                 RowBox[{"TBvecs", "[", 
                  RowBox[{"p", ",", "i"}], "]"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(p\), \
\(\[Mu]\)]\)\!\(\*SubscriptBox[\(q\), \(\[Mu]\)]\) scalar product\>\"", ",", 
                 RowBox[{"TBsp", "[", 
                  RowBox[{"p", ",", "q"}], "]"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(p\), \(i\)]\)\!\(\*SubscriptBox[\(q\
\), \(i\)]\) spatial calar product \>\"", ",", 
                 RowBox[{"TBsps", "[", 
                  RowBox[{"p", ",", "q"}], "]"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[Delta]\), \(ij\)]\) in Spinor \
group\>\"", ",", 
                 RowBox[{"TBdeltaDirac", "[", 
                  RowBox[{"i", ",", "j"}], "]"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[Gamma]\), \(\[Mu]\)]\)\>\"", ",", 
                 
                 RowBox[{"TBgamma", "[", 
                  RowBox[{"\[Mu]", ",", "d1", ",", "d2"}], "]"}]}], "}"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[Gamma]\), \(5\)]\)\>\"", ",", 
                 RowBox[{"TBgamma5", "[", 
                  RowBox[{"d1", ",", "d2"}], "]"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[Epsilon]\), \(\[Mu]\[Nu]\[Rho]\)]\
\)\>\"", ",", 
                 RowBox[{"TBepsLorentz", "[", 
                  RowBox[{"\[Mu]", ",", "\[Nu]", ",", "\[Rho]"}], "]"}]}], 
                "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], 
              "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<adjoint \!\(\*SubscriptBox[\(\[Delta]\), \(ab\)]\)\>\
\"", ",", 
                    RowBox[{"TBdeltaAdj", "[", 
                    RowBox[{"#", ",", "a", ",", "b"}], "]"}]}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<fundamental \!\(\*SubscriptBox[\(\[Delta]\), \(AB\)]\
\)\>\"", ",", 
                    RowBox[{"TBdeltaFund", "[", 
                    RowBox[{"#", ",", "A", ",", "B"}], "]"}]}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<\!\(\*FractionBox[SubscriptBox[\(f\), \(abc\)], \
\(2\)]\)\>\"", ",", 
                    RowBox[{"TBF", "[", 
                    RowBox[{"#", ",", "a", ",", " ", "b", ",", " ", "c"}], 
                    "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<(\!\(\*SubscriptBox[\(t\), \
\(a\)]\)\!\(\*SubscriptBox[\()\), \(BC\)]\)\>\"", ",", 
                    RowBox[{"TBT", "[", 
                    RowBox[{"#", ",", "a", ",", " ", "B", ",", " ", "C"}], 
                    "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(\[Epsilon]\), \(abc\)]\)\>\"", 
                    ",", 
                    RowBox[{"TBepsAdj", "[", 
                    RowBox[{"#", ",", "a", ",", " ", "b", ",", " ", "c"}], 
                    "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(\[Epsilon]\), \(ABC\)]\)\>\"", 
                    ",", 
                    RowBox[{"TBepsFund", "[", 
                    RowBox[{"#", ",", "A", ",", " ", "B", ",", " ", "C"}], 
                    "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<group constant\>\"", ",", 
                    RowBox[{"GetFormTracerGroupConstant", "[", "#", "]"}]}], 
                    "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], "}"}], 
                  "&"}], ",", 
                 RowBox[{"GetFormTracerGroups", "[", "]"}]}], "]"}], ",", 
               "1"}], "]"}]}], "\[IndentingNewLine]", "]"}], "//", 
           "TBInsertOutputNaming"}], "\[IndentingNewLine]", ",", 
          RowBox[{"TableHeadings", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "\"\<Lorentz\>\"", ",", "\"\<\>\"", ",", "\"\<\>\"", ",", 
                 "\"\<\>\"", ",", "\"\<\>\"", ",", "\"\<\>\"", ",", 
                 "\[IndentingNewLine]", "\"\<spinor\>\"", ",", "\"\<\>\"", 
                 ",", "\"\<\>\"", ",", "\"\<\>\"", ",", "\"\<\>\""}], "}"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "#", ",", "\"\<\>\"", ",", "\"\<\>\"", ",", "\"\<\>\"", 
                    ",", "\"\<\>\"", ",", "\"\<\>\"", ",", "\"\<\>\"", ",", 
                    "\"\<\>\""}], "}"}], "&"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<(\>\"", 
                    "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
                    "\"\<)\>\""}], "&"}], ",", 
                    RowBox[{"GetFormTracerGroupNamesAndTypes", "[", "]"}]}], 
                    "]"}]}], "\[IndentingNewLine]", "]"}], ",", "1"}], 
                "]"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
             ",", " ", 
             RowBox[{"{", 
              RowBox[{"\"\<object\>\"", ",", "\"\<name\>\""}], "}"}]}], 
            "}"}]}], ",", 
          RowBox[{"TableSpacing", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"3", ",", " ", "3"}], "}"}]}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"els", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TBCombinedLorentzTensorsList", "//.", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"a_", "[", "b___", "]"}], ":>", "f_"}], ")"}], ":>", 
            RowBox[{"a", "@@", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"StringReplace", "[", 
               RowBox[{
                RowBox[{"ToString", "[", 
                 RowBox[{"{", "b", "}"}], "]"}], ",", 
                RowBox[{"\"\<_\>\"", "->", "\"\<\>\""}]}], "]"}], "]"}]}]}]}],
           ",", "\[IndentingNewLine]", 
          RowBox[{"TBCombinedLorentzTensorsList", "//.", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"a_", "[", "b___", "]"}], ":>", "f_"}], ")"}], ":>", 
            "f"}]}]}], "\[IndentingNewLine]", "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<\\nCombined Lorentz tensors:   \>\"", ",", 
        RowBox[{"TableForm", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"els", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "}"}], "]"}], ",", 
          RowBox[{"TableHeadings", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"els", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\"\<replacement\>\"", ",", "\"\<name\>\""}], "}"}]}], 
            "}"}]}], ",", 
          RowBox[{"TableSpacing", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"3", ",", " ", "5"}], "}"}]}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
      "Print", "[", 
       "\"\<\\nThese can be explicitly evaluated by using e.g. \
\!\(\*StyleBox[\"TBInsertCombinedLorentzTensors\",FontColor->RGBColor[1, 0.5, \
0]]\)[transProj[p,\[Mu],\[Nu]]]\>\"", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
      "Print", "[", 
       "\"\<\\n\nTensorBases defines additionally the following Lorentz \
tensors:\n   sigma[\[Mu],\[Nu],\!\(\*SubscriptBox[\(d\), \
\(1\)]\),\!\(\*SubscriptBox[\(d\), \(2\)]\)] : \!\(\*FractionBox[\(\
\[ImaginaryI]\), \(2\)]\)[\!\(\*SubscriptBox[\(\[Gamma]\), \
\(\[Mu]\)]\),\!\(\*SubscriptBox[\(\[Gamma]\), \(\[Nu]\)]\)\!\(\*SubscriptBox[\
\(]\), \(\*SubscriptBox[\(d\), \(1\)] \*SubscriptBox[\(d\), \(2\)]\)]\)\n   \
pdash[p,\!\(\*SubscriptBox[\(d\), \(1\)]\),\!\(\*SubscriptBox[\(d\), \
\(2\)]\)] : (\!\(\*SubscriptBox[\(\[Gamma]\), \(\[Mu]\)]\)\!\(\*SubscriptBox[\
\(p\), \(\[Mu]\)]\)\!\(\*SubscriptBox[\()\), \(\*SubscriptBox[\(d\), \(1\)] \
\*SubscriptBox[\(d\), \(2\)]\)]\)\n   psdash[p,\!\(\*SubscriptBox[\(d\), \
\(1\)]\),\!\(\*SubscriptBox[\(d\), \(2\)]\)] : (\!\(\*SubscriptBox[\(\[Gamma]\
\), \(i\)]\)\!\(\*SubscriptBox[\(p\), \(i\)]\)\!\(\*SubscriptBox[\()\), \
\(\*SubscriptBox[\(d\), \(1\)] \*SubscriptBox[\(d\), \(2\)]\)]\)\n\nFurther \
useful functions defined by TensorBases:\n\
\!\(\*StyleBox[\"UseLorentzLinearity\",FontColor->RGBColor[1, 0.5, \
0]]\)[expr] expands all scalar products and vectors in expr (e.g. \
sp[p1,p2-p3] -> sp[p1,p2]-sp[p1,p3])\n\
\!\(\*StyleBox[\"AddFormTracerGroup\",FontColor->RGBColor[1, 0.5, \
0]]\)[{name,kind,constant}] adds a group to FormTracer where name is an \
identifier, kind is one of {SUNfund, SONfund, SU3fundexplicit, \
SU2fundexplicit,SPNfund} (see also FormTracer`ShowGroupTemplates[]) and \
constant is the identifier for the group constant.\n\
\!\(\*StyleBox[\"RemoveFormTracerGroup\",FontColor->RGBColor[1, 0.5, \
0]]\)[name] removes a group from FormTracer where name is an identifier.\n\
\!\(\*StyleBox[\"SetNf\",FontColor->RGBColor[1, 0.5, 0]]\)[3],\!\(\*StyleBox[\
\"SetNf\",FontColor->RGBColor[1, 0.5, \
0]]\)[2],\!\(\*StyleBox[\"SetNf\",FontColor->RGBColor[1, 0.5, 0]]\)[] sets \
the flavor number to 3, 2 or the general Nf.\n\
\!\(\*StyleBox[\"SetNc\",FontColor->RGBColor[1, 0.5, 0]]\)[3],\!\(\*StyleBox[\
\"SetNc\",FontColor->RGBColor[1, 0.5, \
0]]\)[2],\!\(\*StyleBox[\"SetNc\",FontColor->RGBColor[1, 0.5, 0]]\)[] sets \
the color number to 3, 2 or the general Nc.\n\>\"", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.93385258303336*^9, 3.933852872276744*^9}, {
   3.933852913452828*^9, 3.933853010531932*^9}, {3.933853064804202*^9, 
   3.933853256260737*^9}, {3.933853298564769*^9, 3.933853363187707*^9}, {
   3.933853584561924*^9, 3.9338535927856407`*^9}, {3.933854004442894*^9, 
   3.933854028905613*^9}, {3.933854072661306*^9, 3.933854160797375*^9}, {
   3.93385423572469*^9, 3.933854331004817*^9}, {3.933854367230015*^9, 
   3.933854504986556*^9}, {3.933854597596017*^9, 3.933854615267034*^9}, {
   3.933854645958225*^9, 3.933854816595446*^9}, {3.933854848580657*^9, 
   3.933854968139453*^9}, {3.933855018843905*^9, 3.933855150251405*^9}, {
   3.933855187501333*^9, 3.933855193676867*^9}, {3.933856015362227*^9, 
   3.9338560157307463`*^9}, {3.933856796155756*^9, 3.933856804875536*^9}, {
   3.933856930380265*^9, 3.933856999067797*^9}, {3.933857087347619*^9, 
   3.933857117731473*^9}, {3.933908518561009*^9, 3.933908545696554*^9}, {
   3.933908658400929*^9, 3.933908678048688*^9}, {3.93391346004729*^9, 
   3.933913504251818*^9}, 3.93391355140784*^9, {3.933913594122473*^9, 
   3.933913596934078*^9}, {3.933913645256667*^9, 3.933913665301022*^9}, {
   3.933913841897856*^9, 3.933913844615154*^9}, {3.933913933759429*^9, 
   3.933913934129897*^9}, 3.933922594901543*^9, 3.93392267778274*^9, {
   3.941222398867976*^9, 3.941222415238605*^9}, {3.947169212512848*^9, 
   3.947169273270321*^9}, {3.9471693092944193`*^9, 3.947169394462316*^9}, {
   3.947169456710284*^9, 3.947169490542368*^9}, {3.950711536417156*^9, 
   3.9507116138897343`*^9}},ExpressionUUID->"377a1416-7c5f-4000-b6d8-\
2a50aee7d278"]
}, Closed]],

Cell[CellGroupData[{

Cell["Init", "Section",
 CellChangeTimes->{{3.919928560443655*^9, 3.91992856291497*^9}, {
  3.933821623541608*^9, 
  3.933821625001503*^9}},ExpressionUUID->"519c8cf4-00ad-429f-90d6-\
d6259640b221"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<TensorBases`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Unprotect", "[", "\"\<TensorBases`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Unprotect", "[", "\"\<TensorBases`Private`*\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<TensorBases`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<TensorBases`Private`*\>\"", "]"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.918571078410411*^9, 3.918571081926825*^9}, {
  3.932041360141122*^9, 3.932041375737691*^9}, {3.932041586550288*^9, 
  3.932041593365497*^9}, {3.933819972816751*^9, 3.933819989080589*^9}, {
  3.93393983570267*^9, 3.933939840850126*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"44dc6e77-47eb-4c57-945f-d5a7c5cda42d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Head", "[", "$DistributedContexts", "]"}], "=!=", "List"}], ",", 
    RowBox[{"$DistributedContexts", "=", 
     RowBox[{"{", "}"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"$DistributedContexts", "=", 
  RowBox[{"$DistributedContexts", "\[Union]", 
   RowBox[{"{", 
    RowBox[{
    "$Context", ",", "\"\<TensorBases`Private`\>\"", ",", 
     "\"\<TensorBases`\>\"", ",", "\"\<FormTracer`\>\"", ",", 
     "\"\<FormTracer`Private`\>\""}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.93582201203716*^9, 3.935822035572672*^9}, {
   3.93582206698923*^9, 3.935822071422665*^9}, {3.9358221105495653`*^9, 
   3.9358221246310797`*^9}, {3.9358221626623373`*^9, 3.935822168348715*^9}, {
   3.9358222105726337`*^9, 3.935822219460187*^9}, {3.9358251872015467`*^9, 
   3.935825192105742*^9}, {3.935825271570277*^9, 3.9358252777227783`*^9}, 
   3.935825307969817*^9, 3.9358254923531847`*^9, {3.935825619086226*^9, 
   3.935825620425383*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"bb3a37eb-d538-4d41-8217-39204afc0d84"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"FormTracer`\"\>", ",", "\<\"FormTracer`Private`\"\>", 
   ",", "\<\"Global`\"\>", ",", "\<\"TensorBases`\"\>", 
   ",", "\<\"TensorBases`Private`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.941524047682692*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"acf014db-5c6c-4a08-841b-375e4eee33e7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exports", "Section",
 CellChangeTimes->{{3.919928560443655*^9, 3.91992856291497*^9}, 
   3.933821631058873*^9},ExpressionUUID->"4029e77f-5a28-4c64-82f6-\
7635a458148b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Tensor", "::", "usage"}], "=", 
   "\"\<Symbol used by TensorBases to express vertex structures\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tensor1", "::", "usage"}], "=", 
   "\"\<Symbol used by TensorBases to express inner & canonical \
products\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tensor2", "::", "usage"}], "=", 
   "\"\<Symbol used by TensorBases to express inner & canonical \
products\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.969257059918023*^9, 3.969257077217906*^9}, {
  3.969415091827717*^9, 
  3.9694151187953253`*^9}},ExpressionUUID->"4d3f01e4-537a-4ee6-883b-\
ac7809cb4485"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBGetBasisElement", "::", "usage"}], " ", "=", " ", 
    "\"\<TBGetBasisElement[BasisName_String,n_Integer,indices___]\nObtains \
the n-th element of the specified basis. The given indices must match the \
ones specified by the basis, see TBInfo[].\nIf no indices are given, the \
standard indices specified by the basis are used.\n\
TBGetBasisElement[BasisName_String,All,indices___]\nReturns a list with all \
elements of the specified basis. The given indices must match the ones \
specified by the basis, see TBInfo[].\nIf no indices are given, the standard \
indices specified by the basis are used.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBGetVertex", "::", "usage"}], " ", "=", " ", 
    "\"\<TBGetVertex[BasisName_String,n_Integer,indices___]\nObtains the n-th \
vertex of the specified basis. The given indices must match the ones \
specified by the basis, see TBInfo[].\nIf no indices are given, the standard \
indices specified by the basis are used.\n\
TBGetVertex[BasisName_String,All,indices___]\nReturns a list with all \
vertices of the specified basis. The given indices must match the ones \
specified by the basis, see TBInfo[].\nIf no indices are given, the standard \
indices specified by the basis are used.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBGetInnerProduct", "::", "usage"}], " ", "=", " ", 
    "\"\<TBGetInnerProduct[BasisName_String]\nReturns the bilinear operator \
\[ScriptCapitalO] that represents the inner product of the specified basis. \n\
It can be called as \[ScriptCapitalO][Tensor1, n, Tensor2, m], where Tensor1 \
and Tensor2 are functions with signatures Tensor[BasisName_String, n_Integer, \
indices___].\nFor example, \[ScriptCapitalO][TBGetBasisElement, 2, \
TBGetBasisElement, 1] returns <\!\(\*SubscriptBox[\(e\), \
\(2\)]\),\!\(\*SubscriptBox[\(e\), \(1\)]\)>.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBGetCanonicalProduct", "::", "usage"}], " ", "=", " ", 
    "\"\<TBGetCanonicalProduct[BasisName_String]\nReturns the bilinear \
operator \[ScriptCapitalO] that represents the canonical product (i.e. the \
euclidean inner product) of the specified basis. \nIt can be called as \
\[ScriptCapitalO][Tensor1, n, Tensor2, m], where Tensor1 and Tensor2 are \
functions with signatures Tensor[BasisName_String, n_Integer, indices___].\n\
For example, \[ScriptCapitalO][TBGetBasisElement, 2, TBGetBasisElement, 1] \
returns <\!\(\*SubscriptBox[\(e\), \(2\)]\),\!\(\*SubscriptBox[\(e\), \
\(1\)]\)\!\(\*SubscriptBox[\(>\), \(can\)]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBGetMetric", "::", "usage"}], " ", "=", " ", 
    "\"\<TBGetMetric[BasisName_String]\nReturns the metric of the specified \
basis, i.e. the matrix \!\(\*SubscriptBox[\(g\), \(ij\)]\) = \
<\!\(\*SubscriptBox[\(e\), \(i\)]\),\!\(\*SubscriptBox[\(e\), \(j\)]\)>, \
where the \!\(\*SubscriptBox[\(e\), \(i\)]\) are the basis elements of the \
basis.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBGetInverseMetric", "::", "usage"}], " ", "=", " ", 
    "\"\<TBGetInverseMetric[BasisName_String]\nReturns the inverse of the \
metric of the specified basis, i.e. the matrix \
\!\(\*SuperscriptBox[SubscriptBox[\(g\), \(ij\)], \(-1\)]\) = \
(<\!\(\*SubscriptBox[\(e\), \(i\)]\),\!\(\*SubscriptBox[\(e\), \
\(j\)]\)>\!\(\*SuperscriptBox[\()\), \(-1\)]\), where the \!\(\*SubscriptBox[\
\(e\), \(i\)]\) are the basis elements of the basis.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBGetBasisFields", "::", "usage"}], " ", "=", " ", 
    "\"\<TBGetBasisFields[BasisName_String]\nReturns the field content in the \
order as used for the indices of the basis.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBGetProjector", "::", "usage"}], " ", "=", " ", 
    "\"\<TBGetBasisProjector[BasisName_String,n_Integer,indices___]\nReturns \
the n-th projector, which is defined by \!\(\*SuperscriptBox[SubscriptBox[\(g\
\), \(nj\)], \(-1\)]\)\!\(\*SubscriptBox[\(e\), \(j\)]\). The given indices \
must match the ones specified by the basis, see TBInfo[]. \nIf no indices are \
given, the standard indices specified by the basis are used.\n\
TBGetVertex[BasisName_String,All,indices___]\nReturns a list with all \
projectors of the specified basis, defined by \
\!\(\*SuperscriptBox[SubscriptBox[\(g\), \(nj\)], \
\(-1\)]\)\!\(\*SubscriptBox[\(e\), \(j\)]\). The given indices must match the \
ones specified by the basis, see TBInfo[].\nIf no indices are given, the \
standard indices specified by the basis are used.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBInfo", "::", "usage"}], " ", "=", " ", 
    "\"\<TBInfo[_String]\nReturn information on a given object. \nTBInfo[] \
prints all available bases with some usage information. \nTBInfo[BasisName] \
prints detailed information provided by this basis.\n\
TBInfo[\\\"FormTracer\\\"] prints all defined groups and identites which \
FormTracer currently knows.\nTBInfo[\\\"Extensions\\\"] prints all extensions \
to FormTracer, defined by the TensorBases package.\nTBInfo[\\\"Momenta\\\"] \
prints all momentum transformations that can be performed by the TensorBases \
package.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBImportBasis", "::", "usage"}], " ", "=", " ", 
    "\"\<TBImportBasis[BasisDefinitionFile_String,CacheDirectory_String:\\\"./\
TBCache\\\"]\nImport a custom basis definition file. The optional argument \
CacheDirectory can be set to choose a specific location where the \
intermediate files from processing the basis are stored.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBExportBasis", "::", "usage"}], " ", "=", " ", 
    "\"\<TBExportBasis[BasisName_String,folder_String:\\\"./\\\"]\nExport a \
basis definition file. The basis with the name BasisName has to be loaded in \
memory. If the optional argument folder is given, this will be the location \
where the exported basis definition will be placed.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBRestrictBasis", "::", "usage"}], " ", "=", " ", 
    "\"\<TBRestrictBasis[inBasisName_String, outBasisName_String, \
{indices__Integer}, CacheDirectory_String:\\\"./TBCache\\\"]\nRestrict an \
existing basis. The new basis will be called outBasisName and only contain \
the basis elements specified by the given indices.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBConstructBasis", "::", "usage"}], " ", "=", " ", 
    "\"\<TBConstructBasis[options...]\n\nConstruct a new basis from a given \
set of Tensors.\nExample call:\n\
TBConstructBasis[\[IndentingNewLine]\\\"Name\\\"->\\\"FourFermionBasis\\\",\
\[IndentingNewLine]\\\"Vertex\\\"->{psibar,psi,psibar,psi},\[IndentingNewLine]\
\\\"VertexStructure\\\"->2(Tensor[1,2,3,4]-Tensor[1,4,3,2]),\
\[IndentingNewLine]\\\"InnerProduct\\\"->2Tensor1[1,2,3,4](Tensor2[2,1,4,3]-\
Tensor2[4,1,2,3]),\[IndentingNewLine]\\\"Indices\\\"->{{p1,d1},{p2,d2},{p3,d3}\
,{p4,d4}},\[IndentingNewLine]\\\"Tensors\\\"->{{deltaDirac[d1,d2]deltaDirac[\
d3,d4],gamma[mu,d1,d2]gamma[mu,d3,d4],gamma5[d1,d2]gamma5[d3,d4],gamma[mu,d1,\
dint1]gamma5[dint1,d2]gamma[mu,d3,d3int]gamma5[d3int,d4],sigma[mu,nu,d1,d2]\
sigma[mu,nu,d3,d4]\[IndentingNewLine]}}\[IndentingNewLine]]\nFor all possible \
options, see Options[TBConstructBasis]\n\n\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBExportCache", "::", "usage"}], " ", "=", " ", 
    "\"\<TBExportCache[BasisName_String,CacheFolder_String:\\\"./TBCache\\\"]\
\nExports everything in memory of the Basis BasisName onto disk in the folder \
CacheFolder.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBUnregister", "::", "usage"}], " ", "=", " ", 
    "\"\<TBUnregister[BasisName_String]\nRemove an existing basis from \
internal memory. This does not delete or change any files on disk.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBBasisExists", "::", "usage"}], " ", "=", " ", 
    "\"\<TBBasisExists[BasisName_String]\nReturns True or False, depending if \
the given Basis exists in memory.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TBList", "::", "usage"}], " ", "=", " ", 
   "\"\<TBList[]\nReturns as a list all basis names in memory.\>\""}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.916637829669835*^9, 3.91663783796828*^9}, {
   3.916638110622831*^9, 3.916638118237995*^9}, {3.9167289728094*^9, 
   3.916728976539971*^9}, {3.916730910644607*^9, 3.916730924497292*^9}, {
   3.916731291036565*^9, 3.91673129222556*^9}, {3.9171682862057667`*^9, 
   3.917168294847966*^9}, {3.917353885713208*^9, 3.917353929246798*^9}, {
   3.918322794894466*^9, 3.91832279815382*^9}, {3.919139915548635*^9, 
   3.919139937406918*^9}, {3.919146552140621*^9, 3.919146555840046*^9}, {
   3.919154246370263*^9, 3.91915425459028*^9}, {3.919748849849753*^9, 
   3.919748862913927*^9}, {3.919795028449435*^9, 3.91979503207915*^9}, {
   3.919795193645524*^9, 3.919795204759042*^9}, {3.925555868202629*^9, 
   3.925555871229744*^9}, {3.925707942850168*^9, 3.925707949827313*^9}, {
   3.925707986615032*^9, 3.9257079888416*^9}, {3.925712046247765*^9, 
   3.925712049987134*^9}, {3.925909287252735*^9, 3.925909290473834*^9}, {
   3.927424632287867*^9, 3.927424637058543*^9}, {3.927459040847021*^9, 
   3.927459051062059*^9}, {3.929457727924595*^9, 3.929457759546459*^9}, {
   3.930749285586865*^9, 3.930749327685223*^9}, {3.930749373015257*^9, 
   3.930749424738744*^9}, {3.930749467151816*^9, 3.930750066729059*^9}, {
   3.930750124915172*^9, 3.9307501908273897`*^9}, {3.930750362233918*^9, 
   3.930750400020275*^9}, {3.930750446223989*^9, 3.930750462754278*^9}, {
   3.930997106209995*^9, 3.93099752442664*^9}, {3.930997591222265*^9, 
   3.930997606363578*^9}, {3.930997721012038*^9, 3.9309977532068453`*^9}, {
   3.9309977877347*^9, 3.930997796070214*^9}, 3.930997872225588*^9, 
   3.932042180233707*^9, {3.933820064345401*^9, 3.933820072792699*^9}, {
   3.9338205917056*^9, 3.933820625939376*^9}, {3.9338206815452433`*^9, 
   3.933820747080737*^9}, 3.933821549145659*^9, {3.933826984354774*^9, 
   3.933826995002508*^9}, {3.933852035921555*^9, 3.933852037129256*^9}, 
   3.933913533871521*^9, {3.93399688703048*^9, 3.93399689786385*^9}, {
   3.933996942743464*^9, 3.9339971051572866`*^9}, {3.933997167768436*^9, 
   3.933997507034703*^9}, {3.933997563548435*^9, 3.933997566878298*^9}, {
   3.933997598132012*^9, 3.933997599255277*^9}, {3.935568699874237*^9, 
   3.935568730515094*^9}, {3.935818640441483*^9, 3.935818658344705*^9}, {
   3.935827695890215*^9, 3.9358277898662777`*^9}, {3.936858929730506*^9, 
   3.936858965160179*^9}, {3.9411753566856956`*^9, 3.9411754406576433`*^9}, 
   3.941175477581319*^9, {3.9411811711024218`*^9, 3.941181279033229*^9}, {
   3.941193572006617*^9, 3.941193671268943*^9}, {3.941194033600881*^9, 
   3.941194069708293*^9}, {3.941194425962043*^9, 3.94119443393115*^9}, {
   3.9411954689823914`*^9, 3.9411954999515133`*^9}, {3.941195582241672*^9, 
   3.941195743222085*^9}, {3.941195870191478*^9, 3.941195871642898*^9}, {
   3.941219889469123*^9, 3.941219946695747*^9}, {3.9412207582671003`*^9, 
   3.9412207633092546`*^9}, {3.941221225854697*^9, 3.941221252418043*^9}, {
   3.950776156015725*^9, 3.95077621739869*^9}, {3.950776251714765*^9, 
   3.95077626079116*^9}, {3.950776322562348*^9, 3.9507763265674553`*^9}, {
   3.950776883494725*^9, 3.9507768868905153`*^9}, {3.9507775246509666`*^9, 
   3.950777568623836*^9}, {3.950777930571969*^9, 3.950777964451893*^9}, {
   3.950784070044671*^9, 3.950784073444778*^9}, {3.950784202479842*^9, 
   3.9507842155417233`*^9}, {3.952957197296557*^9, 3.9529572295521307`*^9}, {
   3.959837835568686*^9, 3.9598378519339247`*^9}, {3.959839065568681*^9, 
   3.95983913271212*^9}, {3.9627598938989067`*^9, 3.9627599642747602`*^9}, {
   3.962760248419434*^9, 3.962760259747444*^9}, {3.969347371041151*^9, 
   3.969347417320154*^9}},ExpressionUUID->"fa4c288d-f6fa-4904-b906-\
ae7fe81b8ecf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBBasisTransformation", "::", "usage"}], " ", "=", " ", 
    "\"\<TBBasisTransformation[toBasis_String,fromBasis_String]\nReturns a \
matrix for the transformation of coordinates (i.e. dressings) from the basis \
\\\"fromBasis\\\" to the basis \\\"toBasis\\\".\nI.e. given a set of \
dressings dress = {d1,d2,d3...} in \\\"fromBasis\\\", we get the set of \
dressings dressbar = {db1,db2,db3,...} in \\\"toBasis\\\" from dressbar = \
TBBasisTransformation[toBasis,fromBasis].dress\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBVertexTransformation", "::", "usage"}], " ", "=", " ", 
   "\"\<TBVertexTransformation[toBasis_String,fromBasis_String]\nReturns a \
matrix for the transformation of coordinates (i.e. (!) vertex dressings) from \
the basis \\\"fromBasis\\\" to the basis \\\"toBasis\\\".\nI.e. given a set \
of (!) vertex dressings dress = {d1,d2,d3...} in \\\"fromBasis\\\", we get \
the set of dressings dressbar = {db1,db2,db3,...} in \\\"toBasis\\\" from \
dressbar = TBBasisTransformation[toBasis,fromBasis].dress\>\""}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.969414824495483*^9, 
  3.969415044699641*^9}},ExpressionUUID->"2ace8e61-0363-414a-aec2-\
78ad21a6b37c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBGetIdentityMatrix", "::", "usage"}], " ", "=", " ", 
    "\"\<TBGetIdentityMatrix[BasisName_String,indices___]\nReturns an \
identity matrix for the given two-point function BasisName. Works only for \
two-point functions.\nIf no indices are given, the standard indices specified \
by the basis are used.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBGetBasisSize", "::", "usage"}], " ", "=", " ", 
    "\"\<TBGetBasisSize[BasisName_String]\nGet the size of a basis of with \
name \\\"BasisName\\\".\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBGetIndexSet", "::", "usage"}], " ", "=", " ", 
    "\"\<TBGetIndexSet[BasisName_String,id_Integer,p_Symbol]\nGet a unique \
index set for particle id in the Basis \\\"BasisName\\\" with momentum p.\n\
TBGetIndexSet[set_List,p_]\nChange the momentum of an index set to p.\n\
\>\""}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBGetBasis", "::", "usage"}], "=", " ", 
    "\"\<TBGetBasis[BasisName_String,indices___]\nReturns a list with all \
basis elements.\nIf no indices are given, the standard indices specified by \
the basis are used.\>\""}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TBMakePropagator", "::", "usage"}], " ", "=", " ", 
   "\"\<TBMakePropagator[BasisName_String,InvProp_List]\nFor a two-point \
basis \\\"BasisName\\\", obtain a propagator for a given inverse propagator.\n\
InvProp should be a list of basis element coefficients making up the inverse \
propagator.\nFor example, {\[ImaginaryI], Mq[p]} for the Basis \\\"qbq\\\" \
for the standard quark propagator in vacuum.\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.950784079928091*^9, 3.950784192915882*^9}, {
  3.9507843005029097`*^9, 3.9507843008410463`*^9}, {3.950794597273884*^9, 
  3.950794623425076*^9}, {3.950795068161483*^9, 3.950795078396206*^9}, {
  3.950795410177816*^9, 
  3.95079542558928*^9}},ExpressionUUID->"961023d5-c081-4924-a4a2-\
771943e79ed6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TB3PToS0S1SPhi", "::", "usage"}], "=", 
    "\"\<TB3PToS0S1SPhi[p1_Symbol,p2_Symbol,p3_Symbol,S0_Symbol,S1_Symbol,\
SPhi_Symbol]\nGiven three momenta p1,p2,p3, obtain a function which \
transforms these to the representation in terms of S0,S1 and SPhi.\nReturns a \
function which takes one argument, the expression to be transformed.\n\n\
TB3PToS0S1SPhi[p1_Symbol,p2_Symbol,p3_Symbol,q_Symbol,S0_Symbol,S1_Symbol,\
SPhi_Symbol]\nIf an additional momentum q is supplied, it is included in the \
transformation. Currently this assumes that q is a four-dimensional vector \
and is described by\nq={cos1,\!\(\*SqrtBox[\(1 - \*SuperscriptBox[\(cos2\), \
\(2\)]\)]\)cos1,\!\(\*SqrtBox[\(1 - \*SuperscriptBox[\(cos1\), \
\(2\)]\)]\)\!\(\*SqrtBox[\(1 - \*SuperscriptBox[\(cos2\), \
\(2\)]\)]\)Cos[phi],\!\(\*SqrtBox[\(1 - \*SuperscriptBox[\(cos1\), \
\(2\)]\)]\)\!\(\*SqrtBox[\(1 - \*SuperscriptBox[\(cos2\), \
\(2\)]\)]\)Sin[phi]}\n\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TB3PFromS0S1SPhi", "::", "usage"}], "=", 
    "\"\<TB3PFromS0S1SPhi[p1_Symbol,p2_Symbol,p3_Symbol,S0_Symbol,S1_Symbol,\
SPhi_Symbol]\nGiven three momenta p1,p2,p3, obtain a function which \
transforms from the representation in terms of S0,S1 and SPhi back to the \
momenta p1,p2,p3.\nReturns a function which takes one argument, the \
expression to be transformed.\n\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TB3PToS0S1SPhiQk", "::", "usage"}], "=", 
    "\"\<TB3PToS0S1SPhi[Q_Symbol,k_Symbol,S0_Symbol,S1_Symbol,SPhi_Symbol]\n\
Given two momenta Q,k obtain a function which transforms these to the \
representation in terms of S0,S1 and SPhi.\nReturns a function which takes \
one argument, the expression to be transformed.\n\n\
TB3PToS0S1SPhi[Q_Symbol,k_Symbol,q_Symbol,S0_Symbol,S1_Symbol,SPhi_Symbol]\n\
If an additional momentum q is supplied, it is included in the \
transformation. Currently this assumes that q is a four-dimensional vector \
and is described by\nq={cos1,\!\(\*SqrtBox[\(1 - \*SuperscriptBox[\(cos2\), \
\(2\)]\)]\)cos1,\!\(\*SqrtBox[\(1 - \*SuperscriptBox[\(cos1\), \
\(2\)]\)]\)\!\(\*SqrtBox[\(1 - \*SuperscriptBox[\(cos2\), \
\(2\)]\)]\)Cos[phi],\!\(\*SqrtBox[\(1 - \*SuperscriptBox[\(cos1\), \
\(2\)]\)]\)\!\(\*SqrtBox[\(1 - \*SuperscriptBox[\(cos2\), \
\(2\)]\)]\)Sin[phi]}\n\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TB3PFromS0S1SPhiQk", "::", "usage"}], "=", 
    "\"\<TB3PFromS0S1SPhi[Q_Symbol,k_Symbol,S0_Symbol,S1_Symbol,SPhi_Symbol]\n\
Given two momenta Q,k, obtain a function which transforms from the \
representation in terms of S0,S1 and SPhi back to the momenta Q,k.\nReturns a \
function which takes one argument, the expression to be transformed.\n\>\""}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TB3PToS0as", "::", "usage"}], "=", 
    "\"\<TB3PToS0as[p1_Symbol,p2_Symbol,p3_Symbol,S0_Symbol,a_Symbol,s_Symbol]\
\nGiven three momenta p1,p2,p3, obtain a function which transforms these to \
the representation in terms of S0, a and s.\nReturns a function which takes \
one argument, the expression to be transformed.\n\n\
TB3PToS0as[p1_Symbol,p2_Symbol,p3_Symbol,q_Symbol,S0_Symbol,a_Symbol,s_Symbol]\
\nIf an additional momentum q is supplied, it is included in the \
transformation. Currently this assumes that q is a four-dimensional vector \
and is described by\nq={cos1,\!\(\*SqrtBox[\(1 - \*SuperscriptBox[\(cos2\), \
\(2\)]\)]\)cos1,\!\(\*SqrtBox[\(1 - \*SuperscriptBox[\(cos1\), \
\(2\)]\)]\)\!\(\*SqrtBox[\(1 - \*SuperscriptBox[\(cos2\), \
\(2\)]\)]\)Cos[phi],\!\(\*SqrtBox[\(1 - \*SuperscriptBox[\(cos1\), \
\(2\)]\)]\)\!\(\*SqrtBox[\(1 - \*SuperscriptBox[\(cos2\), \
\(2\)]\)]\)Sin[phi]}\n\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TB3PFromS0as", "::", "usage"}], "=", 
    "\"\<TB3PFromS0as[p1_Symbol,p2_Symbol,p3_Symbol,S0_Symbol,a_Symbol,s_\
Symbol]\nGiven three momenta p1,p2,p3, obtain a function which transforms \
from the representation in terms of S0, a and s back to the momenta p1,p2,p3.\
\nReturns a function which takes one argument, the expression to be \
transformed.\n\>\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBProjectToSymmetricPoint", "::", "usage"}], "=", 
    "\"\<TBProjectToSymmetricPoint[expr_,q_Symbol,p_Symbol,momenta___Symbol]\n\
Project an expression with internal loop momentum q to the symmetric point \
with average momentum p. The last arguments should be all involved momenta. \n\
According to their number, the correct symmetric-point configuration is \
chosen.\n\>\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBProjectToSymmetricPointSpatial", "::", "usage"}], "=", 
   "\"\<TBProjectToSymmetricPointSpatial[expr_,q_Symbol,p_Symbol,momenta___\
Symbol]\nProject an expression with internal loop momentum q to the symmetric \
point in the d-1 dimensional subspace with average momentum p.\nThis is \
useful for applications at finite temperature, where the 0th component is \
discrete.\nThe last arguments should be all involved momenta. According to \
their number, the correct symmetric-point configuration is chosen.\n\>\""}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.935567912385614*^9, 3.935567916272023*^9}, {
  3.935568143936611*^9, 3.935568169625534*^9}, {3.9358321456338778`*^9, 
  3.935832171001377*^9}, {3.9368696650580807`*^9, 3.936869694375965*^9}, {
  3.94178142185923*^9, 3.941781439115329*^9}, {3.949681157233675*^9, 
  3.9496815226139183`*^9}, {3.949681675246337*^9, 3.949681704138084*^9}, {
  3.949681749438377*^9, 3.9496817993779783`*^9}, {3.9496818297129107`*^9, 
  3.949681870553808*^9}, {3.949681936187161*^9, 
  3.949682025610216*^9}},ExpressionUUID->"b369a129-6cd6-4cba-9c5e-\
28d2d18ce42d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TBInfo", "[", "\"\<FormTracer\>\"", "]"}], ":=", 
   RowBox[{"Global`ShowFormTracerDefinitions", "[", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBInfo", "[", "\"\<Extensions\>\"", "]"}], ":=", 
   RowBox[{"Global`ShowFormTracerExtensions", "[", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.93391367265073*^9, 3.933913682270685*^9}, {
  3.933919257135292*^9, 3.9339192661881237`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"9dedee05-7403-4f49-af58-65aba455c566"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBInfo", "[", "\"\<BaseBuilder\>\"", "]"}], ":=", 
   RowBox[{
   "Print", "@", 
    "\"\<TensorBases provides facilities for exporting and importing bases:\n\
\\nTBImportBasis and TBExportBasis allow for importing user-written basis \
definition files and automatic export of bases in memory to such definition \
files.\n\\nTBExportCache writes any basis data in memory to disk at a \
specified location.\n\\nTBUnregister allows to remove basis names from the \
registry, which allows one to overwrite bases by custom imports.\n\
\\nTBRestrictBasis creates a new basis from an old one by simple restriction.\
\n\\nTBConstructBasis creates a new basis from a set of primitive tensors. \
The method automatically takes tensor products of multiple given tensor \
spaces and reduces any overcomplete set using a given inner product to a \
minimal basis (a maximal linearly independent set).\n\\nFor usage help with \
the aforementioned functions, please call their usage messages, e.g. \
TBConstructBasis::usage.\n\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.941220695961537*^9, 3.941221094400526*^9}, {
   3.9412211361305637`*^9, 3.9412211701939297`*^9}, 
   3.950784233752342*^9},ExpressionUUID->"9a87c29c-9c9e-41e8-b49c-\
cc4140e36576"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBInfo", "[", "\"\<Notation\>\"", "]"}], ":=", 
   RowBox[{
   "Print", "@", 
    "\"\<\!\(\*StyleBox[\"TensorBases\",FontWeight->\"Bold\"]\) uses the \
following conventions and notation:\nFor a given group, \!\(\*SuperscriptBox[\
\(T\), \(a\)]\) denotes the generators of the group in the fundamental \
representation, \!\(\*SuperscriptBox[\(t\), \(a\)]\) denotes the generators \
in the adjoint representation.\n\!\(\*SubscriptBox[\(\[Epsilon]\), \(abc\)]\) \
is the fully anti-symmetric Levi-Civita symbol.\nThe \!\(\*SuperscriptBox[\(T\
\), \(a\)]\) are normalised as \n\ttr[\!\(\*SuperscriptBox[\(T\), \
\(a\)]\)\!\(\*SuperscriptBox[\(T\), \(b\)]\)] = \!\(\*FractionBox[\(1\), \
\(2\)]\)\!\(\*SubscriptBox[\(\[Delta]\), \(ab\)]\).\nThe \
\!\(\*SubscriptBox[\(\[Gamma]\), \(\[Mu]\(\\\ \)\)]\)denote Euclidean gamma \
matrices and accordingly \!\(\*SubscriptBox[\(\[Gamma]\), \(5\(\\\ \)\)]\)= \
\!\(\*SubscriptBox[\(\[Gamma]\), \(0\)]\)\!\(\*SubscriptBox[\(\[Gamma]\), \(1\
\)]\)\!\(\*SubscriptBox[\(\[Gamma]\), \
\(2\)]\)\!\(\*SubscriptBox[\(\[Gamma]\), \(3\)]\)\n\>\""}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.949680536202301*^9, 3.949680695353366*^9}, {
   3.949680767061558*^9, 3.949680843277595*^9}, 
   3.9507842379924803`*^9},ExpressionUUID->"be2e6840-c5b7-46d7-8454-\
3e14628bb533"]
}, Closed]],

Cell[CellGroupData[{

Cell["Begin  Private", "Section",
 CellChangeTimes->{{3.933821636751761*^9, 
  3.933821641378183*^9}},ExpressionUUID->"e355101f-e9af-4241-a28d-\
d8c2150a645e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "Code",
 CellChangeTimes->{3.933840441045422*^9},
 CellLabel->"In[89]:=",ExpressionUUID->"334e210a-0008-4f8a-aa82-905e18a840c0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Head", "[", "$DistributedContexts", "]"}], "=!=", "List"}], ",", 
    RowBox[{"$DistributedContexts", "=", 
     RowBox[{"{", "}"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"$DistributedContexts", "=", 
  RowBox[{"$DistributedContexts", "\[Union]", 
   RowBox[{"{", 
    RowBox[{
    "$Context", ",", "\"\<TensorBases`Private`\>\"", ",", 
     "\"\<TensorBases`\>\"", ",", "\"\<FormTracer`\>\"", ",", 
     "\"\<FormTracer`Private`\>\""}], "}"}]}]}]}], "Input",
 CellChangeTimes->{3.9358253116819153`*^9, 3.9358254992011213`*^9, 
  3.935825625960437*^9},
 CellLabel->"In[90]:=",ExpressionUUID->"efff9365-e605-44e2-96ed-3bb97e4ee665"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"FormTracer`\"\>", ",", "\<\"FormTracer`Private`\"\>", 
   ",", "\<\"Global`\"\>", ",", "\<\"TensorBases`\"\>", 
   ",", "\<\"TensorBases`Private`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.941524047729227*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"8af54105-7c27-450e-a0d6-a4a27c093902"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["General definitions", "Chapter",
 CellChangeTimes->{{3.916731510678001*^9, 3.916731522402523*^9}, {
  3.918570212039898*^9, 3.918570215507206*^9}, {3.918570373553621*^9, 
  3.918570375493225*^9}, {3.933820027776561*^9, 
  3.933820031424642*^9}},ExpressionUUID->"337028bb-22a5-4c7a-abf1-\
dfc7beb47d0a"],

Cell[CellGroupData[{

Cell["Internal FormTracer definitions", "Section",
 CellChangeTimes->{{3.93383940254221*^9, 3.933839410773489*^9}, {
  3.933843619606341*^9, 
  3.933843620222424*^9}},ExpressionUUID->"dbe6e042-2d89-4387-bbaa-\
a2256028c645"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GlobalContext", "[", "expr_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"$ContextOld", ",", "result"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"$ContextOld", "=", "$Context"}], ";", "\[IndentingNewLine]", 
      RowBox[{"$Context", "=", "\"\<Global`\>\""}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"ReleaseHold", "[", "expr", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"$Context", "=", "$ContextOld"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"GlobalContext", ",", "HoldAll"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WithinContext", "[", 
    RowBox[{"context_String", ",", "expr_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"$ContextOld", ",", "result"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"$ContextOld", "=", "$Context"}], ";", "\[IndentingNewLine]", 
      RowBox[{"$Context", "=", "context"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Begin", "[", "context", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Changed to context\>\"", ",", " ", "$Context"}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"ReleaseHold", "[", "expr", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"End", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"$Context", "=", "$ContextOld"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"WithinContext", ",", "HoldRest"}], "]"}]}], "Input",
 CellChangeTimes->{{3.933847484783759*^9, 3.933847570239399*^9}, {
   3.933847775024*^9, 3.933847776448357*^9}, {3.933847878735534*^9, 
   3.933847910608111*^9}, {3.933847945663622*^9, 3.933847963451927*^9}, 
   3.933847999279422*^9, {3.941175650771698*^9, 3.941175688803445*^9}, {
   3.941178894276601*^9, 3.941178916649152*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"ef80aa05-824a-4470-b476-ddcf32456fc1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FormTracerNaming", "[", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "outputRulesLorentzTensors", ",", "outputRulesGroupTensors", ",", 
       "outputRules", ",", "\[IndentingNewLine]", 
       "privateOutputRulesLorentzTensors", ",", 
       "privateOutputRulesGroupTensors", ",", "privateOutputRules"}], "}"}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"outputRulesLorentzTensors", "=", 
       RowBox[{
        RowBox[{
        "Normal", "[", 
         "FormTracer`Private`lorentzTensorReplacementRulesOutput", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a_", "[", "c___", "]"}], ":>", "b_"}], ")"}], ":>", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Symbol", "[", 
             RowBox[{"\"\<TB\>\"", "~~", 
              RowBox[{
               RowBox[{"StringSplit", "[", 
                RowBox[{
                 RowBox[{"ToString", "[", "a", "]"}], ",", "\"\<FTx\>\""}], 
                "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "[", "c", "]"}], 
           ")"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"outputRulesGroupTensors", "=", 
       RowBox[{
        RowBox[{"Normal", "[", 
         RowBox[{
         "FormTracer`Private`groupTensorRep", ":", "qlacementRulesOutput"}], 
         "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a_", "[", "c___", "]"}], ":>", "b_"}], ")"}], ":>", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Symbol", "[", 
             RowBox[{"\"\<TB\>\"", "~~", 
              RowBox[{
               RowBox[{"StringSplit", "[", 
                RowBox[{
                 RowBox[{"ToString", "[", "a", "]"}], ",", "\"\<FTx\>\""}], 
                "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "[", "c", "]"}], 
           ")"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"outputRules", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"outputRulesLorentzTensors", ",", "outputRulesGroupTensors"}],
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Lorentz group:   \>\"", ",", 
        RowBox[{"outputRulesLorentzTensors", "//", "TableForm"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<\>\"", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<color group:     \>\"", ",", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{"outputRulesGroupTensors", ",", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"#", ",", "color", ",", "Infinity"}], "]"}], "&"}]}], 
          "]"}], "//", "TableForm"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<\>\"", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<flavor group:    \>\"", ",", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{"outputRulesGroupTensors", ",", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"#", ",", "flavor", ",", "Infinity"}], "]"}], "&"}]}], 
          "]"}], "//", "TableForm"}]}], "]"}], ";"}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.933838421446623*^9, 3.933838616567251*^9}, {
  3.9338387359107943`*^9, 3.933838736526185*^9}, {3.933841452047017*^9, 
  3.933841455886735*^9}, {3.9507019109435177`*^9, 3.950701911071124*^9}, {
  3.950702227039597*^9, 
  3.950702229939893*^9}},ExpressionUUID->"6e076dbb-146a-4f86-8dd4-\
efa0ea4f3802"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InsertOutputNaming", "[", "expr_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "groups", ",", "\[IndentingNewLine]", "outputRulesLorentzTensors", ",", 
       "outputRulesGroupTensors", ",", "outputRules", ",", 
       "\[IndentingNewLine]", "privateOutputRulesLorentzTensors", ",", 
       "privateOutputRulesGroupTensors", ",", "privateOutputRules", ",", 
       "\[IndentingNewLine]", "otherRules"}], "\[IndentingNewLine]", "}"}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"outputRulesLorentzTensors", "=", 
       RowBox[{
        RowBox[{
        "Normal", "[", 
         "FormTracer`Private`lorentzTensorReplacementRulesOutput", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a_", "[", "c___", "]"}], ":>", "b_"}], ")"}], ":>", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Symbol", "[", 
              RowBox[{"\"\<TB\>\"", "~~", 
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{
                  RowBox[{"ToString", "[", "a", "]"}], ",", "\"\<FTx\>\""}], 
                 "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "[", "c", "]"}], ":>",
             "b"}], ")"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"outputRulesGroupTensors", "=", 
       RowBox[{
        RowBox[{
        "Normal", "[", "FormTracer`Private`groupTensorReplacementRulesOutput",
          "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a_", "[", "c___", "]"}], ":>", "b_"}], ")"}], ":>", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Symbol", "[", 
              RowBox[{"\"\<TB\>\"", "~~", 
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{
                  RowBox[{"ToString", "[", "a", "]"}], ",", "\"\<FTx\>\""}], 
                 "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "[", "c", "]"}], ":>",
             "b"}], ")"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"outputRules", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"outputRulesLorentzTensors", ",", "outputRulesGroupTensors"}],
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"privateOutputRulesLorentzTensors", "=", 
       RowBox[{
        RowBox[{
        "Normal", "[", 
         "FormTracer`Private`lorentzTensorReplacementRulesOutput", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a_", "[", "c___", "]"}], ":>", "b_"}], ")"}], ":>", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Symbol", "[", 
              RowBox[{"\"\<TensorBases`Private`TB\>\"", "~~", 
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{
                  RowBox[{"ToString", "[", "a", "]"}], ",", "\"\<FTx\>\""}], 
                 "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "[", "c", "]"}], ":>",
             "b"}], ")"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"privateOutputRulesGroupTensors", "=", 
       RowBox[{
        RowBox[{
        "Normal", "[", "FormTracer`Private`groupTensorReplacementRulesOutput",
          "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a_", "[", "c___", "]"}], ":>", "b_"}], ")"}], ":>", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Symbol", "[", 
              RowBox[{"\"\<TensorBases`Private`TB\>\"", "~~", 
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{
                  RowBox[{"ToString", "[", "a", "]"}], ",", "\"\<FTx\>\""}], 
                 "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "[", "c", "]"}], ":>",
             "b"}], ")"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"privateOutputRules", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
        "privateOutputRulesLorentzTensors", ",", 
         "privateOutputRulesGroupTensors"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"groups", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TensorBases`Private`flavor", "->", "Global`flavor"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"TensorBases`Private`color", "->", "Global`color"}]}], 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"otherRules", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TensorBases`Private`sigma", ":>", "Global`sigma"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"TensorBases`Private`pdash", ":>", "Global`pdash"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"TensorBases`Private`psdash", ":>", "Global`psdash"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"TensorBases`Private`transProj", ":>", "Global`transProj"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"TensorBases`Private`longProj", ":>", "Global`longProj"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
         "TensorBases`Private`transProjMagnetic", ":>", 
          "Global`transProjMagnetic"}], ",", "\[IndentingNewLine]", 
         RowBox[{
         "TensorBases`Private`transProjElectric", ":>", 
          "Global`transProjElectric"}]}], "\[IndentingNewLine]", "}"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"expr", "//.", "groups"}], "//.", "outputRules"}], "//.", 
          "privateOutputRules"}], "//.", "otherRules"}], "/.", 
        RowBox[{
         RowBox[{"a_Symbol", "/;", 
          RowBox[{
           RowBox[{"Context", "[", "a", "]"}], "==", 
           "\"\<TensorBases`Private`\>\""}]}], ":>", 
         RowBox[{"Symbol", "[", 
          RowBox[{"\"\<Global`\>\"", "<>", 
           RowBox[{"SymbolName", "[", "a", "]"}]}], "]"}]}]}], "]"}], ";"}]}],
     "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.933833876764284*^9, 3.9338339413967957`*^9}, {
   3.933833972229079*^9, 3.933834167020243*^9}, {3.9338342153726*^9, 
   3.9338342157806687`*^9}, {3.933837489957266*^9, 3.933837550765798*^9}, {
   3.9338382714222393`*^9, 3.9338383352946167`*^9}, {3.933840614470008*^9, 
   3.93384070635058*^9}, {3.933840866422611*^9, 3.933840883375325*^9}, {
   3.933840987407135*^9, 3.933841035854702*^9}, {3.9338411904790173`*^9, 
   3.9338412314069366`*^9}, {3.933841270479463*^9, 3.933841274599712*^9}, {
   3.933841364087409*^9, 3.933841366040209*^9}, {3.933841755976303*^9, 
   3.933841760695524*^9}, {3.933843628016041*^9, 3.933843641392967*^9}, {
   3.933846047264516*^9, 3.933846051232049*^9}, {3.933920097856282*^9, 
   3.933920104627795*^9}, {3.933920161842093*^9, 3.933920165476227*^9}, {
   3.933920682476841*^9, 3.933920691609529*^9}, {3.9339223784964547`*^9, 
   3.933922378860069*^9}, {3.9358248094446373`*^9, 3.935824817628593*^9}, {
   3.9358248913363447`*^9, 3.935824891484436*^9}, {3.9507003620234957`*^9, 
   3.950700366351159*^9}, 3.950700398168758*^9, {3.950700516027607*^9, 
   3.9507005693716373`*^9}, {3.9507015420514603`*^9, 3.9507015492994823`*^9}, 
   3.9507016949279203`*^9, {3.950702152007757*^9, 3.950702156503503*^9}, {
   3.950702347335701*^9, 3.950702364220894*^9}, {3.950702461891747*^9, 
   3.9507025033813868`*^9}, {3.9507025545594807`*^9, 
   3.950702562651373*^9}},ExpressionUUID->"4067993b-78cc-4eab-a413-\
1ccb6e45d9eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InsertInputNaming", "[", "expr_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"inputRulesLorentzTensors", ",", "inputRulesGroupTensors"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"inputRulesLorentzTensors", "=", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{
          "Normal", "[", 
           "FormTracer`Private`lorentzTensorReplacementRulesInput", "]"}], 
          ",", 
          RowBox[{"MatchQ", "[", 
           RowBox[{
            RowBox[{"_", "[", "__", "]"}], ":>", 
            RowBox[{"_", "[", "__", "]"}]}], "]"}]}], "]"}], "/.", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a_", "[", "d__", "]"}], ":>", 
            RowBox[{"b_", "[", "c__", "]"}]}], ")"}], ":>", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a", "[", "d", "]"}], "->", 
            RowBox[{
             RowBox[{"Symbol", "[", 
              RowBox[{"\"\<TB\>\"", "~~", 
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{
                  RowBox[{"ToString", "[", "b", "]"}], ",", "\"\<FTx\>\""}], 
                 "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "[", "c", "]"}]}],
            ")"}]}], "\[IndentingNewLine]", "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inputRulesGroupTensors", "=", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{
          "Normal", "[", 
           "FormTracer`Private`groupTensorReplacementRulesInput", "]"}], ",", 
          
          RowBox[{"MatchQ", "[", 
           RowBox[{
            RowBox[{"_", "[", "__", "]"}], ":>", 
            RowBox[{"_", "[", "__", "]"}]}], "]"}]}], "]"}], "/.", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a_", "[", "d__", "]"}], ":>", 
            RowBox[{"b_", "[", "c__", "]"}]}], ")"}], ":>", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a", "[", "d", "]"}], "->", 
            RowBox[{
             RowBox[{"Symbol", "[", 
              RowBox[{"\"\<TB\>\"", "~~", 
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{
                  RowBox[{"ToString", "[", "b", "]"}], ",", "\"\<FTx\>\""}], 
                 "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "[", "c", "]"}]}],
            ")"}]}], "\[IndentingNewLine]", "}"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{"expr", "//.", "inputRulesLorentzTensors"}], "//.", 
        "inputRulesGroupTensors"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.933857165667118*^9, 3.933857182796328*^9}, {
  3.933858230693149*^9, 3.933858266931025*^9}, {3.93391992643932*^9, 
  3.93391994147192*^9}, {3.93392021451739*^9, 3.933920214657308*^9}, {
  3.933924042195753*^9, 3.933924042540813*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"0506a667-986c-4b85-9f62-5514c39fc506"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBFormTrace", "[", "expr_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"processedExpr", ",", "result"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"processedExpr", "=", 
       RowBox[{"InsertOutputNaming", "[", "expr", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"GlobalContext", "[", 
        RowBox[{"FormTracer`FormTrace", "[", "processedExpr", "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.933837579149148*^9, 3.933837611957479*^9}, 
   3.933837651981765*^9, {3.933839700718165*^9, 3.933839710117653*^9}, {
   3.933844947927812*^9, 3.933844957983907*^9}, {3.933845403008263*^9, 
   3.933845497439179*^9}, {3.93384559640789*^9, 3.933845608255879*^9}, {
   3.933846028576112*^9, 3.933846053808133*^9}, {3.933846102248556*^9, 
   3.933846105551919*^9}, {3.9338475818161907`*^9, 3.933847592319663*^9}, {
   3.933847701760359*^9, 3.933847790448333*^9}, {3.933847826927883*^9, 
   3.933847832304009*^9}, {3.933847923200135*^9, 3.933847973591595*^9}, {
   3.933919991031478*^9, 3.93392000256598*^9}, {3.9339223133174562`*^9, 
   3.9339223256892033`*^9}, {3.933922385987995*^9, 3.9339223928695*^9}, {
   3.933923733484123*^9, 3.933923735870367*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"b63997b2-abf3-4330-be84-36295372784e"],

Cell[BoxData[{
 RowBox[{"SetAttributes", "[", 
  RowBox[{"TBsps", ",", "Orderless"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"TBsp", ",", "Orderless"}], "]"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBsp", "[", 
    RowBox[{"0", ",", "a_"}], "]"}], "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TBsp", "[", 
    RowBox[{"a_", ",", "0"}], "]"}], "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBsp", "[", 
     RowBox[{"0", ",", "0"}], "]"}], "=", "0"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBsps", "[", 
    RowBox[{"0", ",", "a_"}], "]"}], "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TBsps", "[", 
    RowBox[{"a_", ",", "0"}], "]"}], "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBsps", "[", 
     RowBox[{"0", ",", "0"}], "]"}], "=", "0"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBvec", "[", 
     RowBox[{"0", ",", "mu_"}], "]"}], "=", "0"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBvecs", "[", 
    RowBox[{"0", ",", "mu_"}], "]"}], "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBvecs", "[", 
     RowBox[{"p_", ",", "0"}], "]"}], "=", "0"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TBsp", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"b_", "+", "c_"}]}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"TBsp", "[", 
     RowBox[{"a", ",", "b"}], "]"}], "+", 
    RowBox[{"TBsp", "[", 
     RowBox[{"a", ",", "c"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TBsp", "[", 
    RowBox[{"a_", ",", 
     RowBox[{
      RowBox[{"-", "1"}], "b_"}]}], "]"}], ":=", " ", 
   RowBox[{"-", 
    RowBox[{"TBsp", "[", 
     RowBox[{"a", ",", "b"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBsp", "[", 
     RowBox[{"b_", ",", 
      RowBox[{
       RowBox[{"a_", "?", "NumericQ"}], " ", "c_"}]}], "]"}], ":=", " ", 
    RowBox[{"a", " ", 
     RowBox[{"TBsp", "[", 
      RowBox[{"b", ",", "c"}], "]"}]}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBsps", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"b_", "+", "c_"}]}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"TBsps", "[", 
     RowBox[{"a", ",", "b"}], "]"}], "+", 
    RowBox[{"TBsps", "[", 
     RowBox[{"a", ",", "c"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TBsps", "[", 
    RowBox[{"a_", ",", 
     RowBox[{
      RowBox[{"-", "1"}], "b_"}]}], "]"}], ":=", " ", 
   RowBox[{"-", 
    RowBox[{"TBsps", "[", 
     RowBox[{"a", ",", "b"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBsps", "[", 
     RowBox[{"b_", ",", 
      RowBox[{
       RowBox[{"a_", "?", "NumericQ"}], " ", "c_"}]}], "]"}], ":=", " ", 
    RowBox[{"a", " ", 
     RowBox[{"TBsps", "[", 
      RowBox[{"b", ",", "c"}], "]"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TBvec", "[", 
    RowBox[{
     RowBox[{"p_", "+", "q_"}], ",", "mu_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"TBvec", "[", 
     RowBox[{"p", ",", "mu"}], "]"}], "+", 
    RowBox[{"TBvec", "[", 
     RowBox[{"q", ",", "mu"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TBvec", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], " ", "p_"}], ",", "mu_"}], "]"}], ":=", " ", 
   RowBox[{"-", 
    RowBox[{"TBvec", "[", 
     RowBox[{"p", ",", "mu"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBvec", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"n_", "?", "NumericQ"}], " ", "a_"}], ",", "mu_"}], "]"}], ":=", 
    RowBox[{"n", " ", 
     RowBox[{"TBvec", "[", 
      RowBox[{"a", ",", "mu"}], "]"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TBvecs", "[", 
    RowBox[{
     RowBox[{"p_", "+", "q_"}], ",", "mu_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"TBvecs", "[", 
     RowBox[{"p", ",", "mu"}], "]"}], "+", 
    RowBox[{"TBvecs", "[", 
     RowBox[{"q", ",", "mu"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TBvecs", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], " ", "p_"}], ",", "mu_"}], "]"}], ":=", " ", 
   RowBox[{"-", 
    RowBox[{"TBvecs", "[", 
     RowBox[{"p", ",", "mu"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TBvecs", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"n_", "?", "NumericQ"}], " ", "a_"}], ",", "mu_"}], "]"}], ":=", 
   RowBox[{"n", " ", 
    RowBox[{"TBvecs", "[", 
     RowBox[{"a", ",", "mu"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9338490452002974`*^9, 3.933849125008606*^9}, {
  3.933852074385031*^9, 3.933852075840746*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"07be19eb-22d0-491d-acac-4ebb05b77005"]
}, Closed]],

Cell[CellGroupData[{

Cell["Helper  functions", "Section",
 CellChangeTimes->{{3.933821655685559*^9, 3.933821660282758*^9}, 
   3.935831553810995*^9},ExpressionUUID->"2da5ecf0-e090-4d2e-b392-\
bb3466e0c2eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBPrint", "[", 
    RowBox[{"thing_", ",", "level_Integer"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"IntegerQ", "[", "Global`TBVerbose", "]"}], "&&", 
      RowBox[{"Global`TBVerbose", ">=", "level"}]}], ",", 
     RowBox[{"Print", "[", "thing", "]"}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"TBPrint", "[", 
    RowBox[{"thing_List", ",", "level_Integer"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"IntegerQ", "[", "Global`TBVerbose", "]"}], "&&", 
      RowBox[{"Global`TBVerbose", ">=", "level"}]}], ",", 
     RowBox[{"Print", "@@", "thing"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.933909387245949*^9, 3.933909474574534*^9}, {
  3.933909509518485*^9, 3.933909574902245*^9}, {3.933936891970323*^9, 
  3.933936911957779*^9}, {3.968961231864278*^9, 
  3.9689612343557453`*^9}},ExpressionUUID->"f67051ff-d457-4e90-a315-\
afaf11fe82c4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AlreadyUnique", "[", "x_Symbol", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"split", ",", "tailNumbers"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"split", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "x", "]"}], ",", "\"\<$\>\""}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "split", "]"}], "==", "1"}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tailNumbers", "=", 
      RowBox[{"DigitQ", "[", 
       RowBox[{"split", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "tailNumbers", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UniqueStem", "[", "x_Symbol", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "split", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"split", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "x", "]"}], ",", "\"\<$\>\""}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"split", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.933871965429412*^9, 3.9338721785493603`*^9}, {
  3.933872213053827*^9, 3.933872256077825*^9}, {3.9338732972952347`*^9, 
  3.933873317397984*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"8ce792ad-49a8-4a56-8abc-de5826491428"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TBUnique", "[", "x_Symbol", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Return", "[", "\[IndentingNewLine]", 
      RowBox[{"Unique", "[", 
       RowBox[{"Symbol", "[", 
        RowBox[{"UniqueStem", "[", "x", "]"}], "]"}], "]"}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.933873271412943*^9, 3.933873291581171*^9}, {
  3.933873325573277*^9, 3.933873343981378*^9}, {3.933873388230514*^9, 
  3.933873397421405*^9}, {3.933873456478541*^9, 3.933873463278317*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"0b12d5b2-017d-4cf6-b1cf-cbe10312ea40"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetAllSymbols", "[", "expr_", "]"}], ":=", 
  RowBox[{"DeleteDuplicates", "@", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{"{", "expr", "}"}], ",", "_Symbol", ",", "Infinity"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.933869128693199*^9, 3.93386914111611*^9}, {
  3.933869184368537*^9, 3.933869185956415*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"eda1049b-d470-45b6-af18-dbfc767fa940"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeIndexList", "[", 
   RowBox[{"len_Integer", ",", "expr___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "list", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"{", "expr", "}"}], "]"}], "==", "1"}], "&&", 
        RowBox[{
         RowBox[{"Head", "[", 
          RowBox[{
           RowBox[{"{", "expr", "}"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "===", "List"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"list", "=", "expr"}], ",", "\[IndentingNewLine]", 
       RowBox[{"list", "=", 
        RowBox[{"{", "expr", "}"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "list", "]"}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<Index list is empty!\>\"", "]"}], ";", 
        RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "list", "]"}], "!=", "len"}], ",", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Index list must have \>\"", "~~", 
          RowBox[{"ToString", "[", "len", "]"}], "~~", "\"\< elements!\>\""}],
          "]"}], ";", 
        RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"AnyTrue", "[", 
        RowBox[{"list", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "#", "]"}], "=!=", "List"}], "&"}]}], "]"}], 
       ",", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<An index list must consist of one list for every particle!\>\"",
          "]"}], ";", 
        RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "list", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.933820206889073*^9, 3.9338205499941053`*^9}, 
   3.9338489083760977`*^9, {3.933874533918248*^9, 3.933874544702379*^9}, {
   3.933874592918918*^9, 3.933874629846341*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"9f480c74-eca2-469f-bfe8-255f7c611d82"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TBDirectory", "=", 
   RowBox[{
    RowBox[{"SelectFirst", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"FileNameJoin", "[", 
           RowBox[{"{", 
            RowBox[{
            "$UserBaseDirectory", ",", "\"\<Applications\>\"", ",", 
             "\"\<TensorBases\>\""}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"FileNameJoin", "[", 
           RowBox[{"{", 
            RowBox[{
            "$BaseDirectory", ",", "\"\<Applications\>\"", ",", 
             "\"\<TensorBases\>\""}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"FileNameJoin", "[", 
           RowBox[{"{", 
            RowBox[{
            "$InstallationDirectory", ",", "\"\<AddOns\>\"", ",", 
             "\"\<Applications\>\"", ",", "\"\<TensorBases\>\""}], "}"}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"FileNameJoin", "[", 
           RowBox[{"{", 
            RowBox[{
            "$InstallationDirectory", ",", "\"\<AddOns\>\"", ",", 
             "\"\<Packages\>\"", ",", "\"\<TensorBases\>\""}], "}"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"FileNameJoin", "[", 
           RowBox[{"{", 
            RowBox[{
            "$InstallationDirectory", ",", "\"\<AddOns\>\"", ",", 
             "\"\<ExtraPackages\>\"", ",", "\"\<TensorBases\>\""}], "}"}], 
           "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"Select", "[", 
         RowBox[{"$Path", ",", 
          RowBox[{
           RowBox[{"StringContainsQ", "[", 
            RowBox[{"#", ",", "\"\<TensorBases\>\""}], "]"}], "&"}]}], 
         "]"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DirectoryQ", "[", "#", "]"}], "&"}]}], "\[IndentingNewLine]", 
     "]"}], "<>", "\"\</\>\""}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Head", "[", "TBDirectory", "]"}], "=!=", "String"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
    "Print", "[", 
     "\"\<\\n!!!!!!!!!!\\nCannot find valid TensorBases installation! Cached \
tensor data is not available, loading the package may take an extremely long \
time.\\n!!!!!!!!!!\\n\>\"", "]"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.925554963689718*^9, 3.925555018648334*^9}, {
   3.925555067350979*^9, 3.925555091557687*^9}, {3.933823818986477*^9, 
   3.933823866097943*^9}, {3.933823926618765*^9, 3.9338239610825243`*^9}, 
   3.933824033346868*^9, {3.93382410279498*^9, 3.933824126602005*^9}, 
   3.933843822671564*^9},
 CellLabel->
  "In[131]:=",ExpressionUUID->"87c42bbb-3c0d-454a-93a1-4b0b25de9b39"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AutoSaveRestore", "[", 
    RowBox[{"fileName_String", ",", "expr_", ",", 
     RowBox[{"dir_String", ":", "TBDirectory"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mdir", ",", "file", ",", "ret"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mdir", "=", 
       RowBox[{"ReleaseHold", "[", "dir", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{"mdir", ",", 
           RowBox[{"{", 
            RowBox[{"-", "1"}], "}"}]}], "]"}], "!=", "\"\</\>\""}], ",", 
        RowBox[{"mdir", "=", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"mdir", ",", "\"\</\>\""}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"file", "=", 
       RowBox[{"mdir", "<>", "fileName", "<>", "\"\<.m\>\""}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FileExistsQ", "[", "file", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ret", "=", 
          RowBox[{"Import", "[", "file", "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ret", "=", 
          RowBox[{"ReleaseHold", "[", "expr", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{"file", ",", "ret"}], "]"}], ";"}]}], "\[IndentingNewLine]",
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "ret", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"AutoSaveRestore", ",", "HoldRest"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.93382373761017*^9, {3.933823885018357*^9, 3.9338240884984617`*^9}, {
   3.933843782310613*^9, 3.933843827847189*^9}, {3.941176726074692*^9, 
   3.941176856320405*^9}, {3.9411770431049643`*^9, 3.941177084152631*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"c69a1f90-52d2-4c70-a615-7352da6779eb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Default implementations", "Section",
 CellChangeTimes->{{3.933821655685559*^9, 
  3.9338216770738373`*^9}},ExpressionUUID->"ee0a3f20-4449-4c13-b99e-\
a02f47060c2b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TBGetBasisElement", "[", 
    RowBox[{"name_String", ",", "All", ",", "indices___"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Unknown basis \>\"", "~~", "name", "~~", "\"\<. Aborting\>\""}], 
       "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBGetBasisElement", "[", 
    RowBox[{"name_String", ",", "n_Integer", ",", "indices___"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Unknown basis \>\"", "~~", "name", "~~", "\"\<. Aborting\>\""}], 
       "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBGetBasisElement", "[", 
    RowBox[{"name_String", ",", "All"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Unknown basis \>\"", "~~", "name", "~~", "\"\<. Aborting\>\""}], 
       "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBGetBasisElement", "[", 
    RowBox[{"name_String", ",", "n_Integer"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Unknown basis \>\"", "~~", "name", "~~", "\"\<. Aborting\>\""}], 
       "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBGetBasisElement", "[", "name_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "Print", "[", 
       "\"\<TBGetBasisElement[...] requires at least two arguments! \
Aborting\>\"", "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBGetBasisElement", "[", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "Print", "[", 
       "\"\<TBGetBasisElement[...] requires at least two arguments! \
Aborting\>\"", "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.933820084201224*^9, 3.933820126305143*^9}, {
   3.933820156441168*^9, 3.933820203145113*^9}, 3.933820279736702*^9, {
   3.93382058700195*^9, 3.93382058740196*^9}, 3.933820732552956*^9, {
   3.934541116486633*^9, 3.934541120163384*^9}, {3.934541150414443*^9, 
   3.9345411605046997`*^9}, {3.934541357247246*^9, 3.934541411473709*^9}, {
   3.9358195250859213`*^9, 3.935819530022026*^9}, {3.9368588607193537`*^9, 
   3.936858865860029*^9}, {3.936858907488002*^9, 3.936858908223516*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"822fba52-6de1-43c4-885f-5e6ab1f6fc3b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TBGetVertex", "[", 
    RowBox[{"name_String", ",", "All", ",", "indices___"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Unknown basis \>\"", "~~", "name", "~~", "\"\<. Aborting\>\""}], 
       "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBGetVertex", "[", 
    RowBox[{"name_String", ",", "n_Integer", ",", "indices___"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Unknown basis \>\"", "~~", "name", "~~", "\"\<. Aborting\>\""}], 
       "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBGetVertex", "[", 
    RowBox[{"name_String", ",", "All"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Unknown basis \>\"", "~~", "name", "~~", "\"\<. Aborting\>\""}], 
       "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBGetVertex", "[", 
    RowBox[{"name_String", ",", "n_Integer"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Unknown basis \>\"", "~~", "name", "~~", "\"\<. Aborting\>\""}], 
       "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBGetVertex", "[", "name_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "Print", "[", 
       "\"\<TBGetVertex[...] requires at least two arguments! Aborting\>\"", 
       "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBGetVertex", "[", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "Print", "[", 
       "\"\<TBGetVertex[...] requires at least two arguments! Aborting\>\"", 
       "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.933820084201224*^9, 3.933820126305143*^9}, {
   3.933820156441168*^9, 3.933820203145113*^9}, 3.933820279736702*^9, {
   3.93382058700195*^9, 3.93382058740196*^9}, 3.933820732552956*^9, {
   3.934541116486633*^9, 3.934541120163384*^9}, {3.934541150414443*^9, 
   3.9345411605046997`*^9}, {3.934541357247246*^9, 3.934541411473709*^9}, {
   3.935818624017025*^9, 3.9358186298009233`*^9}, {3.935819534990197*^9, 
   3.93581953922991*^9}, {3.936858870848*^9, 3.936858905051865*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"bbdfd93e-0b45-4ca4-90ca-a3a9b22aa1ac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TBGetMetric", "[", "name_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Unknown basis \>\"", "~~", "name", "~~", "\"\<. Aborting\>\""}], 
       "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBGetMetric", "[", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "Print", "[", "\"\<TBGetMetric[...] requires an argument. Aborting\>\"",
        "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9338206326736383`*^9, 3.9338206410655746`*^9}, 
   3.933820678528954*^9, {3.934541485975546*^9, 3.934541489674357*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"5b3a0713-e32a-40c8-baf1-a8d35b9ca4d7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TBGetInverseMetric", "[", "name_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Unknown basis \>\"", "~~", "name", "~~", "\"\<. Aborting\>\""}], 
       "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBGetInverseMetric", "[", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "Print", "[", 
       "\"\<TBGetInverseMetric[...] requires an argument. Aborting\>\"", 
       "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.933820697744837*^9, 3.933820698448894*^9}, {
  3.934541460485869*^9, 3.934541482985652*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"e639b518-8d0a-4143-92d8-ccb99c3e3134"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TBGetProjector", "[", 
    RowBox[{"name_String", ",", "All", ",", "indices___"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Unknown basis \>\"", "~~", "name", "~~", "\"\<. Aborting\>\""}], 
       "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBGetProjector", "[", 
    RowBox[{"name_String", ",", "n_Integer", ",", "indices___"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Unknown basis \>\"", "~~", "name", "~~", "\"\<. Aborting\>\""}], 
       "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBGetProjector", "[", 
    RowBox[{"name_String", ",", "All"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Unknown basis \>\"", "~~", "name", "~~", "\"\<. Aborting\>\""}], 
       "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBGetProjector", "[", 
    RowBox[{"name_String", ",", "n_Integer"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Unknown basis \>\"", "~~", "name", "~~", "\"\<. Aborting\>\""}], 
       "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBGetProjector", "[", "name_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "Print", "[", 
       "\"\<TBGetProjector[...] requires at least two arguments! \
Aborting\>\"", "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBGetProjector", "[", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "Print", "[", 
       "\"\<TBGetProjector[...] requires at least two arguments! \
Aborting\>\"", "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.933820577209681*^9, 3.933820589649977*^9}, 
   3.933820736440908*^9, 3.93382155331371*^9, {3.9345414193265553`*^9, 
   3.934541439811163*^9}, {3.935819550782126*^9, 3.935819554893808*^9}, {
   3.936858887647656*^9, 3.936858901100045*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"235217ce-2a52-433b-9dcb-ca48aa796831"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definitions to build bases", "Chapter",
 CellChangeTimes->{{3.9185704568927*^9, 3.918570460923884*^9}, {
  3.933820079377877*^9, 3.933820080112567*^9}, {3.933909037637803*^9, 
  3.933909058965689*^9}},ExpressionUUID->"b45359a4-435a-48f5-938f-\
6624251f7dc8"],

Cell[CellGroupData[{

Cell["Auto - Definition  Functions", "Section",
 CellChangeTimes->{{3.933904819148931*^9, 
  3.933904836439197*^9}},ExpressionUUID->"57618d00-5575-4b3a-bb3d-\
ab20be3bd518"],

Cell[CellGroupData[{

Cell["Checks and requirements", "Subsection",
 CellChangeTimes->{{3.933904854301352*^9, 3.933904861689367*^9}, {
   3.933908769189789*^9, 3.933908771798055*^9}, 
   3.935831546763763*^9},ExpressionUUID->"fdbba363-df9e-4831-8273-\
2e976f9760de"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetBasisName", "[", "BasisDefinitionFile_String", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringPart", "[", 
           RowBox[{"BasisDefinitionFile", ",", 
            RowBox[{
             RowBox[{"-", "2"}], ";;"}]}], "]"}], "=!=", 
          RowBox[{"{", 
           RowBox[{"\"\<.\>\"", ",", "\"\<m\>\""}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<File \>\"", "~~", "BasisDefinitionFile", "~~", 
            "\"\< is not a Mathematica script!\>\""}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"Return", "[", 
        RowBox[{
         RowBox[{"StringSplit", "[", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"StringPart", "[", 
             RowBox[{"BasisDefinitionFile", ",", 
              RowBox[{";;", 
               RowBox[{"-", "3"}]}]}], "]"}], "]"}], ",", "\"\</\>\""}], 
          "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBCheck", "[", 
    RowBox[{"BasisName_String", ",", "Trait_String", ",", "f_"}], "]"}], ":=", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"Symbol", "[", 
      RowBox[{"\"\<TB\>\"", "~~", "Trait"}], "]"}], "[", "BasisName", "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBCheckBasisDefinitions", "[", "BasisName_String", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "errorPrefix", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"errorPrefix", "=", 
        RowBox[{
        "\"\<AutoDefineBasis:\>\"", "~~", "BasisName", "~~", "\"\<: \>\""}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<AutoDefine\>\"", ",", 
            RowBox[{
             RowBox[{"#", "===", "True"}], "&"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Return", "[", "False", "]"}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<Vertex\>\"", ",", "ListQ"}], 
           "]"}]}], ",", 
         RowBox[{
          RowBox[{"TBPrint", "[", 
           RowBox[{
            RowBox[{
            "errorPrefix", "~~", "\"\<Vertex definition missing!\>\""}], ",", 
            "0"}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<VertexStructure\>\"", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "#", "]"}], "=!=", "TBVertexStructure"}], 
             "&"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"TBPrint", "[", 
           RowBox[{
            RowBox[{
            "errorPrefix", "~~", "\"\<Vertex structure missing!\>\""}], ",", 
            "0"}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<Comment\>\"", ",", "StringQ"}], 
           "]"}]}], ",", 
         RowBox[{
          RowBox[{"TBPrint", "[", 
           RowBox[{
            RowBox[{
            "errorPrefix", "~~", "\"\<Comment definition missing!\>\""}], ",",
             "2"}], "]"}], ";", 
          RowBox[{
           RowBox[{"TBComment", "[", "BasisName", "]"}], "=", "\"\<\>\""}]}]}]
         , "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<Author\>\"", ",", "StringQ"}], 
           "]"}]}], ",", 
         RowBox[{
          RowBox[{"TBPrint", "[", 
           RowBox[{
            RowBox[{
            "errorPrefix", "~~", "\"\<Author definition missing!\>\""}], ",", 
            "2"}], "]"}], ";", 
          RowBox[{
           RowBox[{"TBAuthor", "[", "BasisName", "]"}], "=", "\"\<\>\""}]}]}],
         "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<VertexBasis\>\"", ",", "BooleanQ"}],
            "]"}]}], ",", 
         RowBox[{
          RowBox[{"TBPrint", "[", 
           RowBox[{
            RowBox[{
            "errorPrefix", "~~", 
             "\"\<VertexBasis setting missing, setting to False!\>\""}], ",", 
            "2"}], "]"}], ";", 
          RowBox[{
           RowBox[{"TBVertexBasis", "[", "BasisName", "]"}], "=", 
           "False"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{
           "BasisName", ",", "\"\<MomentumConservation\>\"", ",", "ListQ"}], 
           "]"}]}], ",", 
         RowBox[{
          RowBox[{"TBPrint", "[", 
           RowBox[{
            RowBox[{
            "errorPrefix", "~~", "\"\<Momentum conservation missing!\>\""}], 
            ",", "2"}], "]"}], ";", 
          RowBox[{
           RowBox[{"TBMomentumConservation", "[", "BasisName", "]"}], "=", 
           RowBox[{"{", "}"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<Usage\>\"", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "#", "]"}], "=!=", "TBUsage"}], "&"}]}], 
           "]"}]}], ",", 
         RowBox[{
          RowBox[{"TBPrint", "[", 
           RowBox[{
            RowBox[{
            "errorPrefix", "~~", "\"\<Usage definition missing!\>\""}], ",", 
            "0"}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<Indices\>\"", ",", "ListQ"}], 
           "]"}]}], ",", 
         RowBox[{
          RowBox[{"TBPrint", "[", 
           RowBox[{
            RowBox[{
            "errorPrefix", "~~", "\"\<Indices definition missing!\>\""}], ",",
             "0"}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<Basis\>\"", ",", "ListQ"}], "]"}]}],
          ",", 
         RowBox[{
          RowBox[{"TBPrint", "[", 
           RowBox[{
            RowBox[{
            "errorPrefix", "~~", "\"\<Basis definition missing!\>\""}], ",", 
            "0"}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<InnerProduct\>\"", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "#", "]"}], "=!=", "TBInnerProduct"}], 
             "&"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"TBPrint", "[", 
           RowBox[{
            RowBox[{
            "errorPrefix", "~~", "\"\<InnerProduct definition missing!\>\""}],
             ",", "0"}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<CanonicalProduct\>\"", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "#", "]"}], "=!=", "TBCanonicalProduct"}], 
             "&"}]}], "]"}]}], ",", 
         RowBox[{"TBPrint", "[", 
          RowBox[{
           RowBox[{
           "errorPrefix", "~~", 
            "\"\<CanonicalProduct definition missing! Some functions may/will \
break.\>\""}], ",", "1"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<Replacements\>\"", ",", "ListQ"}], 
           "]"}]}], ",", 
         RowBox[{
          RowBox[{"TBPrint", "[", 
           RowBox[{
            RowBox[{
            "errorPrefix", "~~", "\"\<Replacements definition missing!\>\""}],
             ",", "2"}], "]"}], ";", 
          RowBox[{
           RowBox[{"TBReplacements", "[", "BasisName", "]"}], "=", 
           RowBox[{"{", "}"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "True", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBCheckVertexBasisDefinitions", "[", "BasisName_String", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "errorPrefix", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"errorPrefix", "=", 
        RowBox[{
        "\"\<AutoDefineBasis:\>\"", "~~", "BasisName", "~~", "\"\<: \>\""}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<AutoDefine\>\"", ",", 
            RowBox[{
             RowBox[{"#", "===", "True"}], "&"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Return", "[", "False", "]"}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<Vertex\>\"", ",", "ListQ"}], 
           "]"}]}], ",", 
         RowBox[{
          RowBox[{"TBPrint", "[", 
           RowBox[{
            RowBox[{
            "errorPrefix", "~~", "\"\<Vertex definition missing!\>\""}], ",", 
            "0"}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<Comment\>\"", ",", "StringQ"}], 
           "]"}]}], ",", 
         RowBox[{
          RowBox[{"TBPrint", "[", 
           RowBox[{
            RowBox[{
            "errorPrefix", "~~", "\"\<Comment definition missing!\>\""}], ",",
             "2"}], "]"}], ";", 
          RowBox[{
           RowBox[{"TBComment", "[", "BasisName", "]"}], "=", 
           "\"\<\>\""}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<Author\>\"", ",", "StringQ"}], 
           "]"}]}], ",", 
         RowBox[{
          RowBox[{"TBPrint", "[", 
           RowBox[{
            RowBox[{
            "errorPrefix", "~~", "\"\<Author definition missing!\>\""}], ",", 
            "2"}], "]"}], ";", 
          RowBox[{
           RowBox[{"TBAuthor", "[", "BasisName", "]"}], "=", "\"\<\>\""}]}]}],
         "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{
           "BasisName", ",", "\"\<MomentumConservation\>\"", ",", "ListQ"}], 
           "]"}]}], ",", 
         RowBox[{
          RowBox[{"TBPrint", "[", 
           RowBox[{
            RowBox[{
            "errorPrefix", "~~", "\"\<Momentum conservation missing!\>\""}], 
            ",", "2"}], "]"}], ";", 
          RowBox[{
           RowBox[{"TBMomentumConservation", "[", "BasisName", "]"}], "=", 
           RowBox[{"{", "}"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<VertexBasis\>\"", ",", "BooleanQ"}],
            "]"}]}], ",", 
         RowBox[{
          RowBox[{"TBPrint", "[", 
           RowBox[{
            RowBox[{
            "errorPrefix", "~~", "\"\<VertexBasis setting missing!\>\""}], 
            ",", "0"}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<Usage\>\"", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "#", "]"}], "=!=", "TBUsage"}], "&"}]}], 
           "]"}]}], ",", 
         RowBox[{
          RowBox[{"TBPrint", "[", 
           RowBox[{
            RowBox[{
            "errorPrefix", "~~", "\"\<Usage definition missing!\>\""}], ",", 
            "0"}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<Indices\>\"", ",", "ListQ"}], 
           "]"}]}], ",", 
         RowBox[{
          RowBox[{"TBPrint", "[", 
           RowBox[{
            RowBox[{
            "errorPrefix", "~~", "\"\<Indices definition missing!\>\""}], ",",
             "0"}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<Basis\>\"", ",", "ListQ"}], "]"}]}],
          ",", 
         RowBox[{
          RowBox[{"TBPrint", "[", 
           RowBox[{
            RowBox[{
            "errorPrefix", "~~", "\"\<Basis definition missing!\>\""}], ",", 
            "0"}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<CanonicalProduct\>\"", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "#", "]"}], "=!=", "TBCanonicalProduct"}], 
             "&"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"TBPrint", "[", 
           RowBox[{
            RowBox[{
            "errorPrefix", "~~", 
             "\"\<CanonicalProduct definition missing!\>\""}], ",", "0"}], 
           "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"TBCheck", "[", 
           RowBox[{"BasisName", ",", "\"\<Replacements\>\"", ",", "ListQ"}], 
           "]"}]}], ",", 
         RowBox[{
          RowBox[{"TBPrint", "[", 
           RowBox[{
            RowBox[{
            "errorPrefix", "~~", "\"\<Replacements definition missing!\>\""}],
             ",", "2"}], "]"}], ";", 
          RowBox[{
           RowBox[{"TBReplacements", "[", "BasisName", "]"}], "=", 
           RowBox[{"{", "}"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "True", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBCheckRequirements", "[", "BasisName_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"errorPrefix", ",", "toString", ",", "groups"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"errorPrefix", "=", 
       RowBox[{
       "\"\<AutoDefineBasis:\>\"", "~~", "BasisName", "~~", "\"\<: \>\""}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "@", 
         RowBox[{"TBCheck", "[", 
          RowBox[{"BasisName", ",", "\"\<RequiredGroups\>\"", ",", "ListQ"}], 
          "]"}]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "errorPrefix", ",", "\"\<RequiredGroups definition missing!\>\""}], 
          "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"toString", "[", "a_Symbol", "]"}], ":=", 
       RowBox[{"SymbolName", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"toString", "[", "a_", "]"}], ":=", 
       RowBox[{"ToString", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"groups", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"toString", ",", 
         RowBox[{"TBRequiredGroups", "[", "BasisName", "]"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"TBPrint", "[", 
       RowBox[{
        RowBox[{
        "\"\<Basis \>\"", "~~", "BasisName", "~~", "\"\< requires \>\"", "~~", 
         RowBox[{"ToString", "[", "groups", "]"}]}], ",", "1"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"GlobalContext", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"Global`AddFormTracerGroup", ",", 
         RowBox[{"TBRequiredGroups", "[", "BasisName", "]"}]}], "]"}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "True", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.933870506806094*^9, 3.933870513742302*^9}, {
   3.933908779447246*^9, 3.933908900661884*^9}, {3.933909141759963*^9, 
   3.9339091587032347`*^9}, 3.933909240663517*^9, {3.933909723247353*^9, 
   3.933909777174752*^9}, {3.9339098291910667`*^9, 3.933909861686709*^9}, {
   3.9339099024869556`*^9, 3.933909919670759*^9}, {3.933936258735441*^9, 
   3.93393626684071*^9}, {3.933939327447095*^9, 3.933939333759482*^9}, {
   3.933940771374269*^9, 3.9339407769968433`*^9}, {3.933940824058124*^9, 
   3.933940824196915*^9}, {3.933940900285739*^9, 3.933940903121181*^9}, {
   3.933940956417768*^9, 3.93394104975813*^9}, {3.9339411316239443`*^9, 
   3.933941135545478*^9}, {3.933941225120933*^9, 3.933941228255686*^9}, {
   3.933941377293623*^9, 3.933941384388262*^9}, {3.9339588803835683`*^9, 
   3.933958880892844*^9}, {3.933958989607979*^9, 3.933958993858245*^9}, {
   3.933959306592581*^9, 3.933959311517179*^9}, {3.934347875733111*^9, 
   3.934347948131586*^9}, {3.934347985529148*^9, 3.934347986390778*^9}, {
   3.935466696384532*^9, 3.93546675014371*^9}, {3.9354676005122633`*^9, 
   3.935467701655942*^9}, {3.93546942968918*^9, 3.935469429816534*^9}, {
   3.935762368374463*^9, 3.935762409374302*^9}, 3.9366838772452927`*^9, {
   3.937410953138379*^9, 3.937410978210984*^9}, 3.937411496849022*^9, {
   3.9374115809376717`*^9, 3.937411582898073*^9}, 3.9374117760053787`*^9, {
   3.941174582792659*^9, 3.9411746127609*^9}, 3.9411807748431396`*^9, {
   3.941219309922535*^9, 3.941219345418728*^9}, 3.941220097331115*^9, {
   3.941221744421632*^9, 3.941221772650358*^9}, {3.950085647043741*^9, 
   3.9500857136732197`*^9}, {3.952953758397339*^9, 3.9529537678372726`*^9}, 
   3.969347674542384*^9, {3.969351499061469*^9, 3.969351504801731*^9}, {
   3.969353571532263*^9, 3.969353575633439*^9}, {3.96935390991082*^9, 
   3.969353929629046*^9}},ExpressionUUID->"276d2ca9-7d95-4b0a-b9e8-\
001c42d065e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Object construction", "Subsection",
 CellChangeTimes->{{3.933904854301352*^9, 3.933904870204526*^9}, {
  3.9374109190745583`*^9, 
  3.937410920104827*^9}},ExpressionUUID->"4d8cf1c7-8120-4fd8-8435-\
e5bdbedca1d6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBMakeBasis", "[", "BasisName_String", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rawBasis", "=", 
         RowBox[{"TBBasis", "[", "BasisName", "]"}]}], ",", 
        "momentumConservation"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"momentumConservation", "=", 
        RowBox[{"InsertOutputNaming", "[", 
         RowBox[{"TBMomentumConservation", "[", "BasisName", "]"}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"FullSimplify", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"InsertOutputNaming", "[", "rawBasis", "]"}], "//.", 
           "momentumConservation"}], ")"}]}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBBasisLength", "[", "BasisName_String", "]"}], ":=", 
   RowBox[{
    RowBox[{"TBBasis", "[", "BasisName", "]"}], "//", "Length"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.933871746101855*^9, 3.933871838166082*^9}, {
   3.9338718927742987`*^9, 3.933871895398252*^9}, {3.933871988870094*^9, 
   3.9338719937813263`*^9}, {3.933872263230435*^9, 3.933872284693341*^9}, {
   3.933873263855179*^9, 3.933873267606351*^9}, {3.933873478902442*^9, 
   3.933873499701709*^9}, {3.933922138306555*^9, 3.933922145000585*^9}, {
   3.935484723659025*^9, 3.9354847265710087`*^9}, 3.935484880147176*^9, {
   3.935819767468936*^9, 3.9358197691806083`*^9}, {3.935831299021215*^9, 
   3.9358313398287573`*^9}, {3.935831456188599*^9, 3.9358314651003237`*^9}, {
   3.9411746149595337`*^9, 3.941174636627953*^9}, {3.941181022369927*^9, 
   3.941181023719694*^9}, {3.9411810571626387`*^9, 3.941181058543953*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"3fdb3362-9708-45f6-90ec-4a08285d194a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBEvaluateBasisElement", "[", 
    RowBox[{"BasisName_String", ",", "n_Integer", ",", "indices___"}], "]"}], 
   ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rawBasisElement", ",", "idxList", ",", "originalIndices", ",", 
       "newIndices", ",", "replacements"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"n", ">", 
          RowBox[{"TBInternal", "[", 
           RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}]}], "||", 
         RowBox[{"n", "<", "1"}]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"n", ",", 
           RowBox[{"\"\< is outside of range [1,\>\"", "~~", 
            RowBox[{"ToString", "[", 
             RowBox[{"TBInternal", "[", 
              RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}], "]"}], 
            "~~", "\"\<] for basis \>\"", "~~", "BasisName"}]}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fixIndices", "[", "expr_", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"closedIndices", ",", "IndexReplacements"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"closedIndices", "=", 
           RowBox[{"FormTracer`GetClosedIndices", "[", 
            RowBox[{"InsertOutputNaming", "@", 
             RowBox[{
              RowBox[{"TBInternal", "[", 
               RowBox[{"BasisName", ",", "\"\<Basis\>\""}], "]"}], "[", 
              RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"IndexReplacements", ":=", 
           RowBox[{"Thread", "[", 
            RowBox[{"closedIndices", "->", 
             RowBox[{"Map", "[", 
              RowBox[{"TBUnique", ",", "closedIndices"}], "]"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"expr", "//.", "IndexReplacements"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"rawBasisElement", "=", 
       RowBox[{
        RowBox[{"InsertOutputNaming", "@", 
         RowBox[{
          RowBox[{"TBInternal", "[", 
           RowBox[{"BasisName", ",", "\"\<Basis\>\""}], "]"}], "[", 
          RowBox[{"[", "n", "]"}], "]"}]}], "//", "fixIndices"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"idxList", "=", 
       RowBox[{"MakeIndexList", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"TBInternal", "[", 
           RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}], "//", 
          "Length"}], ",", "indices"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"originalIndices", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"TBInternal", "[", 
         RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newIndices", "=", 
       RowBox[{"Flatten", "[", "idxList", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"replacements", "=", 
       RowBox[{"Thread", "[", 
        RowBox[{"originalIndices", "->", "newIndices"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rawBasisElement", "=", 
       RowBox[{"rawBasisElement", "/.", "replacements"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "rawBasisElement", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.933871339716977*^9, 3.933871525645012*^9}, {
   3.933871578845579*^9, 3.93387171251749*^9}, {3.933873520014041*^9, 
   3.933873613005682*^9}, {3.933873643126302*^9, 3.93387369631046*^9}, {
   3.9338737266560698`*^9, 3.93387376721585*^9}, {3.9338738206562433`*^9, 
   3.933873868343359*^9}, {3.933875123295673*^9, 3.93387515007901*^9}, {
   3.933903027534566*^9, 3.93390304450211*^9}, {3.9339031119105797`*^9, 
   3.933903112254509*^9}, {3.933913851054235*^9, 3.933913883287154*^9}, {
   3.933921106251882*^9, 3.933921106636162*^9}, {3.933921202276937*^9, 
   3.933921237808332*^9}, {3.933921269873855*^9, 3.933921273200326*^9}, {
   3.933921336419153*^9, 3.933921346126412*^9}, {3.933921400271089*^9, 
   3.9339214527305*^9}, {3.933922190317688*^9, 3.933922263602358*^9}, 
   3.933923140409875*^9, {3.933923384048052*^9, 3.933923396930083*^9}, {
   3.933923450308402*^9, 3.933923510523802*^9}, {3.935828073353683*^9, 
   3.935828074168972*^9}, 3.935828338512532*^9, {3.9358313524053583`*^9, 
   3.9358313745336437`*^9}, {3.95077658114368*^9, 3.950776584577569*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"cd19b020-7808-4b5c-a1a3-737ab5f86d7a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBMakeInnerProduct", "[", "BasisName_String", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Indices", ",", "product", ",", "operator"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Indices", "=", 
       RowBox[{"TBInternal", "[", 
        RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"product", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"TBVertexBasis", "[", "BasisName", "]"}], "===", "True"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TBCanonicalProduct", "[", "BasisName", "]"}], "/.", 
          RowBox[{
           RowBox[{"Tensor1", "[", "a___", "]"}], ":>", 
           RowBox[{"Tensor1", "@@", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Indices", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", 
              RowBox[{"{", "a", "}"}]}], "]"}]}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TBInnerProduct", "[", "BasisName", "]"}], "/.", 
          RowBox[{
           RowBox[{"Tensor1", "[", "a___", "]"}], ":>", 
           RowBox[{"Tensor1", "@@", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Indices", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", 
              RowBox[{"{", "a", "}"}]}], "]"}]}]}]}]}], "\[IndentingNewLine]",
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"product", "=", 
       RowBox[{"product", "/.", 
        RowBox[{
         RowBox[{"Tensor2", "[", "a___", "]"}], ":>", 
         RowBox[{"Tensor2", "@@", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Indices", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", 
            RowBox[{"{", "a", "}"}]}], "]"}]}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"operator", "[", 
        RowBox[{"t1_", ",", "i_", ",", "t2_", ",", "j_"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", 
           RowBox[{
            RowBox[{"product", "/.", 
             RowBox[{
              RowBox[{"Tensor1", "[", "indices___", "]"}], ":>", 
              RowBox[{"t1", "[", 
               RowBox[{"BasisName", ",", "i", ",", "indices"}], "]"}]}]}], "/.", 
            RowBox[{
             RowBox[{"Tensor2", "[", "indices___", "]"}], ":>", 
             RowBox[{"t2", "[", 
              RowBox[{"BasisName", ",", "j", ",", "indices"}], "]"}]}]}], 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "operator", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.933874942369762*^9, 3.933903006687234*^9, {3.933923328866502*^9, 
   3.933923331861949*^9}, {3.933923432052272*^9, 3.933923432425312*^9}, 
   3.9339235116136208`*^9, 3.933939206252264*^9, {3.935760814371027*^9, 
   3.935760818763315*^9}, {3.937411864001*^9, 3.937411886973242*^9}, {
   3.94117825112866*^9, 3.9411782796554327`*^9}, {3.941178322710187*^9, 
   3.941178323667128*^9}, {3.941178437534092*^9, 3.941178442953298*^9}, {
   3.9411784750547447`*^9, 3.941178475230547*^9}, {3.941178566099085*^9, 
   3.9411785759336443`*^9}, {3.94117866160221*^9, 3.941178674879146*^9}, 
   3.9411811452367277`*^9, {3.969257038862466*^9, 
   3.969257044874961*^9}},ExpressionUUID->"a0647142-035b-4af3-86c3-\
0ef0ea513443"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TBMakeCanonicalProduct", "::", "canonical"}], "=", 
   "\"\<The canonical products of the given bases \\\"`1`\\\" and \\\"`2`\\\" \
do not agree.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBMakeCanonicalProduct", "::", "noProduct"}], "=", 
    "\"\<The canonical product for the basis \\\"`1`\\\" has not been \
defined!\>\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBMakeCanonicalProduct", "[", 
    RowBox[{"BasisName1_String", ",", "BasisName2_String"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Indices1", ",", "Indices2", ",", "product", ",", "operator"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Indices1", "=", 
       RowBox[{"TBInternal", "[", 
        RowBox[{"BasisName1", ",", "\"\<Indices\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Indices2", "=", 
       RowBox[{"TBInternal", "[", 
        RowBox[{"BasisName2", ",", "\"\<Indices\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Head", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"TBCanonicalProduct", "[", "BasisName1", "]"}], "]"}], 
            "]"}], "===", "TBCanonicalProduct"}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"TBCanonicalProduct", "[", "BasisName1", "]"}], "===", 
           "Null"}], ")"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"TBMakeCanonicalProduct", "::", "noProduct"}], ",", 
           "BasisName1"}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"TBCanonicalProduct", "[", "BasisName1", "]"}], "=!=", 
         RowBox[{"TBCanonicalProduct", "[", "BasisName1", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"TBMakeCanonicalProduct", "::", "canonical"}], ",", 
           "BasisName1", ",", "BasisName2"}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"product", "=", 
       RowBox[{
        RowBox[{"TBCanonicalProduct", "[", "BasisName1", "]"}], "/.", 
        RowBox[{
         RowBox[{"Tensor1", "[", "a___", "]"}], ":>", 
         RowBox[{"Tensor1", "@@", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Indices1", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", 
            RowBox[{"{", "a", "}"}]}], "]"}]}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"product", "=", 
       RowBox[{"product", "/.", 
        RowBox[{
         RowBox[{"Tensor2", "[", "a___", "]"}], ":>", 
         RowBox[{"Tensor2", "@@", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Indices2", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", 
            RowBox[{"{", "a", "}"}]}], "]"}]}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"operator", "[", 
        RowBox[{"t1_", ",", "i_", ",", "t2_", ",", "j_"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", 
           RowBox[{
            RowBox[{"product", "/.", 
             RowBox[{
              RowBox[{"Tensor1", "[", "indices___", "]"}], ":>", 
              RowBox[{"t1", "[", 
               RowBox[{"BasisName1", ",", "i", ",", "indices"}], "]"}]}]}], "/.", 
            RowBox[{
             RowBox[{"Tensor2", "[", "indices___", "]"}], ":>", 
             RowBox[{"t2", "[", 
              RowBox[{"BasisName2", ",", "j", ",", "indices"}], "]"}]}]}], 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "operator", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9694123579875717`*^9, 3.969412482136764*^9}, {
   3.9694125597957907`*^9, 3.969412635675775*^9}, 
   3.969412685907832*^9},ExpressionUUID->"c3c5409f-48fe-41df-9ce8-\
a07da018aff7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBMakeCanonicalProduct", "[", "BasisName_String", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Indices", ",", "product", ",", "operator"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Indices", "=", 
       RowBox[{"TBInternal", "[", 
        RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"product", "=", 
       RowBox[{
        RowBox[{"TBCanonicalProduct", "[", "BasisName", "]"}], "/.", 
        RowBox[{
         RowBox[{"Tensor1", "[", "a___", "]"}], ":>", 
         RowBox[{"Tensor1", "@@", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Indices", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", 
            RowBox[{"{", "a", "}"}]}], "]"}]}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"product", "=", 
       RowBox[{"product", "/.", 
        RowBox[{
         RowBox[{"Tensor2", "[", "a___", "]"}], ":>", 
         RowBox[{"Tensor2", "@@", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Indices", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", 
            RowBox[{"{", "a", "}"}]}], "]"}]}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"operator", "[", 
        RowBox[{"t1_", ",", "i_", ",", "t2_", ",", "j_"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Head", "[", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"TBCanonicalProduct", "[", "BasisName", "]"}], "]"}],
                 "]"}], "===", "TBCanonicalProduct"}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"TBCanonicalProduct", "[", "BasisName", "]"}], "===", 
               "Null"}], ")"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<The canonical product for the basis \\\"\>\"", "<>", 
               "BasisName", "<>", "\"\<\\\" has not been defined!\>\""}], 
              "]"}], ";", 
             RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{
            RowBox[{"product", "/.", 
             RowBox[{
              RowBox[{"Tensor1", "[", "indices___", "]"}], ":>", 
              RowBox[{"t1", "[", 
               RowBox[{"BasisName", ",", "i", ",", "indices"}], "]"}]}]}], "/.", 
            RowBox[{
             RowBox[{"Tensor2", "[", "indices___", "]"}], ":>", 
             RowBox[{"t2", "[", 
              RowBox[{"BasisName", ",", "j", ",", "indices"}], "]"}]}]}], 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "operator", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.933874942369762*^9, 3.933903006687234*^9, {3.933923328866502*^9, 
   3.933923331861949*^9}, {3.933923432052272*^9, 3.933923432425312*^9}, 
   3.9339235116136208`*^9, 3.933939206252264*^9, {3.935760814371027*^9, 
   3.935760818763315*^9}, {3.937411864001*^9, 3.937411886973242*^9}, {
   3.94117825112866*^9, 3.9411782796554327`*^9}, {3.941178322710187*^9, 
   3.941178323667128*^9}, {3.941178437534092*^9, 3.941178442953298*^9}, {
   3.9411784750547447`*^9, 3.941178475230547*^9}, {3.941178566099085*^9, 
   3.9411785759336443`*^9}, {3.94117866160221*^9, 3.941178674879146*^9}, 
   3.9411811452367277`*^9, {3.969257038862466*^9, 3.969257044874961*^9}, {
   3.969347486808716*^9, 3.9693475004961643`*^9}, {3.969351343113069*^9, 
   3.969351441284939*^9}, {3.96935324056332*^9, 
   3.9693532625350227`*^9}},ExpressionUUID->"7662e852-6b7d-4ee4-96de-\
95764d7a2591"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBMakeVertices", "[", "BasisName_String", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Indices", "=", 
        RowBox[{"TBInternal", "[", 
         RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}]}], ",", 
       "vertices", ",", "\[IndentingNewLine]", 
       RowBox[{"rawBasis", "=", 
        RowBox[{"TBBasis", "[", "BasisName", "]"}]}], ",", 
       "momentumConservation"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"TBVertexBasis", "[", "BasisName", "]"}], "===", "True"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"momentumConservation", "=", 
          RowBox[{"InsertOutputNaming", "[", 
           RowBox[{"TBMomentumConservation", "[", "BasisName", "]"}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"FullSimplify", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"InsertOutputNaming", "[", "rawBasis", "]"}], "//.", 
             "momentumConservation"}], ")"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"vertices", "=", 
       RowBox[{
        RowBox[{"TBVertexStructure", "[", "BasisName", "]"}], "/.", 
        RowBox[{
         RowBox[{"Tensor", "[", "a___", "]"}], ":>", 
         RowBox[{"Tensor", "@@", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Indices", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", 
            RowBox[{"{", "a", "}"}]}], "]"}]}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"vertices", "=", 
       RowBox[{"ParallelMap", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"FullSimplify", "[", 
           RowBox[{"vertices", "/.", 
            RowBox[{
             RowBox[{"Tensor", "[", "indices___", "]"}], ":>", 
             RowBox[{"TBEvaluateBasisElement", "[", 
              RowBox[{"BasisName", ",", "#", ",", "indices"}], "]"}]}]}], 
           "]"}], "&"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{"i", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"TBInternal", "[", 
              RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}]}], "}"}]}], 
          "]"}]}], "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "vertices", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.93576069173145*^9, 3.935760841202826*^9}, {
   3.935760872250824*^9, 3.935761027985696*^9}, {3.935761235617742*^9, 
   3.935761255161173*^9}, {3.935761310913384*^9, 3.935761318113307*^9}, {
   3.9357613684736853`*^9, 3.935761389896606*^9}, {3.9357614215532703`*^9, 
   3.935761426825079*^9}, {3.93576156703272*^9, 3.9357617079681683`*^9}, {
   3.935761741792314*^9, 3.935761957831234*^9}, {3.935762094927205*^9, 
   3.935762282629663*^9}, {3.935762338269546*^9, 3.9357623422861137`*^9}, {
   3.935762784180496*^9, 3.935762802276309*^9}, {3.935819757941492*^9, 
   3.935819759621582*^9}, {3.935822296252604*^9, 3.9358223358605623`*^9}, 
   3.935825093742969*^9, {3.9358253597781467`*^9, 3.935825360641747*^9}, {
   3.937411257052332*^9, 3.9374112994367437`*^9}, {3.941218269965996*^9, 
   3.941218344642218*^9}, {3.950700182663412*^9, 3.950700194114945*^9}, 
   3.950706646319831*^9, {3.950706691608101*^9, 3.9507066999918747`*^9}, 
   3.950707588321961*^9},ExpressionUUID->"40224019-5bbe-4af3-bb73-\
5d0fce2e4594"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBEvaluateVertex", "[", 
    RowBox[{"BasisName_String", ",", "n_Integer", ",", "indices___"}], "]"}], 
   ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rawVertex", ",", "idxList", ",", "originalIndices", ",", "newIndices", 
       ",", "replacements"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"n", ">", 
          RowBox[{"TBInternal", "[", 
           RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}]}], "||", 
         RowBox[{"n", "<", "1"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"n", ",", 
           RowBox[{"\"\< is outside of range [1,\>\"", "~~", 
            RowBox[{"ToString", "[", 
             RowBox[{"TBInternal", "[", 
              RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}], "]"}], 
            "~~", "\"\<] for basis \>\"", "~~", "BasisName"}]}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fixIndices", "[", "expr_", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"closedIndices", ",", "IndexReplacements"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"closedIndices", "=", 
           RowBox[{"FormTracer`GetClosedIndices", "[", 
            RowBox[{"InsertOutputNaming", "@", 
             RowBox[{
              RowBox[{"TBInternal", "[", 
               RowBox[{"BasisName", ",", "\"\<Vertices\>\""}], "]"}], "[", 
              RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"IndexReplacements", ":=", 
           RowBox[{"Thread", "[", 
            RowBox[{"closedIndices", "->", 
             RowBox[{"Map", "[", 
              RowBox[{"TBUnique", ",", "closedIndices"}], "]"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"expr", "//.", "IndexReplacements"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"rawVertex", "=", 
       RowBox[{
        RowBox[{"InsertOutputNaming", "@", 
         RowBox[{
          RowBox[{"TBInternal", "[", 
           RowBox[{"BasisName", ",", "\"\<Vertices\>\""}], "]"}], "[", 
          RowBox[{"[", "n", "]"}], "]"}]}], "//", "fixIndices"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"idxList", "=", 
       RowBox[{"MakeIndexList", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"TBInternal", "[", 
           RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}], "//", 
          "Length"}], ",", "indices"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"originalIndices", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"TBInternal", "[", 
         RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newIndices", "=", 
       RowBox[{"Flatten", "[", "idxList", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"replacements", "=", 
       RowBox[{"Thread", "[", 
        RowBox[{"originalIndices", "->", "newIndices"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rawVertex", "=", 
       RowBox[{"rawVertex", "/.", "replacements"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "rawVertex", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.933874802247518*^9, 3.9338748680238047`*^9}, 
   3.933875165576366*^9, 3.933913854622457*^9, {3.933913889400075*^9, 
   3.9339138952616997`*^9}, {3.933923514428039*^9, 3.933923517387652*^9}, {
   3.933942185390345*^9, 3.933942221441439*^9}, {3.93576300138018*^9, 
   3.935763002124125*^9}, {3.935818534121738*^9, 3.93581854935391*^9}, 
   3.935828123825547*^9, {3.935828288168433*^9, 3.935828311055485*^9}, 
   3.935828346208022*^9, {3.9507066192400007`*^9, 3.950706641455909*^9}, 
   3.969353774599743*^9},ExpressionUUID->"61eaeae7-1a13-4ce5-831f-\
881e2297d0d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBBuildMetric", "[", "BasisName_String", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"metric", ",", "momentumConservation"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"momentumConservation", "=", 
       RowBox[{"InsertOutputNaming", "[", 
        RowBox[{"TBMomentumConservation", "[", "BasisName", "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"TBVertexBasis", "[", "BasisName", "]"}], "===", "True"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"metric", "=", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"TBFormTrace", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"TBInternal", "[", 
                   RowBox[{"BasisName", ",", "\"\<InnerProduct\>\""}], "]"}], 
                  "[", "\[IndentingNewLine]", 
                  RowBox[{
                  "TBEvaluateVertex", ",", "i", ",", "\[IndentingNewLine]", 
                   "TBEvaluateVertex", ",", "j"}], "\[IndentingNewLine]", 
                  "]"}], "//.", "momentumConservation"}], 
                "\[IndentingNewLine]", "]"}], "//.", "momentumConservation"}],
               "//.", 
              RowBox[{"TBInternal", "[", 
               RowBox[{"BasisName", ",", "\"\<Replacements\>\""}], "]"}]}], "//",
              "Global`UseLorentzLinearity"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"TBInternal", "[", 
               RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"TBInternal", "[", 
               RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}]}], "}"}]}],
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"metric", "=", 
          RowBox[{"ParallelMap", "[", 
           RowBox[{"FullSimplify", ",", "metric"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "metric", "]"}]}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"metric", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"TBFormTrace", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"TBInternal", "[", 
                RowBox[{"BasisName", ",", "\"\<InnerProduct\>\""}], "]"}], 
               "[", "\[IndentingNewLine]", 
               RowBox[{
               "TBEvaluateBasisElement", ",", "i", ",", "\[IndentingNewLine]",
                 "TBEvaluateBasisElement", ",", "j"}], "\[IndentingNewLine]", 
               "]"}], "//.", "momentumConservation"}], "\[IndentingNewLine]", 
             "]"}], "//.", "momentumConservation"}], "//.", 
           RowBox[{"TBInternal", "[", 
            RowBox[{"BasisName", ",", "\"\<Replacements\>\""}], "]"}]}], "//",
           "Global`UseLorentzLinearity"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"TBInternal", "[", 
            RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"TBInternal", "[", 
            RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"metric", "=", 
       RowBox[{"ParallelMap", "[", 
        RowBox[{"FullSimplify", ",", "metric"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "metric", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.933903171869532*^9, {3.9339046188618298`*^9, 3.933904631781824*^9}, {
   3.933904703350117*^9, 3.933904705342036*^9}, {3.933920310129588*^9, 
   3.9339203157861853`*^9}, {3.933920362449376*^9, 3.933920413954455*^9}, {
   3.933920470638826*^9, 3.9339204708782597`*^9}, {3.9339231693029413`*^9, 
   3.933923179585058*^9}, 3.9339546127365217`*^9, 3.933958907345735*^9, {
   3.933959207630485*^9, 3.933959217956611*^9}, 3.9339593552037573`*^9, {
   3.934347782999743*^9, 3.934347861733446*^9}, {3.934347975454981*^9, 
   3.934347976528744*^9}, {3.934348012875071*^9, 3.934348019575939*^9}, {
   3.934348493024785*^9, 3.934348506591542*^9}, {3.934348543836945*^9, 
   3.934348555347644*^9}, {3.934348656038731*^9, 3.934348683070938*^9}, {
   3.934348737569076*^9, 3.9343487615898037`*^9}, 3.934348843675892*^9, {
   3.935466819887367*^9, 3.935466826494972*^9}, {3.935481631291265*^9, 
   3.935481636098639*^9}, {3.935481674666551*^9, 3.935481675404785*^9}, {
   3.935481763468054*^9, 3.935481816370885*^9}, {3.9354819190429907`*^9, 
   3.935481923914787*^9}, 3.935484644070628*^9, {3.935484891524173*^9, 
   3.935484891819022*^9}, 3.935819789413266*^9, {3.9358219350376787`*^9, 
   3.935821935925671*^9}, 3.935825094673373*^9, {3.935825212466043*^9, 
   3.9358252133703003`*^9}, {3.935825374585673*^9, 3.9358253760575047`*^9}, 
   3.935825433234479*^9, {3.935825657536637*^9, 3.935825721297068*^9}, {
   3.937411341237019*^9, 3.937411421262231*^9}, {3.9374114574431334`*^9, 
   3.93741145760331*^9}, {3.937411557057055*^9, 3.937411572844819*^9}, {
   3.9374119191618557`*^9, 3.9374119685386543`*^9}, {3.941177801258996*^9, 
   3.941177809598678*^9}, 3.94117792792113*^9, {3.941177962344166*^9, 
   3.941177969570931*^9}, {3.941178007246076*^9, 3.941178043001047*^9}, {
   3.9411781117022657`*^9, 3.9411781188294573`*^9}, {3.9411781618820333`*^9, 
   3.941178163249442*^9}, 3.9411783870074873`*^9, {3.941180907692081*^9, 
   3.941180907859477*^9}, {3.941180960071953*^9, 3.941180961330448*^9}, {
   3.941181071290009*^9, 3.941181073406245*^9}, {3.941181111155073*^9, 
   3.941181111504404*^9}, {3.950692715574316*^9, 3.950692770595787*^9}, {
   3.95069981309519*^9, 3.950699819482905*^9}, {3.950699867779484*^9, 
   3.950699870443181*^9}, {3.950699974548171*^9, 3.950699984933972*^9}, 
   3.9507000283569527`*^9, 3.950700080551367*^9, {3.950702011436108*^9, 
   3.9507020225798492`*^9}, {3.9507020543114843`*^9, 
   3.9507020610829897`*^9}, {3.950702893507959*^9, 3.950702970451733*^9}, {
   3.95070306731175*^9, 3.950703081087638*^9}, {3.950703170176613*^9, 
   3.9507031759879293`*^9}, {3.950703247600255*^9, 3.950703253335557*^9}, {
   3.950703313843989*^9, 3.95070332765598*^9}, {3.950704808116166*^9, 
   3.9507048860404778`*^9}, {3.9507049515204763`*^9, 3.950704960720196*^9}, {
   3.950707598820759*^9, 
   3.950707604876321*^9}},ExpressionUUID->"6be61425-e734-43e1-8f41-\
a7b0f08b8855"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBBuildInverseMetric", "[", "BasisName_String", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"det", ",", "inverseMetric"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"det", "=", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{"Det", "[", 
         RowBox[{"TBInternal", "[", 
          RowBox[{"BasisName", ",", "\"\<Metric\>\""}], "]"}], "]"}], "]"}]}],
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"det", "===", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<AutoDefineBasis:\>\"", "~~", "BasisName", "~~", 
           "\"\<: Basis is overcomplete! Determinand is \>\"", "~~", 
           RowBox[{"ToString", "[", "det", "]"}], "~~", "\"\<\>\""}], "]"}], 
         ";", 
         RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"inverseMetric", "=", 
       RowBox[{"Simplify", "[", 
        RowBox[{"Inverse", "[", 
         RowBox[{"TBInternal", "[", 
          RowBox[{"BasisName", ",", "\"\<Metric\>\""}], "]"}], "]"}], "]"}]}],
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "inverseMetric", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.933874961231267*^9, 3.933874966142854*^9}, {
   3.933902999685772*^9, 3.933903001477241*^9}, 3.933903092462817*^9, {
   3.93390314985358*^9, 3.933903173101252*^9}, {3.933944309549717*^9, 
   3.933944331316871*^9}, 3.933959518150269*^9, {3.935469699095565*^9, 
   3.935469714727334*^9}, {3.935476055744764*^9, 3.935476060824622*^9}, {
   3.935476498297638*^9, 3.935476502041047*^9}, {3.935681872329018*^9, 
   3.935681918688628*^9}, {3.9356819657292347`*^9, 3.935681967208983*^9}, {
   3.935682150001432*^9, 3.935682150553063*^9}, 3.9358197955010443`*^9, 
   3.9693537814150476`*^9},ExpressionUUID->"ac6faa51-ce9e-4b84-bada-\
36b9f44afbb9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBBuildProjectors", "[", "BasisName_String", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"projectors", ",", "i", ",", "j"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"TBVertexBasis", "[", "BasisName", "]"}], "===", "True"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"projectors", "=", 
          RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"TBInternal", "[", 
                   RowBox[{"BasisName", ",", "\"\<InverseMetric\>\""}], "]"}],
                   "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}], 
                 RowBox[{"TBEvaluateVertex", "[", 
                  RowBox[{"BasisName", ",", "j", ",", 
                   RowBox[{"TBInternal", "[", 
                    RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}]}], 
                  "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", 
                  RowBox[{"TBInternal", "[", 
                   RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}]}], 
                 "}"}]}], "]"}], "//.", 
              RowBox[{"TBInternal", "[", 
               RowBox[{"BasisName", ",", "\"\<Replacements\>\""}], "]"}]}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"TBInternal", "[", 
               RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}]}], "}"}]}],
            "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "projectors", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"projectors", "=", 
       RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"TBInternal", "[", 
                RowBox[{"BasisName", ",", "\"\<InverseMetric\>\""}], "]"}], 
               "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], 
              RowBox[{"TBEvaluateBasisElement", "[", 
               RowBox[{"BasisName", ",", "j", ",", 
                RowBox[{"TBInternal", "[", 
                 RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}]}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"TBInternal", "[", 
                RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}]}], 
              "}"}]}], "]"}], "//.", 
           RowBox[{"TBInternal", "[", 
            RowBox[{"BasisName", ",", "\"\<Replacements\>\""}], "]"}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"TBInternal", "[", 
            RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "projectors", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.933902988781504*^9, 3.933902997757678*^9}, {
   3.933903146654351*^9, 3.933903146948947*^9}, {3.933904711390079*^9, 
   3.933904712237507*^9}, 3.933923513203889*^9, {3.933923807845444*^9, 
   3.933923808794829*^9}, {3.933923870167527*^9, 3.93392387496629*^9}, 
   3.933923942664132*^9, {3.933954605165955*^9, 3.933954606211629*^9}, 
   3.933959361116925*^9, {3.9339594263837194`*^9, 3.933959427244743*^9}, 
   3.933959478821378*^9, 3.935466846070825*^9, {3.935469745192111*^9, 
   3.935469749247369*^9}, {3.935476504657267*^9, 3.935476506265244*^9}, 
   3.935819803261701*^9, 3.935821600999342*^9, {3.935822276053392*^9, 
   3.935822283836404*^9}, 3.93582509535216*^9, {3.935825726649321*^9, 
   3.935825729008946*^9}, {3.937411611064724*^9, 3.937411625973262*^9}, {
   3.941221339654993*^9, 3.9412213428561363`*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"7b039ccb-9100-4dea-b99c-bec5c7ee5184"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBEvaluateProjector", "[", 
    RowBox[{"BasisName_String", ",", "n_Integer", ",", "indices___"}], "]"}], 
   ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rawProjector", ",", "idxList", ",", "originalIndices", ",", 
       "newIndices", ",", "replacements"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"n", ">", 
          RowBox[{"TBInternal", "[", 
           RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}]}], "||", 
         RowBox[{"n", "<", "1"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"n", ",", 
           RowBox[{"\"\< is outside of range [1,\>\"", "~~", 
            RowBox[{"ToString", "[", 
             RowBox[{"TBInternal", "[", 
              RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}], "]"}], 
            "~~", "\"\<] for basis \>\"", "~~", "BasisName"}]}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fixIndices", "[", "expr_", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"closedIndices", ",", "IndexReplacements"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"closedIndices", "=", 
           RowBox[{"FormTracer`GetClosedIndices", "[", 
            RowBox[{"InsertOutputNaming", "@", 
             RowBox[{
              RowBox[{"TBInternal", "[", 
               RowBox[{"BasisName", ",", "\"\<Projectors\>\""}], "]"}], "[", 
              RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"IndexReplacements", ":=", 
           RowBox[{"Thread", "[", 
            RowBox[{"closedIndices", "->", 
             RowBox[{"Map", "[", 
              RowBox[{"TBUnique", ",", "closedIndices"}], "]"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"expr", "//.", "IndexReplacements"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"rawProjector", "=", 
       RowBox[{
        RowBox[{"InsertOutputNaming", "@", 
         RowBox[{
          RowBox[{"TBInternal", "[", 
           RowBox[{"BasisName", ",", "\"\<Projectors\>\""}], "]"}], "[", 
          RowBox[{"[", "n", "]"}], "]"}]}], "//", "fixIndices"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"idxList", "=", 
       RowBox[{"MakeIndexList", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"TBInternal", "[", 
           RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}], "//", 
          "Length"}], ",", "indices"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"originalIndices", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"TBInternal", "[", 
         RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newIndices", "=", 
       RowBox[{"Flatten", "[", "idxList", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"replacements", "=", 
       RowBox[{"Thread", "[", 
        RowBox[{"originalIndices", "->", "newIndices"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rawProjector", "=", 
       RowBox[{"rawProjector", "/.", "replacements"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "rawProjector", "]"}]}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.933874802247518*^9, 3.9338748680238047`*^9}, 
   3.933875165576366*^9, 3.933913854622457*^9, {3.933913889400075*^9, 
   3.9339138952616997`*^9}, {3.933923514428039*^9, 3.933923517387652*^9}, {
   3.933942185390345*^9, 3.933942221441439*^9}, 3.935828159897253*^9, 
   3.935828320319875*^9, 
   3.9693537879716187`*^9},ExpressionUUID->"9ef01342-89a5-4ac7-97c3-\
96645a7ca791"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getter definitions", "Subsection",
 CellChangeTimes->{{3.933904854301352*^9, 
  3.933904883404978*^9}},ExpressionUUID->"721a4bfa-aee9-42d0-96d3-\
96743ca88c9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBUnDefineTBGetBasisElement", "[", "BasisName_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"TBGetBasisElement", "[", 
        RowBox[{"BasisName", ",", "n_Integer", ",", "indices___"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "BasisName", "~~", 
            "\"\< is a Vertex basis - no basis elements are available!\>\""}],
            "]"}], ";", 
          RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBGetBasisElement", "[", 
        RowBox[{"BasisName", ",", "n_Integer"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "BasisName", "~~", 
            "\"\< is a Vertex basis - no basis elements are available!\>\""}],
            "]"}], ";", 
          RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBGetBasisElement", "[", 
        RowBox[{"BasisName", ",", "All", ",", "indices___"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "BasisName", "~~", 
            "\"\< is a Vertex basis - no basis elements are available!\>\""}],
            "]"}], ";", 
          RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBGetBasisElement", "[", 
        RowBox[{"BasisName", ",", "All"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "BasisName", "~~", 
            "\"\< is a Vertex basis - no basis elements are available!\>\""}],
            "]"}], ";", 
          RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.937412013787129*^9, 3.937412060739955*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"b09ddb40-3738-43ba-bb9f-5b40636f77fc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TBDefineTBGetBasisElement", "[", "BasisName_String", "]"}], ":=", 
   
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"TBGetBasisElement", "[", 
        RowBox[{"BasisName", ",", "n_Integer", ",", "indices___"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "\[IndentingNewLine]", 
           RowBox[{"InsertOutputNaming", "[", "\[IndentingNewLine]", 
            RowBox[{"TBEvaluateBasisElement", "[", 
             RowBox[{"BasisName", ",", "n", ",", "indices"}], "]"}], 
            "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBGetBasisElement", "[", 
        RowBox[{"BasisName", ",", "n_Integer"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "\[IndentingNewLine]", 
           RowBox[{"InsertOutputNaming", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"TBEvaluateBasisElement", "[", 
                RowBox[{"BasisName", ",", "n", ",", "##"}], "]"}], "&"}], 
              ")"}], "@@", 
             RowBox[{"TBInternal", "[", 
              RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}]}], 
            "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBGetBasisElement", "[", 
        RowBox[{"BasisName", ",", "All", ",", "indices___"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"TBGetBasisElement", "[", 
              RowBox[{"BasisName", ",", "#", ",", "indices"}], "]"}], "&"}], "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"TBInternal", "[", 
              RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBGetBasisElement", "[", 
        RowBox[{"BasisName", ",", "All"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"TBGetBasisElement", "[", 
              RowBox[{"BasisName", ",", "#"}], "]"}], "&"}], "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"TBInternal", "[", 
              RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBDefineTBGetVertex", "[", "BasisName_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"TBGetVertex", "[", 
        RowBox[{"BasisName", ",", "n_Integer", ",", "indices___"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "\[IndentingNewLine]", 
           RowBox[{"InsertOutputNaming", "[", "\[IndentingNewLine]", 
            RowBox[{"TBEvaluateVertex", "[", 
             RowBox[{"BasisName", ",", "n", ",", "indices"}], "]"}], 
            "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBGetVertex", "[", 
        RowBox[{"BasisName", ",", "n_Integer"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "\[IndentingNewLine]", 
           RowBox[{"InsertOutputNaming", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"TBEvaluateVertex", "[", 
               RowBox[{"BasisName", ",", "n", ",", "##"}], "]"}], "&"}], "@@", 
             RowBox[{"TBInternal", "[", 
              RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}]}], 
            "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBGetVertex", "[", 
        RowBox[{"BasisName", ",", "All", ",", "indices___"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"TBGetVertex", "[", 
              RowBox[{"BasisName", ",", "#", ",", "indices"}], "]"}], "&"}], "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"TBInternal", "[", 
              RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBGetVertex", "[", 
        RowBox[{"BasisName", ",", "All"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"TBGetVertex", "[", 
              RowBox[{"BasisName", ",", "#"}], "]"}], "&"}], "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"TBInternal", "[", 
              RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBDefineTBGetMetric", "[", "BasisName_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"TBGetMetric", "[", "BasisName", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "\[IndentingNewLine]", 
           RowBox[{"InsertOutputNaming", "[", "\[IndentingNewLine]", 
            RowBox[{"TBInternal", "[", 
             RowBox[{"BasisName", ",", "\"\<Metric\>\""}], "]"}], 
            "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBDefineTBGetInnerProduct", "[", "BasisName_String", "]"}], ":=", 
   
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"TBGetInnerProduct", "[", "BasisName", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "\[IndentingNewLine]", 
           RowBox[{"TBInternal", "[", 
            RowBox[{"BasisName", ",", "\"\<InnerProduct\>\""}], "]"}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBDefineTBGetCanonicalProduct", "[", "BasisName_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"TBGetCanonicalProduct", "[", "BasisName", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "\[IndentingNewLine]", 
           RowBox[{"TBInternal", "[", 
            RowBox[{"BasisName", ",", "\"\<CanonicalProduct\>\""}], "]"}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBUnDefineTBGetInnerProduct", "[", "BasisName_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"TBGetInnerProduct", "[", "BasisName", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "BasisName", "~~", 
            "\"\< is a Vertex basis - no inner product is available!\>\""}], 
           "]"}], ";", 
          RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBDefineTBGetInverseMetric", "[", "BasisName_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"TBGetInverseMetric", "[", "BasisName", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "\[IndentingNewLine]", 
           RowBox[{"InsertOutputNaming", "[", "\[IndentingNewLine]", 
            RowBox[{"TBInternal", "[", 
             RowBox[{"BasisName", ",", "\"\<InverseMetric\>\""}], "]"}], 
            "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBDefineTBGetProjector", "[", "BasisName_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"TBGetProjector", "[", 
        RowBox[{"BasisName", ",", "n_Integer", ",", "indices___"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "\[IndentingNewLine]", 
           RowBox[{"InsertOutputNaming", "[", "\[IndentingNewLine]", 
            RowBox[{"TBEvaluateProjector", "[", 
             RowBox[{"BasisName", ",", "n", ",", "indices"}], "]"}], 
            "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBGetProjector", "[", 
        RowBox[{"BasisName", ",", "n_Integer"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "\[IndentingNewLine]", 
           RowBox[{"InsertOutputNaming", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"TBEvaluateProjector", "[", 
               RowBox[{"BasisName", ",", "n", ",", "##"}], "]"}], "&"}], "@@", 
             RowBox[{"TBInternal", "[", 
              RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}]}], 
            "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBGetProjector", "[", 
        RowBox[{"BasisName", ",", "All", ",", "indices___"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"TBGetProjector", "[", 
              RowBox[{"BasisName", ",", "#", ",", "indices"}], "]"}], "&"}], "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"TBInternal", "[", 
              RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBGetProjector", "[", 
        RowBox[{"BasisName", ",", "All"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"TBGetProjector", "[", 
              RowBox[{"BasisName", ",", "#"}], "]"}], "&"}], "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"TBInternal", "[", 
              RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.933864636899502*^9, 3.933864785179728*^9}, {
   3.933864823172223*^9, 3.933864901067344*^9}, {3.933864933731536*^9, 
   3.933864960099988*^9}, {3.933864996667472*^9, 3.933865062747013*^9}, {
   3.9338650945319767`*^9, 3.93386566739653*^9}, {3.933869020364469*^9, 
   3.933869089268581*^9}, {3.933869198004676*^9, 3.9338694023413277`*^9}, {
   3.933869442021249*^9, 3.933869444244723*^9}, {3.933869788389951*^9, 
   3.933869799476693*^9}, {3.933869856997114*^9, 3.933870026509499*^9}, {
   3.933870086958458*^9, 3.933870185774002*^9}, {3.933870254845594*^9, 
   3.93387025515073*^9}, {3.933870626286378*^9, 3.933870663828794*^9}, {
   3.9338706969171762`*^9, 3.933871059309628*^9}, {3.933871159917558*^9, 
   3.933871161125596*^9}, {3.933871199518266*^9, 3.933871226764974*^9}, {
   3.933872500244225*^9, 3.933872527647089*^9}, {3.933872623310736*^9, 
   3.9338727665984488`*^9}, {3.933872804637985*^9, 3.933872811966256*^9}, {
   3.9338729324451733`*^9, 3.9338730651750317`*^9}, {3.9338739193033533`*^9, 
   3.933873982789771*^9}, {3.933874019350342*^9, 3.933874370414829*^9}, {
   3.933874429158138*^9, 3.93387443417486*^9}, {3.933874702231942*^9, 
   3.933874714166766*^9}, 3.933874747990816*^9, 3.93387478480824*^9, {
   3.933874926598006*^9, 3.933874929213982*^9}, {3.933875174751157*^9, 
   3.933875178846108*^9}, {3.93390227215799*^9, 3.933902649031077*^9}, {
   3.933902734846169*^9, 3.933902863223034*^9}, {3.9339029080543637`*^9, 
   3.9339029642074757`*^9}, {3.933903073719808*^9, 3.933903098103611*^9}, {
   3.933903163998549*^9, 3.9339031668792*^9}, {3.933904249623013*^9, 
   3.933904312174485*^9}, {3.933904391223144*^9, 3.933904461918371*^9}, {
   3.93390453531793*^9, 3.933904545958001*^9}, {3.933904587439041*^9, 
   3.93390458890203*^9}, {3.933904889926353*^9, 3.933904891349308*^9}, {
   3.9339050313977747`*^9, 3.933905032973032*^9}, 3.933905196230508*^9, {
   3.9339957737698507`*^9, 3.933995853388547*^9}, {3.935762826725052*^9, 
   3.935762833964571*^9}, {3.935818592393579*^9, 3.935818598929448*^9}, {
   3.935819606662373*^9, 3.935819700973648*^9}, {3.936858082896402*^9, 
   3.936858272853257*^9}, {3.93685846954662*^9, 3.936858559236175*^9}, {
   3.936858605099218*^9, 3.936858631922153*^9}, {3.9374120839966593`*^9, 
   3.9374121159050817`*^9}, {3.969347432213995*^9, 
   3.969347447279084*^9}},ExpressionUUID->"5fd29c15-2ee2-45bb-8e2c-\
84772a8fccb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Documentation functions", "Subsection",
 CellChangeTimes->{{3.933905176925933*^9, 3.933905184884882*^9}, 
   3.935831543435751*^9},ExpressionUUID->"4242c64b-75cf-4833-9d4c-\
f8fa32859c1c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBDefineTBInfo", "[", "BasisName_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"TBInfo", "[", "BasisName", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "@@", 
           RowBox[{"TBUsage", "[", "BasisName", "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.933905200341092*^9},
 CellLabel->
  "In[180]:=",ExpressionUUID->"9cc81c11-fd01-456a-8d42-c7e11e50298a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TBAvailableBasisNames", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TBBasisDocs", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBAddBasisDocumentation", "[", "BasisName_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "toString", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"toString", "[", "a_Symbol", "]"}], ":=", 
       RowBox[{"SymbolName", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"toString", "[", "a_", "]"}], ":=", 
       RowBox[{"ToString", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"TBAvailableBasisNames", ",", "BasisName"}], "]"}], ",", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<WARNING: TBAddBasisDocumentation: Possible doubling of bases \
detected!\>\"", "]"}], ";", 
         RowBox[{"Return", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"TBAvailableBasisNames", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"TBAvailableBasisNames", ",", "BasisName"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"TBBasisDocs", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"TBBasisDocs", ",", "\[IndentingNewLine]", 
         RowBox[{"<|", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\"\<Name\>\"", "->", "BasisName"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<Vertex\>\"", "->", 
            RowBox[{"InsertOutputNaming", "@", 
             RowBox[{"TBVertex", "[", "BasisName", "]"}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<Indices\>\"", "->", 
            RowBox[{"TBInternal", "[", 
             RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<Groups\>\"", "->", 
            RowBox[{"Map", "[", 
             RowBox[{"toString", ",", 
              RowBox[{"TBRequiredGroups", "[", "BasisName", "]"}], ",", 
              RowBox[{"{", "2", "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
           
           RowBox[{"\"\<InnerProduct\>\"", "->", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"GlobalContext", "[", 
               RowBox[{"StringReplace", "[", 
                RowBox[{
                 RowBox[{"ToString", "[", 
                  RowBox[{"InsertOutputNaming", "[", 
                   RowBox[{"TBInnerProduct", "[", "BasisName", "]"}], "]"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"a", ":", "DigitCharacter"}], "~~", "\"\< \>\"", "~~", 
                    RowBox[{"b", ":", "LetterCharacter"}]}], ":>", 
                    RowBox[{"a", "~~", "\"\< \>\"", "~~", "b"}]}], ",", 
                   RowBox[{"\"\< \>\"", "->", "\"\<\>\""}], ",", 
                   RowBox[{"\"\<]\>\"", "->", "\"\<] \>\""}]}], "}"}]}], 
                "]"}], "]"}], ",", 
              RowBox[{"FontSize", "->", "10"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<Comment\>\"", "->", 
            RowBox[{"TBComment", "[", "BasisName", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<Author\>\"", "->", 
            RowBox[{"TBAuthor", "[", "BasisName", "]"}]}]}], 
          "\[IndentingNewLine]", "|>"}]}], "\[IndentingNewLine]", "]"}]}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.933905134637101*^9, 3.9339051699170637`*^9}, {
   3.933905210013535*^9, 3.933905411389645*^9}, {3.933905516029922*^9, 
   3.9339055290617943`*^9}, {3.933905939069848*^9, 3.933905940581884*^9}, {
   3.933905987989883*^9, 3.933905990717291*^9}, {3.933908959422962*^9, 
   3.933908968798263*^9}, 3.933923520739678*^9, {3.933936336319387*^9, 
   3.93393633986412*^9}, {3.9339426781622353`*^9, 3.933942679753465*^9}, {
   3.933995962482938*^9, 3.93399599784791*^9}, {3.933996163449394*^9, 
   3.933996187476544*^9}, {3.9339962582096786`*^9, 3.933996314979017*^9}, {
   3.933996424249546*^9, 3.933996443077729*^9}, {3.933996503982872*^9, 
   3.933996700433511*^9}, {3.933996732323011*^9, 3.9339967540629387`*^9}, 
   3.933996817796977*^9, {3.938061811260056*^9, 3.9380618430639467`*^9}, {
   3.938061893960146*^9, 3.93806206247618*^9}, {3.938062096692572*^9, 
   3.938062097223166*^9}, {3.938062244316557*^9, 3.9380622455483017`*^9}, {
   3.941174845045575*^9, 3.941174888829484*^9}, {3.941221822234682*^9, 
   3.941221830662168*^9}, {3.952957002884053*^9, 
   3.952957020483823*^9}},ExpressionUUID->"2554b4b1-4f7a-4978-8f23-\
c17c75e9fec4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TBList", "[", "]"}], ":=", "TBAvailableBasisNames"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBBasisExists", "[", "BasisName_", "]"}], ":=", 
   RowBox[{"MemberQ", "[", 
    RowBox[{"TBAvailableBasisNames", ",", "BasisName"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.962759996464156*^9, 3.962760059382634*^9}, {
  3.9627602430749083`*^9, 
  3.9627602438267403`*^9}},ExpressionUUID->"bb7d78b6-0709-4a59-a019-\
6b02011b3430"]
}, Open  ]],

Cell[CellGroupData[{

Cell["TBAutoDefineBasis", "Subsection",
 CellChangeTimes->{{3.933904854301352*^9, 
  3.933904912300843*^9}},ExpressionUUID->"d227ef0c-8266-4409-8f73-\
aa6465e26740"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TBAutoDefineTensorBasis", "[", 
   RowBox[{"BasisName_String", ",", 
    RowBox[{"folderPrefix_String", ":", 
     RowBox[{"TBDirectory", "<>", "\"\<cache\>\""}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"errorPrefix", ",", "check"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TBPrint", "[", 
      RowBox[{"\"\<\\n-------------------------------\\n\>\"", ",", "1"}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"check", "=", 
      RowBox[{"TBCheckBasisDefinitions", "[", "BasisName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"check", "=", 
      RowBox[{"check", "&&", 
       RowBox[{"TBCheckRequirements", "[", "BasisName", "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "@", "check"}], ",", 
       RowBox[{
        RowBox[{"TBPrint", "[", 
         RowBox[{
          RowBox[{
          "\"\<Skipping processing of \>\"", "~~", "BasisName", "~~", 
           "\"\<.\>\""}], ",", "1"}], "]"}], ";", 
        RowBox[{"Return", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"TBPrint", "[", 
      RowBox[{
       RowBox[{
       "\"\<Processing Tensor basis \>\"", "~~", "BasisName", "~~", 
        "\"\<.\>\""}], ",", "1"}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBInternal", "[", 
       RowBox[{"BasisName", ",", "\"\<Replacements\>\""}], "]"}], "=", 
      RowBox[{"InsertOutputNaming", "[", 
       RowBox[{"TBReplacements", "[", "BasisName", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBInternal", "[", 
       RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}], "=", 
      RowBox[{"InsertOutputNaming", "[", 
       RowBox[{"TBIndices", "[", "BasisName", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBInternal", "[", 
       RowBox[{"BasisName", ",", "\"\<Basis\>\""}], "]"}], "=", 
      RowBox[{"AutoSaveRestore", "[", 
       RowBox[{
        RowBox[{"BasisName", "~~", "\"\</basis\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TBPrint", "[", 
          RowBox[{
           RowBox[{"BasisName", "~~", "\"\<: Making Basis...\>\""}], ",", 
           "2"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TBMakeBasis", "[", "BasisName", "]"}], "//", 
          "InsertInputNaming"}]}], ",", "\[IndentingNewLine]", 
        "folderPrefix"}], "\[IndentingNewLine]", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBInternal", "[", 
       RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}], "=", 
      RowBox[{"TBBasisLength", "[", "BasisName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBInternal", "[", 
       RowBox[{"BasisName", ",", "\"\<InnerProduct\>\""}], "]"}], "=", 
      RowBox[{"TBMakeInnerProduct", "[", "BasisName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBInternal", "[", 
       RowBox[{"BasisName", ",", "\"\<CanonicalProduct\>\""}], "]"}], "=", 
      RowBox[{"TBMakeCanonicalProduct", "[", "BasisName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBInternal", "[", 
       RowBox[{"BasisName", ",", "\"\<Vertices\>\""}], "]"}], "=", 
      RowBox[{"AutoSaveRestore", "[", 
       RowBox[{
        RowBox[{"BasisName", "~~", "\"\</vertices\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TBPrint", "[", 
          RowBox[{
           RowBox[{"BasisName", "~~", "\"\<: Calculating Vertices...\>\""}], 
           ",", "2"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TBMakeVertices", "[", "BasisName", "]"}], "//", 
          "InsertInputNaming"}]}], ",", "\[IndentingNewLine]", 
        "folderPrefix"}], "\[IndentingNewLine]", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBInternal", "[", 
       RowBox[{"BasisName", ",", "\"\<Metric\>\""}], "]"}], "=", 
      RowBox[{"AutoSaveRestore", "[", 
       RowBox[{
        RowBox[{"BasisName", "~~", "\"\</metric\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TBPrint", "[", 
          RowBox[{
           RowBox[{"BasisName", "~~", "\"\<: Calculating Metric...\>\""}], 
           ",", "2"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TBBuildMetric", "[", "BasisName", "]"}], "//", 
          "InsertInputNaming"}]}], ",", "\[IndentingNewLine]", 
        "folderPrefix"}], "\[IndentingNewLine]", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBInternal", "[", 
       RowBox[{"BasisName", ",", "\"\<InverseMetric\>\""}], "]"}], "=", 
      RowBox[{"AutoSaveRestore", "[", 
       RowBox[{
        RowBox[{"BasisName", "~~", "\"\</inverseMetric\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TBPrint", "[", 
          RowBox[{
           RowBox[{
           "BasisName", "~~", "\"\<: Calculating InverseMetric...\>\""}], ",",
            "2"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TBBuildInverseMetric", "[", "BasisName", "]"}], "//", 
          "InsertInputNaming"}]}], ",", "\[IndentingNewLine]", 
        "folderPrefix"}], "\[IndentingNewLine]", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBInternal", "[", 
       RowBox[{"BasisName", ",", "\"\<Projectors\>\""}], "]"}], "=", 
      RowBox[{"AutoSaveRestore", "[", 
       RowBox[{
        RowBox[{"BasisName", "~~", "\"\</projectors\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TBPrint", "[", 
          RowBox[{
           RowBox[{"BasisName", "~~", "\"\<: Calculating Projectors...\>\""}],
            ",", "2"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TBBuildProjectors", "[", "BasisName", "]"}], "//", 
          "InsertInputNaming"}]}], ",", "\[IndentingNewLine]", 
        "folderPrefix"}], "\[IndentingNewLine]", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"TBDefineTBGetBasisElement", "[", "BasisName", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TBDefineTBGetVertex", "[", "BasisName", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TBDefineTBGetMetric", "[", "BasisName", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TBDefineTBGetInnerProduct", "[", "BasisName", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TBDefineTBGetCanonicalProduct", "[", "BasisName", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TBDefineTBGetInverseMetric", "[", "BasisName", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TBDefineTBGetProjector", "[", "BasisName", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TBDefineTBInfo", "[", "BasisName", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"TBAddBasisDocumentation", "[", "BasisName", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"TBPrint", "[", 
      RowBox[{
       RowBox[{"BasisName", "~~", "\"\<: done.\>\""}], ",", "1"}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.937410558974001*^9, 3.937410591393364*^9}, {
  3.937410623489056*^9, 3.937410646678207*^9}, {3.937410736605949*^9, 
  3.937410757241568*^9}, {3.941174651471827*^9, 3.941174660141168*^9}, {
  3.941174731597299*^9, 3.9411747335553913`*^9}, {3.941175180419612*^9, 
  3.941175199121892*^9}, {3.941175241423976*^9, 3.941175245374373*^9}, {
  3.94117581719256*^9, 3.941175826320649*^9}, {3.941176130777733*^9, 
  3.941176147794403*^9}, {3.9411766016475286`*^9, 3.941176611371645*^9}, {
  3.941176900193429*^9, 3.941176961369573*^9}, {3.941177489388479*^9, 
  3.9411774900252523`*^9}, {3.969347541806017*^9, 3.969347545472262*^9}, {
  3.969353352564761*^9, 
  3.969353363319121*^9}},ExpressionUUID->"bfd8db10-63e3-4def-a1fc-\
e8d43db1a1f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TBAutoDefineVertexBasis", "[", 
   RowBox[{"BasisName_String", ",", 
    RowBox[{"folderPrefix_String", ":", 
     RowBox[{"TBDirectory", "<>", "\"\<cache\>\""}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"errorPrefix", ",", "check"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TBPrint", "[", 
      RowBox[{"\"\<\\n-------------------------------\\n\>\"", ",", "1"}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"check", "=", 
      RowBox[{"TBCheckVertexBasisDefinitions", "[", "BasisName", "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"check", "=", 
      RowBox[{"check", "&&", 
       RowBox[{"TBCheckRequirements", "[", "BasisName", "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "@", "check"}], ",", 
       RowBox[{
        RowBox[{"TBPrint", "[", 
         RowBox[{
          RowBox[{
          "\"\<Skipping processing of \>\"", "~~", "BasisName", "~~", 
           "\"\<.\>\""}], ",", "1"}], "]"}], ";", 
        RowBox[{"Return", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"TBPrint", "[", 
      RowBox[{
       RowBox[{
       "\"\<Processing Vertex basis \>\"", "~~", "BasisName", "~~", 
        "\"\<.\>\""}], ",", "1"}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBInternal", "[", 
       RowBox[{"BasisName", ",", "\"\<Replacements\>\""}], "]"}], "=", 
      RowBox[{"InsertOutputNaming", "[", 
       RowBox[{"TBReplacements", "[", "BasisName", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBInternal", "[", 
       RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}], "=", 
      RowBox[{"InsertOutputNaming", "[", 
       RowBox[{"TBIndices", "[", "BasisName", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBInternal", "[", 
       RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}], "=", 
      RowBox[{"TBBasisLength", "[", "BasisName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBInternal", "[", 
       RowBox[{"BasisName", ",", "\"\<InnerProduct\>\""}], "]"}], "=", 
      RowBox[{"TBMakeInnerProduct", "[", "BasisName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBInternal", "[", 
       RowBox[{"BasisName", ",", "\"\<CanonicalProduct\>\""}], "]"}], "=", 
      RowBox[{"TBMakeCanonicalProduct", "[", "BasisName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBInternal", "[", 
       RowBox[{"BasisName", ",", "\"\<Vertices\>\""}], "]"}], "=", 
      RowBox[{"AutoSaveRestore", "[", 
       RowBox[{
        RowBox[{"BasisName", "~~", "\"\</vertices\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TBPrint", "[", 
          RowBox[{
           RowBox[{"BasisName", "~~", "\"\<: Calculating Vertices...\>\""}], 
           ",", "2"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TBMakeVertices", "[", "BasisName", "]"}], "//", 
          "InsertInputNaming"}]}], ",", "\[IndentingNewLine]", 
        "folderPrefix"}], "\[IndentingNewLine]", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBInternal", "[", 
       RowBox[{"BasisName", ",", "\"\<Metric\>\""}], "]"}], "=", 
      RowBox[{"AutoSaveRestore", "[", 
       RowBox[{
        RowBox[{"BasisName", "~~", "\"\</metric\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TBPrint", "[", 
          RowBox[{
           RowBox[{"BasisName", "~~", "\"\<: Calculating Metric...\>\""}], 
           ",", "2"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TBBuildMetric", "[", "BasisName", "]"}], "//", 
          "InsertInputNaming"}]}], ",", "\[IndentingNewLine]", 
        "folderPrefix"}], "\[IndentingNewLine]", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBInternal", "[", 
       RowBox[{"BasisName", ",", "\"\<InverseMetric\>\""}], "]"}], "=", 
      RowBox[{"AutoSaveRestore", "[", 
       RowBox[{
        RowBox[{"BasisName", "~~", "\"\</inverseMetric\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TBPrint", "[", 
          RowBox[{
           RowBox[{
           "BasisName", "~~", "\"\<: Calculating InverseMetric...\>\""}], ",",
            "2"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TBBuildInverseMetric", "[", "BasisName", "]"}], "//", 
          "InsertInputNaming"}]}], ",", "\[IndentingNewLine]", 
        "folderPrefix"}], "\[IndentingNewLine]", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBInternal", "[", 
       RowBox[{"BasisName", ",", "\"\<Projectors\>\""}], "]"}], "=", 
      RowBox[{"AutoSaveRestore", "[", 
       RowBox[{
        RowBox[{"BasisName", "~~", "\"\</projectors\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TBPrint", "[", 
          RowBox[{
           RowBox[{"BasisName", "~~", "\"\<: Calculating Projectors...\>\""}],
            ",", "2"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TBBuildProjectors", "[", "BasisName", "]"}], "//", 
          "InsertInputNaming"}]}], ",", "\[IndentingNewLine]", 
        "folderPrefix"}], "\[IndentingNewLine]", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"TBUnDefineTBGetBasisElement", "[", "BasisName", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TBDefineTBGetVertex", "[", "BasisName", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TBDefineTBGetMetric", "[", "BasisName", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TBUnDefineTBGetInnerProduct", "[", "BasisName", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TBDefineTBGetCanonicalProduct", "[", "BasisName", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TBDefineTBGetInverseMetric", "[", "BasisName", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TBDefineTBGetProjector", "[", "BasisName", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TBDefineTBInfo", "[", "BasisName", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"TBAddBasisDocumentation", "[", "BasisName", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"TBPrint", "[", 
      RowBox[{
       RowBox[{"BasisName", "~~", "\"\<: done.\>\""}], ",", "1"}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.937410594069186*^9, 3.937410594821085*^9}, {
   3.93741062968108*^9, 3.9374106498419*^9}, {3.937410731509885*^9, 
   3.937410748709449*^9}, 3.937410808642119*^9, 3.937410999074926*^9, 
   3.937411090567079*^9, {3.937411166046895*^9, 3.93741117800021*^9}, 
   3.937411482735732*^9, 3.937411688354843*^9, {3.937412125781659*^9, 
   3.937412131761386*^9}, {3.94117473738103*^9, 3.941174802379508*^9}, {
   3.941174921443696*^9, 3.9411749329328203`*^9}, 3.9411752095341682`*^9, {
   3.941175246478609*^9, 3.941175247150536*^9}, {3.941176980969018*^9, 
   3.941177006296823*^9}, {3.969347556669059*^9, 3.969347562512723*^9}, 
   3.9693533825047626`*^9},ExpressionUUID->"116a0c96-5bd5-4c0a-adb7-\
e6a94047e56f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBAutoDefineBasis", "[", 
    RowBox[{"BasisDefinitionFile_String", ",", 
     RowBox[{"folderPrefix_String", ":", 
      RowBox[{"TBDirectory", "<>", "\"\<cache\>\""}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"BasisName", "=", 
        RowBox[{"GetBasisName", "[", "BasisDefinitionFile", "]"}]}], ",", 
       "oldDirectory", ",", "errorPrefix", ",", "check", ",", "contents"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"oldDirectory", "=", 
       RowBox[{"Directory", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"SetDirectory", "[", 
       RowBox[{"DirectoryName", "[", "BasisDefinitionFile", "]"}], "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Import", "[", 
       RowBox[{"FileNameTake", "[", 
        RowBox[{"BasisDefinitionFile", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"SetDirectory", "[", "oldDirectory", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"TBVertexBasis", "[", "BasisName", "]"}], "===", "True"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"TBAutoDefineVertexBasis", "[", 
         RowBox[{"BasisName", ",", "folderPrefix"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"TBAutoDefineTensorBasis", "[", 
         RowBox[{"BasisName", ",", "folderPrefix"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.933904913285701*^9, 3.933904913453488*^9}, {
   3.9339051062616873`*^9, 3.933905128037936*^9}, {3.933908927198599*^9, 
   3.933908933710497*^9}, 3.933908995510907*^9, {3.933909173654699*^9, 
   3.933909224782827*^9}, {3.933909258743253*^9, 3.933909360031389*^9}, {
   3.9339197734207783`*^9, 3.933919813502157*^9}, {3.933919899729217*^9, 
   3.9339199065581703`*^9}, {3.9339202411800346`*^9, 3.933920255942584*^9}, {
   3.933923283592931*^9, 3.9339232862538557`*^9}, {3.933923544578402*^9, 
   3.933923571643756*^9}, {3.933923633288969*^9, 3.933923689261743*^9}, {
   3.93392382758098*^9, 3.933923847737789*^9}, 3.933923981800927*^9, {
   3.933924113061119*^9, 3.933924151749718*^9}, {3.9339397731287947`*^9, 
   3.933939796312445*^9}, {3.933940008195406*^9, 3.933940050185304*^9}, {
   3.933995877067299*^9, 3.933995877782126*^9}, {3.935466780567925*^9, 
   3.935466795631903*^9}, 3.935467820833077*^9, {3.935469372063898*^9, 
   3.935469374728434*^9}, 3.935469465160803*^9, {3.935761051386574*^9, 
   3.935761065970735*^9}, {3.935818676025185*^9, 3.935818680273096*^9}, {
   3.935820857481409*^9, 3.935820924097836*^9}, {3.935821023097883*^9, 
   3.9358210244974327`*^9}, {3.935821094369235*^9, 3.935821098673191*^9}, {
   3.935821149761376*^9, 3.935821179163076*^9}, {3.935827906162093*^9, 
   3.935827981689286*^9}, {3.935828213648838*^9, 3.935828213968897*^9}, {
   3.9368694164008636`*^9, 3.936869431145891*^9}, 3.937410620907424*^9, {
   3.937410653524925*^9, 3.937410726657176*^9}, {3.941175212721595*^9, 
   3.9411752207514257`*^9}, 3.941176983673102*^9, {3.9411773144183483`*^9, 
   3.94117732721989*^9}, {3.9411773617971573`*^9, 3.941177365734253*^9}, {
   3.941177416113823*^9, 3.941177421134467*^9}, 3.941177507770989*^9, {
   3.941178724355959*^9, 3.9411787357160397`*^9}, {3.941178989392482*^9, 
   3.941179032430002*^9}, {3.941180244912229*^9, 3.941180273972596*^9}, {
   3.9411803405210657`*^9, 3.9411803429423323`*^9}, {3.9411804737963877`*^9, 
   3.941180486556786*^9}, {3.941180522425948*^9, 3.941180523254282*^9}, {
   3.941180694078491*^9, 3.941180704618919*^9}, 3.9411811287011137`*^9},
 CellLabel->
  "In[186]:=",ExpressionUUID->"25fdb4b4-859c-4eee-92ea-5ea5491eae01"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBAutoDefineBasisNoLoad", "[", 
    RowBox[{"BasisName_String", ",", 
     RowBox[{"folderPrefix_String", ":", 
      RowBox[{"TBDirectory", "<>", "\"\<cache\>\""}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"TBVertexBasis", "[", "BasisName", "]"}], "===", "True"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"TBAutoDefineVertexBasis", "[", 
         RowBox[{"BasisName", ",", "folderPrefix"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"TBAutoDefineTensorBasis", "[", 
         RowBox[{"BasisName", ",", "folderPrefix"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.941194605100706*^9, 3.941194623866212*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"8d6d551a-80c8-4fc7-a71d-942b77d4b246"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Documentation  functions", "Section",
 CellChangeTimes->{{3.933821685973338*^9, 
  3.9338216901356773`*^9}},ExpressionUUID->"affba3cf-2232-4f92-a752-\
5294cc029251"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", "TBInfo", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TBInfo", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", "\"\<Name\>\"", "]"}], ",", 
           RowBox[{"#", "[", "\"\<Vertex\>\"", "]"}], ",", 
           RowBox[{"Grid", "[", 
            RowBox[{"#", "[", "\"\<Indices\>\"", "]"}], "]"}], ",", 
           RowBox[{"#", "[", "\"\<InnerProduct\>\"", "]"}], ",", 
           RowBox[{"Grid", "[", 
            RowBox[{"#", "[", "\"\<Groups\>\"", "]"}], "]"}], ",", 
           RowBox[{"#", "[", "\"\<Comment\>\"", "]"}], ",", 
           RowBox[{"#", "[", "\"\<Author\>\"", "]"}]}], "}"}], "&"}], ",", 
        "TBBasisDocs"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Grid", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Name\>\"", ",", "\"\<Vertex\>\"", ",", "\"\<Indices\>\"", 
             ",", "\"\<Inner product\>\"", ",", "\"\<Groups\>\"", ",", 
             "\"\<Comment\>\"", ",", "\"\<Author\>\""}], "}"}], "}"}], ",", 
          "data"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Dividers", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", "->", "True"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", "->", "True"}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ItemStyle", "->", 
         RowBox[{"Directive", "[", 
          RowBox[{"FontSize", "->", "13"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Spacings", "->", 
         RowBox[{"{", 
          RowBox[{"1.5", ",", "1.5"}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"ItemSize", "->", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Scaled", "[", "0.2", "]"}], ",", 
            RowBox[{"Scaled", "[", "0.1", "]"}], ",", 
            RowBox[{"Scaled", "[", "0.1", "]"}], ",", 
            RowBox[{"Scaled", "[", "0.15", "]"}], ",", 
            RowBox[{"Scaled", "[", "0.1", "]"}], ",", 
            RowBox[{"Scaled", "[", "0.25", "]"}], ",", 
            RowBox[{"Scaled", "[", "0.1", "]"}]}], "}"}], "}"}]}]}], 
       "\[IndentingNewLine]", "]"}], "//", "Print"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.933820814680767*^9, 3.933821001892135*^9}, {
   3.933821034469678*^9, 3.9338210755056953`*^9}, {3.933821203326867*^9, 
   3.933821317883334*^9}, {3.93382692733116*^9, 3.933826968342442*^9}, 
   3.933832596681126*^9, {3.933852089520945*^9, 3.933852089913221*^9}, {
   3.933905467702053*^9, 3.933905484948121*^9}, {3.933905543741373*^9, 
   3.933905586189714*^9}, {3.93390570523758*^9, 3.9339057251409683`*^9}, {
   3.933905768469302*^9, 3.933905812893077*^9}, 3.9339058599416103`*^9, {
   3.93390595155002*^9, 3.933905971293854*^9}, 3.9339060295837927`*^9, {
   3.933942601505884*^9, 3.933942619948384*^9}, {3.933942738761833*^9, 
   3.9339427480734262`*^9}, {3.933942789064181*^9, 3.9339427929698973`*^9}, {
   3.9339430192725267`*^9, 3.933943073315774*^9}, {3.933943147864874*^9, 
   3.933943182166095*^9}, 3.933943233499093*^9, {3.933943266627066*^9, 
   3.933943352111928*^9}, {3.933943423063315*^9, 3.933943492655122*^9}, {
   3.933995468172655*^9, 3.933995472142279*^9}, {3.9339959064065537`*^9, 
   3.93399595092451*^9}, {3.938061730872072*^9, 3.938061753571684*^9}, {
   3.9380618015716667`*^9, 3.93806180356382*^9}, {3.9380618585643*^9, 
   3.938061863595867*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"8c849199-ac20-4382-a7f0-940f2ba5fe23"]
}, Closed]],

Cell[CellGroupData[{

Cell["Bases building", "Section",
 CellChangeTimes->{{3.9411813055013323`*^9, 
  3.9411813122567472`*^9}},ExpressionUUID->"ec752d41-e18b-46c9-a687-\
2a43acbc2c49"],

Cell[CellGroupData[{

Cell["Basis Construction Helpers", "Subsection",
 CellChangeTimes->{{3.941196186392323*^9, 
  3.94119623602431*^9}},ExpressionUUID->"3e413af6-2afb-4184-9b39-\
a1aaa5f0470a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeInnerProduct", "[", 
   RowBox[{"innerProduct_", ",", "IndicesList_List"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fixIndices", ",", "product"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"fixIndices", "[", "expr_", "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"closedIndices", ",", "IndexReplacements"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"closedIndices", "=", 
          RowBox[{"FormTracer`GetClosedIndices", "[", "expr", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"IndexReplacements", ":=", 
          RowBox[{"Thread", "[", 
           RowBox[{"closedIndices", "->", 
            RowBox[{"Map", "[", 
             RowBox[{"TBUnique", ",", "closedIndices"}], "]"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"expr", "//.", "IndexReplacements"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"product", "[", 
       RowBox[{"t1_", ",", "t2_"}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ten1", ",", "ten2", ",", "res"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"ten1", "[", "indices__", "]"}], ":=", 
          RowBox[{
           RowBox[{"fixIndices", "[", "t1", "]"}], "/.", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", "IndicesList", "]"}], "->", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", "indices", "}"}], "]"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ten2", "[", "indices__", "]"}], ":=", 
          RowBox[{
           RowBox[{"fixIndices", "[", "t2", "]"}], "/.", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", "IndicesList", "]"}], "->", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", "indices", "}"}], "]"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"res", "=", 
          RowBox[{
           RowBox[{"innerProduct", "/.", 
            RowBox[{
             RowBox[{"Tensor1", "[", "a__", "]"}], ":>", 
             RowBox[{"Tensor1", "@@", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"IndicesList", "[", 
                  RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", 
                RowBox[{"{", "a", "}"}]}], "]"}]}]}]}], "/.", 
           RowBox[{
            RowBox[{"Tensor2", "[", "a__", "]"}], ":>", 
            RowBox[{"Tensor2", "@@", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"IndicesList", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", 
               RowBox[{"{", "a", "}"}]}], "]"}]}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"res", "=", 
          RowBox[{
           RowBox[{"res", "/.", 
            RowBox[{"Tensor1", ":>", "ten1"}]}], "/.", 
           RowBox[{"Tensor2", ":>", "ten2"}]}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "res", "]"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "product", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.941213149435541*^9, 3.941213229402812*^9}, {
   3.941213267403441*^9, 3.941213377175528*^9}, {3.941213445280151*^9, 
   3.941213445464808*^9}, {3.94121347861656*^9, 3.9412134981405163`*^9}, {
   3.941213533005045*^9, 3.9412135357167397`*^9}, {3.941213565880784*^9, 
   3.941213572333613*^9}, 3.941213605597522*^9, {3.941213825250238*^9, 
   3.9412138628342047`*^9}, {3.9412139430547037`*^9, 3.941214147464093*^9}, {
   3.941214239840069*^9, 3.941214241083869*^9}, {3.94121624934626*^9, 
   3.941216251938445*^9}, {3.941216323534053*^9, 3.941216339993967*^9}, {
   3.941216393786653*^9, 3.941216394190181*^9}, {3.941216450474697*^9, 
   3.941216458423464*^9}, {3.941216521606825*^9, 3.941216591139503*^9}, {
   3.9412241619651957`*^9, 3.9412241820254507`*^9}, 3.941224243641973*^9, {
   3.969257096008369*^9, 
   3.969257096855341*^9}},ExpressionUUID->"ddd79a10-fb97-42d5-8007-\
c57acf0bf44a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReduceTensorList", "[", 
   RowBox[{"tensors_List", ",", "innerProduct_", ",", 
    RowBox[{"{", "Indices__List", "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "allInternalIndicesList", ",", "IndicesList", ",", "partIndicesList", 
      ",", "product", ",", "rr", ",", "basisElements"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"First", ",", " ", 
      RowBox[{
      "check", " ", "for", " ", "consistency", " ", "of", " ", "all", " ", 
       "indices", " ", "in", " ", "the", " ", "tensors"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"allInternalIndicesList", "=", 
      RowBox[{"Map", "[", 
       RowBox[{"FormTracer`GetOpenIndices", ",", "tensors"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "@", 
        RowBox[{"(", 
         RowBox[{"SameQ", "@@", "allInternalIndicesList"}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Tensor list \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"tensors", ",", 
            RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", " ", 
          "\"\< has inconsistent open indices!\>\""}], "]"}], ";", 
        RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Then", ",", " ", 
       RowBox[{
       "remove", " ", "all", " ", "external", " ", "indices", " ", "not", " ",
         "relevant", " ", "for", " ", "the", " ", "current", " ", "tensor", 
        " ", "list", " ", "and", " ", "check", " ", "for", " ", "consistency",
         " ", "with", " ", "the", " ", "tensor", " ", "indices"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"IndicesList", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;"}], "]"}], "]"}], ",", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{"allInternalIndicesList", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], "&"}], 
              ")"}]}], "]"}]}], "]"}], "&"}], ",", 
        RowBox[{"{", "Indices", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"partIndicesList", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;"}], "]"}], "]"}], ",", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"allInternalIndicesList", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], "&"}], 
            ")"}]}], "]"}], "&"}], ",", 
        RowBox[{"{", "Indices", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "@", 
        RowBox[{"SameQ", "[", 
         RowBox[{
          RowBox[{"Sort", "@", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "partIndicesList", "}"}], "]"}]}], ",", 
          RowBox[{"Sort", "@", 
           RowBox[{"allInternalIndicesList", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Tensor list \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"tensors", ",", 
            RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", " ", 
          "\"\< has inconsistent indices with external indices!\>\""}], "]"}],
         ";", 
        RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Construct", " ", "a", " ", "metric"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"product", "=", 
      RowBox[{"MakeInnerProduct", "[", 
       RowBox[{"innerProduct", ",", "IndicesList"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rr", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"product", "[", 
            RowBox[{
             RowBox[{"tensors", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"tensors", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "//", "TBFormTrace"}], 
          "//", "Global`UseLorentzLinearity"}], "//", "Simplify"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "tensors"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "@", "tensors"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Find", " ", "all", " ", "linearly", " ", "independent", " ", 
       "elements"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"rr", "=", 
      RowBox[{
       RowBox[{"rr", "//", "Transpose"}], "//", "RowReduce"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"basisElements", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FirstPosition", "[", 
          RowBox[{"#", ",", "1", ",", "Nothing"}], "]"}], "&"}], "/@", "rr"}],
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"tensors", "[", 
         RowBox[{"[", "basisElements", "]"}], "]"}], "//", 
        "Global`UseLorentzLinearity"}], "//", "Simplify"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.941196526153459*^9, 3.94119660936349*^9}, {
   3.941196664313146*^9, 3.941196691541194*^9}, {3.941196845897941*^9, 
   3.9411968559855957`*^9}, {3.941197001103209*^9, 3.941197024622938*^9}, {
   3.941197088451365*^9, 3.941197186547648*^9}, {3.941212471266486*^9, 
   3.941212475742185*^9}, {3.941212518974625*^9, 3.941212816285099*^9}, {
   3.9412128719337177`*^9, 3.941212897137288*^9}, {3.94121317833582*^9, 
   3.941213180015541*^9}, {3.941213623561736*^9, 3.9412137093695*^9}, 
   3.941213760174519*^9, {3.9412150166581783`*^9, 3.941215095466792*^9}, {
   3.941215311232705*^9, 3.9412153133126087`*^9}, {3.9412153551699343`*^9, 
   3.9412154494299097`*^9}, {3.9412155078458643`*^9, 3.941215642619975*^9}, {
   3.941215704196938*^9, 3.941215723336772*^9}, {3.941215765664934*^9, 
   3.9412158201688623`*^9}, {3.941216133597726*^9, 3.941216142533904*^9}, {
   3.941217115586253*^9, 3.941217119121254*^9}, 3.941217255138132*^9, {
   3.941223245129047*^9, 3.941223278030108*^9}, {3.9412233105000887`*^9, 
   3.941223314981722*^9}, {3.941223430990527*^9, 3.941223438211314*^9}, {
   3.941223711102476*^9, 3.9412238433761997`*^9}, {3.9412238824002943`*^9, 
   3.941223917880672*^9}, {3.941224128629675*^9, 3.941224156810329*^9}, {
   3.9412241870818663`*^9, 3.9412241872339573`*^9}, {3.941265653611005*^9, 
   3.941265660282498*^9}, {3.941265702447258*^9, 3.941265708503275*^9}, {
   3.9412657511957397`*^9, 3.9412657531635437`*^9}, 3.941266071542485*^9},
 CellLabel->
  "In[191]:=",ExpressionUUID->"8dfab7ec-76d6-44d3-bd88-b570064f104c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basis Construction", "Subsection",
 CellChangeTimes->{{3.941196186392323*^9, 
  3.941196224518126*^9}},ExpressionUUID->"dc801699-1d95-410e-9663-\
9189a6f1e807"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"TBConstructBasis", "[", "___", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Please use the correct pattern for Basis construction: \\n\>\"", 
         ",", 
         RowBox[{"TBConstructBasis", "::", "usage"}]}], "]"}], ";", 
       RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.9411958931665087`*^9, 3.941195950492478*^9}, 
   3.953888737902672*^9},ExpressionUUID->"e7e8722e-6c81-4b40-87c8-\
d6ef15800524"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "TBConstructBasis", "]"}], "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<Name\>\"", "->", "\"\<\>\""}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"\"\<RequiredGroups\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"{", "}"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Vertex\>\"", "->", "\"\<\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<VertexStructure\>\"", "->", "Tensor"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<InnerProduct\>\"", "->", 
       RowBox[{"Tensor1", "*", "Tensor2"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<CanonicalProduct\>\"", "->", "Null"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Indices\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"{", "}"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<MomentumConservation\>\"", "->", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Tensors\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"{", "}"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Replacements\>\"", "->", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Comment\>\"", "->", "\"\<\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Author\>\"", "->", "\"\<User\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Usage\>\"", "->", "\"\<\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<CacheDirectory\>\"", "->", "\"\<./TBCache\>\""}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TBConstructBasis", "::", "invalid"}], "=", 
  "\"\<The argument \\\"`1`\\\" with value \\\"`2`\\\" is invalid.\>\""}], "\
\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBConstructBasis", "::", "warning"}], "=", 
   "\"\<The argument \\\"`1`\\\" with value \\\"`2`\\\" is missing. Some \
functions may/will break.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBConstructBasis", "::", "InvalidArgument"}], "=", 
   "\"\<TBConstructBasis takes only named arguments, see \
TBConstructBasis::usage\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBConstructBasis", "[", "___", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"TBConstructBasis", "::", "InvalidArgument"}], "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}], ")"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBConstructBasis", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "BasisName", ",", "RequiredGroups", ",", "Vertex", ",", 
       "VertexStructure", ",", "InnerProduct", ",", "CanonicalProduct", ",", 
       "Comment", ",", "Author", ",", "Usage", ",", "Indices", ",", 
       "MomentumConservation", ",", "Tensors", ",", "Replacements", ",", 
       "CacheDirectory"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"BasisName", "=", 
       RowBox[{"OptionValue", "[", "\"\<Name\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Head", "@", "BasisName"}], "=!=", "String"}], "||", 
         RowBox[{"BasisName", "===", "\"\<\>\""}]}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"TBConstructBasis", "::", "invalid"}], ",", "\"\<Name\>\"",
            ",", "BasisName"}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"RequiredGroups", "=", 
       RowBox[{"OptionValue", "[", "\"\<RequiredGroups\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Head", "@", "RequiredGroups"}], "=!=", "List"}], "&&", 
         RowBox[{"AnyTrue", "[", 
          RowBox[{"RequiredGroups", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", "#", "]"}], "=!=", "List"}], "&"}]}], 
          "]"}]}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"TBConstructBasis", "::", "invalid"}], ",", 
           "\"\<RequiredGroups\>\"", ",", "RequiredGroups"}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Vertex", "=", 
       RowBox[{"OptionValue", "[", "\"\<Vertex\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Head", "@", "Vertex"}], "=!=", "List"}], "||", 
         RowBox[{"AnyTrue", "[", 
          RowBox[{"Vertex", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", "#", "]"}], "=!=", "Symbol"}], "&"}]}], 
          "]"}]}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"TBConstructBasis", "::", "invalid"}], ",", 
           "\"\<Vertex\>\"", ",", "Vertex"}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"VertexStructure", "=", 
       RowBox[{"OptionValue", "[", "\"\<VertexStructure\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Head", "@", "VertexStructure"}], "===", "List"}], "||", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"VertexStructure", ",", "Tensor", ",", "Infinity"}], 
          "]"}]}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"TBConstructBasis", "::", "invalid"}], ",", 
           "\"\<VertexStructure\>\"", ",", "VertexStructure"}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"InnerProduct", "=", 
       RowBox[{"OptionValue", "[", "\"\<InnerProduct\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Head", "@", "InnerProduct"}], "===", "List"}], "||", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"InnerProduct", ",", "Tensor1", ",", "Infinity"}], "]"}], "||", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"InnerProduct", ",", "Tensor2", ",", "Infinity"}], "]"}]}], 
        ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"TBConstructBasis", "::", "invalid"}], ",", 
           "\"\<InnerProduct\>\"", ",", "InnerProduct"}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"CanonicalProduct", "=", 
       RowBox[{"OptionValue", "[", "\"\<CanonicalProduct\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Head", "@", "InnerProduct"}], "===", "List"}], "||", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"InnerProduct", ",", "Tensor1", ",", "Infinity"}], "]"}], "||", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"InnerProduct", ",", "Tensor2", ",", "Infinity"}], "]"}]}], 
        ",", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"TBConstructBasis", "::", "warning"}], ",", 
          "\"\<CanonicalProduct\>\"", ",", "InnerProduct"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Indices", "=", 
       RowBox[{"OptionValue", "[", "\"\<Indices\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Head", "@", "Indices"}], "=!=", "List"}], "||", 
         RowBox[{"AnyTrue", "[", 
          RowBox[{"Indices", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", "#", "]"}], "=!=", "List"}], "&"}]}], 
          "]"}]}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"TBConstructBasis", "::", "invalid"}], ",", 
           "\"\<Indices\>\"", ",", "Indices"}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"MomentumConservation", "=", 
       RowBox[{"OptionValue", "[", "\"\<MomentumConservation\>\"", "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "@", "MomentumConservation"}], "=!=", "List"}], ",", 
        
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"TBConstructBasis", "::", "invalid"}], ",", 
           "\"\<MomentumConservation\>\"", ",", "MomentumConservation"}], 
          "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Tensors", "=", 
       RowBox[{"OptionValue", "[", "\"\<Tensors\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Head", "@", "Tensors"}], "=!=", "List"}], "&&", 
         RowBox[{"AnyTrue", "[", 
          RowBox[{"Tensors", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", "#", "]"}], "=!=", "List"}], "&"}]}], 
          "]"}]}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"TBConstructBasis", "::", "invalid"}], ",", 
           "\"\<Tensors\>\"", ",", "Tensors"}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Replacements", "=", 
       RowBox[{"OptionValue", "[", "\"\<Replacements\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Head", "@", "Replacements"}], "=!=", "List"}], "||", 
         RowBox[{"AnyTrue", "[", 
          RowBox[{"Replacements", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Head", "[", "#", "]"}], "=!=", "Rule"}], "&&", 
              RowBox[{
               RowBox[{"Head", "[", "#", "]"}], "=!=", "RuleDelayed"}]}], 
             ")"}], "&"}]}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"TBConstructBasis", "::", "invalid"}], ",", 
           "\"\<Replacements\>\"", ",", "Replacements"}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Author", "=", 
       RowBox[{"OptionValue", "[", "\"\<Author\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Usage", "=", 
       RowBox[{"OptionValue", "[", "\"\<Usage\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Comment", "=", 
       RowBox[{"OptionValue", "[", "\"\<Comment\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"CacheDirectory", "=", 
       RowBox[{"OptionValue", "[", "\"\<CacheDirectory\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"TBConstructBasis", "[", 
       RowBox[{
       "BasisName", ",", "RequiredGroups", ",", "Vertex", ",", 
        "VertexStructure", ",", "InnerProduct", ",", "Comment", ",", "Author",
         ",", "Usage", ",", "Indices", ",", "MomentumConservation", ",", 
        "Tensors", ",", "Replacements", ",", "CacheDirectory", ",", 
        "CanonicalProduct"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.953886958273278*^9, 3.953887059605421*^9}, {
   3.9538870979295483`*^9, 3.953887266753953*^9}, {3.95388762310182*^9, 
   3.953887708689928*^9}, {3.953887747929785*^9, 3.953887898286428*^9}, {
   3.953887928501997*^9, 3.953888119630114*^9}, {3.953888173910639*^9, 
   3.953888219942666*^9}, 3.953888254638564*^9, {3.953888400302724*^9, 
   3.9538884687512617`*^9}, 3.9538884990626917`*^9, 3.9538887613238564`*^9, {
   3.95388879702682*^9, 3.953888800914649*^9}, {3.959838836885137*^9, 
   3.959838974403184*^9}, 3.959839175020261*^9, {3.969257098732551*^9, 
   3.969257099644917*^9}, {3.969352007489665*^9, 
   3.969352107168013*^9}},ExpressionUUID->"cee60305-1632-4714-aee9-\
1dcaae6ffc44"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBConstructBasis", "[", "\n", "\t", 
    RowBox[{"BasisName_String", ",", "\[IndentingNewLine]", 
     RowBox[{"{", "RequiredGroups___List", "}"}], ",", "\n", "\t", 
     "Vertex_List", ",", "\n", "\t", "VertexStructure_", ",", "\n", "\t", 
     "InnerProduct_", ",", "\n", "\t", "Comment_String", ",", "\n", "\t", 
     "Author_String", ",", "\n", "\t", "Usage_", ",", "\n", "\t", 
     RowBox[{"{", "Indices__List", "}"}], ",", "\n", "\t", 
     "MomentumConservation_List", ",", "\n", "\t", 
     RowBox[{"{", "Tensors__List", "}"}], ",", "\n", "\t", 
     "Replacements_List", ",", "\n", "\t", 
     RowBox[{"CacheDirectory_String", ":", "\"\<./TBCache\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"CanonicalProduct_", ":", "Null"}]}], "\n", "  ", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"reducedTensors", ",", "maximalSet", ",", "basis"}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"BeginPackage", "[", "\"\<TensorBases`\>\"", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"TBAvailableBasisNames", ",", "BasisName"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Basis \\\"\>\"", "~~", "BasisName", "~~", 
           "\"\<\\\" has been already defined!\>\""}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBReplacements", "[", "BasisName", "]"}], "=", 
       "Replacements"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBIndices", "[", "BasisName", "]"}], "=", 
       RowBox[{"{", "Indices", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBMomentumConservation", "[", "BasisName", "]"}], "=", 
       "MomentumConservation"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBVertex", "[", "BasisName", "]"}], "=", "Vertex"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBVertexBasis", "[", "BasisName", "]"}], "=", "False"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBAuthor", "[", "BasisName", "]"}], "=", "Author"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBComment", "[", "BasisName", "]"}], "=", "Comment"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBUsage", "[", "BasisName", "]"}], "=", "Usage"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBInnerProduct", "[", "BasisName", "]"}], "=", 
       "InnerProduct"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBCanonicalProduct", "[", "BasisName", "]"}], "=", 
       "CanonicalProduct"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBVertexStructure", "[", "BasisName", "]"}], "=", 
       "VertexStructure"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBRequiredGroups", "[", "BasisName", "]"}], "=", 
       RowBox[{"{", "RequiredGroups", "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"TBCheckRequirements", "[", "BasisName", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Build", " ", "a", " ", "maximal", " ", "set", " ", "by", " ", "doing",
         " ", "the", " ", "tensor", " ", "product"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"maximalSet", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"TensorProduct", "@@", 
          RowBox[{"{", "Tensors", "}"}]}], "]"}], "//.", 
        "MomentumConservation"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", " ", "necessary"}], ",", " ", 
        RowBox[{"reduce", " ", "it"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBBasis", "[", "BasisName", "]"}], "=", 
       RowBox[{
        RowBox[{"ReduceTensorList", "[", 
         RowBox[{"maximalSet", ",", "InnerProduct", ",", 
          RowBox[{"{", "Indices", "}"}]}], "]"}], "//", 
        "InsertInputNaming"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBInternal", "[", 
        RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}], "=", 
       RowBox[{"InsertOutputNaming", "[", 
        RowBox[{"{", "Indices", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBInternal", "[", 
        RowBox[{"BasisName", ",", "\"\<Replacements\>\""}], "]"}], "=", 
       "Replacements"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBInternal", "[", 
        RowBox[{"BasisName", ",", "\"\<Basis\>\""}], "]"}], "=", 
       RowBox[{
        RowBox[{"TBMakeBasis", "[", "BasisName", "]"}], "//", 
        "InsertInputNaming"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBInternal", "[", 
        RowBox[{"BasisName", ",", "\"\<Length\>\""}], "]"}], "=", 
       RowBox[{"TBBasisLength", "[", "BasisName", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBInternal", "[", 
        RowBox[{"BasisName", ",", "\"\<InnerProduct\>\""}], "]"}], "=", 
       RowBox[{"TBMakeInnerProduct", "[", "BasisName", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBInternal", "[", 
        RowBox[{"BasisName", ",", "\"\<CanonicalProduct\>\""}], "]"}], "=", 
       RowBox[{"TBMakeCanonicalProduct", "[", "BasisName", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBInternal", "[", 
        RowBox[{"BasisName", ",", "\"\<Vertices\>\""}], "]"}], "=", 
       RowBox[{
        RowBox[{"TBMakeVertices", "[", "BasisName", "]"}], "//", 
        "InsertInputNaming"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBInternal", "[", 
        RowBox[{"BasisName", ",", "\"\<Metric\>\""}], "]"}], "=", 
       RowBox[{
        RowBox[{"TBBuildMetric", "[", "BasisName", "]"}], "//", 
        "InsertInputNaming"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBInternal", "[", 
        RowBox[{"BasisName", ",", "\"\<InverseMetric\>\""}], "]"}], "=", 
       RowBox[{
        RowBox[{"TBBuildInverseMetric", "[", "BasisName", "]"}], "//", 
        "InsertInputNaming"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBInternal", "[", 
        RowBox[{"BasisName", ",", "\"\<Projectors\>\""}], "]"}], "=", 
       RowBox[{
        RowBox[{"TBBuildProjectors", "[", "BasisName", "]"}], "//", 
        "InsertInputNaming"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Unprotect", "[", 
       RowBox[{
       "TBGetBasisElement", ",", "TBGetMetric", ",", "TBGetInverseMetric", 
        ",", "TBGetProjector", ",", "TBInfo", ",", "TBGetVertex", ",", 
        "TBGetInnerProduct", ",", "TBGetCanonicalProduct"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"TBDefineTBGetBasisElement", "[", "BasisName", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"TBDefineTBGetVertex", "[", "BasisName", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"TBDefineTBGetMetric", "[", "BasisName", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"TBDefineTBGetInnerProduct", "[", "BasisName", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"TBDefineTBGetCanonicalProduct", "[", "BasisName", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"TBDefineTBGetInverseMetric", "[", "BasisName", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"TBDefineTBGetProjector", "[", "BasisName", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"TBDefineTBInfo", "[", "BasisName", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"TBAddBasisDocumentation", "[", "BasisName", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Protect", "[", 
       RowBox[{
       "TBGetBasisElement", ",", "TBGetMetric", ",", "TBGetInverseMetric", 
        ",", "TBGetProjector", ",", "TBInfo", ",", "TBGetVertex", ",", 
        "TBGetInnerProduct", ",", "TBGetCanonicalProduct"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"TBPrint", "[", 
       RowBox[{
        RowBox[{"BasisName", "~~", "\"\<: done.\>\""}], ",", "1"}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"End", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"EndPackage", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.941195788594103*^9, 3.941195843955662*^9}, 
   3.941195952346682*^9, {3.941196011858966*^9, 3.9411960171770287`*^9}, 
   3.941196064235111*^9, {3.941196699477405*^9, 3.941196740445478*^9}, {
   3.9411968000549994`*^9, 3.941196834012314*^9}, {3.941212460342473*^9, 
   3.941212463694759*^9}, {3.9412129837616262`*^9, 3.941213015157802*^9}, {
   3.941213054919301*^9, 3.941213090110628*^9}, {3.941215889169139*^9, 
   3.941215930528677*^9}, {3.9412160306649723`*^9, 3.941216094065778*^9}, {
   3.9412166554554787`*^9, 3.941216684643486*^9}, {3.9412167323875628`*^9, 
   3.941216757239839*^9}, {3.94121680376*^9, 3.94121680740415*^9}, 
   3.941216840672801*^9, 3.9412168774250183`*^9, {3.941216922988933*^9, 
   3.941216940516478*^9}, {3.941216988288824*^9, 3.9412170052091007`*^9}, {
   3.941217195141993*^9, 3.94121722311854*^9}, {3.941217314024474*^9, 
   3.94121736287868*^9}, {3.9412174018592052`*^9, 3.941217428888988*^9}, {
   3.941217506991284*^9, 3.941217592491973*^9}, {3.94121764897189*^9, 
   3.941217686491955*^9}, 3.941218867210147*^9, {3.941218937446104*^9, 
   3.941218982449606*^9}, {3.9412190249419937`*^9, 3.9412191470264378`*^9}, {
   3.941219193755207*^9, 3.941219195434773*^9}, {3.941219289915365*^9, 
   3.941219291887244*^9}, {3.941219400364787*^9, 3.9412194080196257`*^9}, {
   3.941219813714857*^9, 3.9412198179378767`*^9}, {3.953887078650299*^9, 
   3.9538870894419928`*^9}, 3.9538885470428867`*^9, 3.953888873414888*^9, {
   3.969257100022036*^9, 3.969257112043832*^9}, {3.969257431392515*^9, 
   3.9692574565867243`*^9}, {3.96925761091959*^9, 3.969257645999009*^9}, {
   3.9693475833461*^9, 3.969347602997785*^9}, {3.969352109666912*^9, 
   3.96935218252607*^9}},ExpressionUUID->"df914fa8-0897-4c10-9328-\
ade25a1bd30a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Restriction", "Subsection",
 CellChangeTimes->{{3.941196186392323*^9, 
  3.941196210155129*^9}},ExpressionUUID->"1efcce37-5c6a-46da-b65a-\
c7e8cd3a1ea3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TBRestrictBasis", "[", 
   RowBox[{"inBasisName_String", ",", " ", "outBasisName_String", ",", " ", 
    RowBox[{"{", "indices__Integer", "}"}], ",", 
    RowBox[{"CacheDirectory_String", ":", "\"\<./TBCache\>\""}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "indexList", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "@", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"TBAvailableBasisNames", ",", "inBasisName"}], "]"}]}], ",", 
       
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Unknown Basis \\\"\>\"", "~~", "inBasisName", "~~", 
          "\"\<\\\"!\>\""}], "]"}], ";", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"TBAvailableBasisNames", ",", "outBasisName"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Basis \\\"\>\"", "~~", "outBasisName", "~~", 
          "\"\<\\\" already exists!\>\""}], "]"}], ";", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"indexList", "=", 
      RowBox[{"{", "indices", "}"}]}], " ", ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "@", 
        RowBox[{"AllTrue", "[", 
         RowBox[{"indexList", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "<=", 
             RowBox[{"Length", "[", 
              RowBox[{"TBInternal", "[", 
               RowBox[{"inBasisName", ",", "\"\<Basis\>\""}], "]"}], "]"}]}], 
            ")"}], "&"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<Indices out of range!\>\"", "]"}], ";", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"BeginPackage", "[", "\"\<TensorBases`\>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBAutoDefine", "[", "outBasisName", "]"}], "=", 
      RowBox[{"TBAutoDefine", "[", "inBasisName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBRequiredGroups", "[", "outBasisName", "]"}], "=", 
      RowBox[{"TBRequiredGroups", "[", "inBasisName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBVertex", "[", "outBasisName", "]"}], "=", 
      RowBox[{"TBVertex", "[", "inBasisName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBVertexStructure", "[", "outBasisName", "]"}], "=", 
      RowBox[{"TBVertexStructure", "[", "inBasisName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBVertexBasis", "[", "outBasisName", "]"}], "=", 
      RowBox[{"TBVertexBasis", "[", "inBasisName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBInnerProduct", "[", "outBasisName", "]"}], "=", 
      RowBox[{"TBInnerProduct", "[", "inBasisName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBCanonicalProduct", "[", "outBasisName", "]"}], "=", 
      RowBox[{"TBCanonicalProduct", "[", "inBasisName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBComment", "[", "outBasisName", "]"}], "=", 
      RowBox[{"TBComment", "[", "inBasisName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBAuthor", "[", "outBasisName", "]"}], "=", 
      RowBox[{"TBAuthor", "[", "inBasisName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBUsage", "[", "outBasisName", "]"}], "=", 
      RowBox[{"TBUsage", "[", "inBasisName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBIndices", "[", "outBasisName", "]"}], "=", 
      RowBox[{"TBIndices", "[", "inBasisName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBMomentumConservation", "[", "outBasisName", "]"}], "=", 
      RowBox[{"TBMomentumConservation", "[", "inBasisName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TBBasis", "[", "outBasisName", "]"}], "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"TBBasis", "[", "inBasisName", "]"}], "[", 
          RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", "indexList"}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Unprotect", "[", 
      RowBox[{
      "TBGetBasisElement", ",", "TBGetMetric", ",", "TBGetInverseMetric", ",",
        "TBGetProjector", ",", "TBInfo", ",", "TBGetVertex", ",", 
       "TBGetInnerProduct", ",", "TBGetCanonicalProduct"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TBAutoDefineBasisNoLoad", "[", 
      RowBox[{"outBasisName", ",", "CacheDirectory"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Protect", "[", 
      RowBox[{
      "TBGetBasisElement", ",", "TBGetMetric", ",", "TBGetInverseMetric", ",",
        "TBGetProjector", ",", "TBInfo", ",", "TBGetVertex", ",", 
       "TBGetInnerProduct", ",", "TBGetCanonicalProduct"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"End", "[", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"EndPackage", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.94119368997082*^9, 3.941193736984293*^9}, {
   3.941193784383974*^9, 3.941193818311598*^9}, {3.941193849068233*^9, 
   3.94119386928027*^9}, {3.941193953400414*^9, 3.941194004242609*^9}, {
   3.94119440937249*^9, 3.941194418499017*^9}, {3.941194639845368*^9, 
   3.941194790357012*^9}, 3.9411948384433403`*^9, {3.941194891006693*^9, 
   3.94119489475568*^9}, {3.941194970541586*^9, 3.94119497328979*^9}, {
   3.941283705834065*^9, 3.941283707677825*^9}, {3.947168930895203*^9, 
   3.947168944794134*^9}, {3.947168984114822*^9, 3.947169005566553*^9}, {
   3.969347607489406*^9, 
   3.969347608833191*^9}},ExpressionUUID->"c51852e4-4259-4a60-afd1-\
89085a704206"]
}, Closed]],

Cell[CellGroupData[{

Cell["Import/Export facilities", "Subsection",
 CellChangeTimes->{{3.941196186392323*^9, 
  3.941196198252438*^9}},ExpressionUUID->"6fd1aab8-49ce-4b72-8f10-\
a955c0d61aff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TBUnregister", "[", "BasisName_String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "@", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"TBAvailableBasisNames", ",", "BasisName"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Unknown Basis \\\"\>\"", "~~", "BasisName", "~~", 
          "\"\<\\\"!\>\""}], "]"}], ";", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"TBAvailableBasisNames", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"TBAvailableBasisNames", ",", "BasisName"}], "]"}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.941194089704681*^9, 3.941194198537714*^9}, {
  3.941194230241984*^9, 3.941194267546012*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"722f1a94-94b0-4458-8e49-4565186956ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TBImportBasis", "[", 
   RowBox[{"BasisDefinitionFile_String", ",", 
    RowBox[{"CacheDirectory_String", ":", "\"\<./TBCache\>\""}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"BasisName", "=", 
      RowBox[{"GetBasisName", "[", "BasisDefinitionFile", "]"}]}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"TBAvailableBasisNames", ",", "BasisName"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Basis \\\"\>\"", "~~", "BasisName", "~~", 
          "\"\<\\\" already exists! If you wish to overwrite it, use \
\!\(\*StyleBox[\"TBUnregister\",FontColor->RGBColor[1, 0.5, 0]]\).\>\""}], 
         "]"}], ";", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"BeginPackage", "[", "\"\<TensorBases`\>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Unprotect", "[", 
      RowBox[{
      "TBGetBasisElement", ",", "TBGetMetric", ",", "TBGetInverseMetric", ",",
        "TBGetProjector", ",", "TBInfo", ",", "TBGetVertex", ",", 
       "TBGetInnerProduct", ",", "TBGetCanonicalProduct"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TBAutoDefineBasis", "[", 
      RowBox[{"BasisDefinitionFile", ",", "CacheDirectory"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Protect", "[", 
      RowBox[{
      "TBGetBasisElement", ",", "TBGetMetric", ",", "TBGetInverseMetric", ",",
        "TBGetProjector", ",", "TBInfo", ",", "TBGetVertex", ",", 
       "TBGetInnerProduct", ",", "TBGetCanonicalProduct"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"End", "[", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"EndPackage", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9411750784417477`*^9, 3.941175124971614*^9}, {
   3.941175318498961*^9, 3.941175341121825*^9}, {3.9411754852210827`*^9, 
   3.941175485421473*^9}, {3.941175627954852*^9, 3.9411756345112333`*^9}, {
   3.94117570524389*^9, 3.94117571878732*^9}, {3.9411764994783907`*^9, 
   3.941176547066489*^9}, {3.94117721242841*^9, 3.941177220201527*^9}, {
   3.941177257884506*^9, 3.9411772908619423`*^9}, {3.94117746116103*^9, 
   3.941177474240827*^9}, {3.941177641161826*^9, 3.9411776442173634`*^9}, {
   3.941177695995699*^9, 3.941177709507865*^9}, {3.941178208927343*^9, 
   3.94117820954919*^9}, {3.941178487339715*^9, 3.941178523478299*^9}, {
   3.941180530833547*^9, 3.9411805594587173`*^9}, 3.941180837745357*^9, {
   3.941193495459939*^9, 3.9411934959779882`*^9}, {3.941220403507407*^9, 
   3.941220437727633*^9}, 3.941220472167695*^9, {3.9693476126920977`*^9, 
   3.969347613364894*^9}},ExpressionUUID->"ed8767a1-38cb-4d61-8fcd-\
d8bef0b02bf2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBExportTensorCache", "[", 
     RowBox[{"BasisName_String", ",", 
      RowBox[{"CacheFolder_String", ":", "\"\<./TBCache\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"TBAvailableBasisNames", ",", "BasisName"}], "]"}]}], ",", 
         
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Unknown Basis \\\"\>\"", "~~", "BasisName", "~~", 
            "\"\<\\\"!\>\""}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"BeginPackage", "[", "\"\<TensorBases`\>\"", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{
         "CacheFolder", "~~", "\"\</\>\"", "~~", "BasisName", "~~", 
          "\"\</basis.m\>\""}], ",", 
         RowBox[{"TBInternal", "[", 
          RowBox[{"BasisName", ",", "\"\<Basis\>\""}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{
         "CacheFolder", "~~", "\"\</\>\"", "~~", "BasisName", "~~", 
          "\"\</vertices.m\>\""}], ",", 
         RowBox[{"TBInternal", "[", 
          RowBox[{"BasisName", ",", "\"\<Vertices\>\""}], "]"}]}], "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{
         "CacheFolder", "~~", "\"\</\>\"", "~~", "BasisName", "~~", 
          "\"\</metric.m\>\""}], ",", 
         RowBox[{"TBInternal", "[", 
          RowBox[{"BasisName", ",", "\"\<Metric\>\""}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{
         "CacheFolder", "~~", "\"\</\>\"", "~~", "BasisName", "~~", 
          "\"\</inverseMetric.m\>\""}], ",", 
         RowBox[{"TBInternal", "[", 
          RowBox[{"BasisName", ",", "\"\<InverseMetric\>\""}], "]"}]}], "]"}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{
         "CacheFolder", "~~", "\"\</\>\"", "~~", "BasisName", "~~", 
          "\"\</projectors.m\>\""}], ",", 
         RowBox[{"TBInternal", "[", 
          RowBox[{"BasisName", ",", "\"\<Projectors\>\""}], "]"}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"End", "[", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"EndPackage", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBExportVertexCache", "[", 
     RowBox[{"BasisName_String", ",", 
      RowBox[{"CacheFolder_String", ":", "\"\<./TBCache\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"TBAvailableBasisNames", ",", "BasisName"}], "]"}]}], ",", 
         
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Unknown Basis \\\"\>\"", "~~", "BasisName", "~~", 
            "\"\<\\\"!\>\""}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"BeginPackage", "[", "\"\<TensorBases`\>\"", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{
         "CacheFolder", "~~", "\"\</\>\"", "~~", "BasisName", "~~", 
          "\"\</vertices.m\>\""}], ",", 
         RowBox[{"TBInternal", "[", 
          RowBox[{"BasisName", ",", "\"\<Vertices\>\""}], "]"}]}], "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{
         "CacheFolder", "~~", "\"\</\>\"", "~~", "BasisName", "~~", 
          "\"\</metric.m\>\""}], ",", 
         RowBox[{"TBInternal", "[", 
          RowBox[{"BasisName", ",", "\"\<Metric\>\""}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{
         "CacheFolder", "~~", "\"\</\>\"", "~~", "BasisName", "~~", 
          "\"\</inverseMetric.m\>\""}], ",", 
         RowBox[{"TBInternal", "[", 
          RowBox[{"BasisName", ",", "\"\<InverseMetric\>\""}], "]"}]}], "]"}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{
         "CacheFolder", "~~", "\"\</\>\"", "~~", "BasisName", "~~", 
          "\"\</projectors.m\>\""}], ",", 
         RowBox[{"TBInternal", "[", 
          RowBox[{"BasisName", ",", "\"\<Projectors\>\""}], "]"}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"End", "[", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"EndPackage", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBExportCache", "[", 
    RowBox[{"BasisName_String", ",", 
     RowBox[{"CacheFolder_String", ":", "\"\<./TBCache\>\""}]}], "]"}], ":=", 
   
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "@", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"TBAvailableBasisNames", ",", "BasisName"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Unknown Basis \\\"\>\"", "~~", "BasisName", "~~", 
           "\"\<\\\"!\>\""}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TBVertexBasis", "[", "BasisName", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"TBExportVertexCache", "[", 
         RowBox[{"BasisName", ",", "CacheFolder"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"TBExportTensorCache", "[", 
         RowBox[{"BasisName", ",", "CacheFolder"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.941219637964171*^9, 3.941219778889522*^9}, {
  3.941219986206312*^9, 3.941219993310656*^9}, {3.941220039230706*^9, 
  3.9412200569898977`*^9}, {3.9412202586921673`*^9, 3.941220271224221*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"d4d0c117-b8d3-4534-9810-eca46ea7b9ca"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBExportTensorBasis", "[", 
     RowBox[{"BasisName_String", ",", 
      RowBox[{"folder_String", ":", "\"\<./\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "outputCode", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"TBAvailableBasisNames", ",", "BasisName"}], "]"}]}], ",", 
         
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Unknown Basis \\\"\>\"", "~~", "BasisName", "~~", 
            "\"\<\\\"!\>\""}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"BeginPackage", "[", "\"\<TensorBases`\>\"", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"outputCode", "=", 
        RowBox[{
        "\"\<(* Basis Export from TensorBases package *)\n\nTBAutoDefine[\\\"\
\>\"", "<>", "BasisName", "<>", "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBAutoDefine", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\nTBRequiredGroups[\\\"\>\"", "<>", "BasisName", "<>", 
         "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBRequiredGroups", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\nTBVertex[\\\"\>\"", "<>", "BasisName", "<>", 
         "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBVertex", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\nTBVertexBasis[\\\"\>\"", "<>", "BasisName", "<>", 
         "\"\<\\\"]=False;\n\nTBVertexStructure[\\\"\>\"", "<>", "BasisName", 
         "<>", "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBVertexStructure", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\nTBInnerProduct[\\\"\>\"", "<>", "BasisName", "<>", 
         "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBInnerProduct", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\nTBComment[\\\"\>\"", "<>", "BasisName", "<>", 
         "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBComment", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\nTBAuthor[\\\"\>\"", "<>", "BasisName", "<>", 
         "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBAuthor", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\nTBUsage[\\\"\>\"", "<>", "BasisName", "<>", 
         "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBUsage", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\nTBIndices[\\\"\>\"", "<>", "BasisName", "<>", 
         "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBIndices", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\nTBMomentumConservation[\\\"\>\"", "<>", "BasisName", "<>", 
         "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBMomentumConservation", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\nTBBasis[\\\"\>\"", "<>", "BasisName", "<>", 
         "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBBasis", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{
         "folder", "~~", "\"\</\>\"", "~~", "BasisName", "~~", "\"\<.m\>\""}],
          ",", "outputCode", ",", "\"\<Text\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"End", "[", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"EndPackage", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBExportVertexBasis", "[", 
     RowBox[{"BasisName_String", ",", 
      RowBox[{"folder_String", ":", "\"\<./\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "outputCode", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"TBAvailableBasisNames", ",", "BasisName"}], "]"}]}], ",", 
         
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Unknown Basis \\\"\>\"", "~~", "BasisName", "~~", 
            "\"\<\\\"!\>\""}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"BeginPackage", "[", "\"\<TensorBases`\>\"", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"outputCode", "=", 
        RowBox[{
        "\"\<(* Basis Export from TensorBases package *)\n\nTBAutoDefine[\\\"\
\>\"", "<>", "BasisName", "<>", "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBAutoDefine", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\nTBRequiredGroups[\\\"\>\"", "<>", "BasisName", "<>", 
         "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBRequiredGroups", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\nTBVertex[\\\"\>\"", "<>", "BasisName", "<>", 
         "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBVertex", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\nTBVertexBasis[\\\"\>\"", "<>", "BasisName", "<>", 
         "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBVertexBasis", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\nTBCanonicalProduct[\\\"\>\"", "<>", "BasisName", "<>", 
         "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBCanonicalProduct", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\nTBComment[\\\"\>\"", "<>", "BasisName", "<>", 
         "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBComment", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\nTBAuthor[\\\"\>\"", "<>", "BasisName", "<>", 
         "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBAuthor", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\nTBUsage[\\\"\>\"", "<>", "BasisName", "<>", 
         "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBUsage", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\nTBIndices[\\\"\>\"", "<>", "BasisName", "<>", 
         "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBIndices", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\nTBMomentumConservation[\\\"\>\"", "<>", "BasisName", "<>", 
         "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBMomentumConservation", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\nTBBasis[\\\"\>\"", "<>", "BasisName", "<>", 
         "\"\<\\\"]=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"TBBasis", "[", "BasisName", "]"}], ",", 
           RowBox[{"FormatType", "->", "InputForm"}]}], "]"}], "<>", 
         "\"\<;\n\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{
         "folder", "~~", "\"\</\>\"", "~~", "BasisName", "~~", "\"\<.m\>\""}],
          ",", "outputCode", ",", "\"\<Text\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"End", "[", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"EndPackage", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBExportBasis", "[", 
    RowBox[{"BasisName_String", ",", 
     RowBox[{"folder_String", ":", "\"\<./\>\""}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "outputCode", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "@", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"TBAvailableBasisNames", ",", "BasisName"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Unknown Basis \\\"\>\"", "~~", "BasisName", "~~", 
           "\"\<\\\"!\>\""}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TBVertexBasis", "[", "BasisName", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"TBExportVertexBasis", "[", 
         RowBox[{"BasisName", ",", "folder"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"TBExportTensorBasis", "[", 
         RowBox[{"BasisName", ",", "folder"}], "]"}]}], "\[IndentingNewLine]",
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.941192941992177*^9, 3.941192973426599*^9}, {
  3.9411930852829247`*^9, 3.941193101120418*^9}, {3.941193189205275*^9, 
  3.941193193997023*^9}, {3.941193233504603*^9, 3.941193300349382*^9}, {
  3.941193336182003*^9, 3.9411933621185827`*^9}, {3.9411942906187153`*^9, 
  3.941194290958642*^9}, {3.941219786664988*^9, 3.941219799565723*^9}, {
  3.950085506535466*^9, 
  3.950085522118803*^9}},ExpressionUUID->"449db943-f88d-4296-bedc-\
a6300214bcf4"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bases  Processing", "Chapter",
 CellChangeTimes->{{3.933909020046721*^9, 3.933909025446404*^9}, 
   3.9339591533529987`*^9, 
   3.935831549803781*^9},ExpressionUUID->"221bb86f-745e-4bc2-a4c0-\
d57eedca7fe8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ClearCache", "[", "BasisDefinitionFile_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"BasisName", "=", 
       RowBox[{"GetBasisName", "[", "BasisDefinitionFile", "]"}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Global`TBRebuildCache", "===", "True"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TBPrint", "[", 
          RowBox[{
           RowBox[{
           "\"\<Removing cache in \>\"", "~~", "TBDirectory", "~~", 
            "\"\<cache/\>\"", "~~", "BasisName", "~~", "\"\</\>\""}], ",", 
           "1"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"DeleteDirectory", "[", 
           RowBox[{
            RowBox[{
            "TBDirectory", "~~", "\"\<cache/\>\"", "~~", "BasisName", "~~", 
             "\"\</\>\""}], ",", 
            RowBox[{"DeleteContents", "->", "True"}]}], "]"}], "//", 
          "Quiet"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.935476570530147*^9, 3.935476609985512*^9}, {
  3.9354766941850142`*^9, 3.935476700593697*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"cba66cbf-1d59-4a38-9eb3-c28a5bd46deb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ProcessBases", "[", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"startTime", ",", "endTime"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"startTime", "=", 
       RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"TBPrint", "[", 
       RowBox[{
       "\"\<\\n\\n  \!\(\*StyleBox[\"Started\",FontSize->14]\)\!\(\*StyleBox[\
\" \",FontSize->14]\)\!\(\*StyleBox[\"processing\",FontSize->14]\)\!\(\*\
StyleBox[\" \
\",FontSize->14]\)\!\(\*StyleBox[\"of\",FontSize->14]\)\!\(\*StyleBox[\" \
\",FontSize->14]\)\!\(\*StyleBox[\"bases\",FontSize->14]\)\!\(\*StyleBox[\".\"\
,FontSize->14]\)\>\"", ",", "1"}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "Global`TBBasisList", "]"}], "===", "List"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"basisDefinitionFiles", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"FileNames", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ToString", "[", "#", "]"}], "~~", "\"\<.m\>\""}], 
               ",", 
               RowBox[{"TBDirectory", "~~", "\"\<bases/\>\""}]}], "]"}], 
             "&"}], ",", "Global`TBBasisList"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"basisDefinitionFiles", "=", 
         RowBox[{"FileNames", "[", 
          RowBox[{
           RowBox[{"__", "~~", "\"\<.m\>\""}], ",", 
           RowBox[{"TBDirectory", "~~", "\"\<bases/\>\""}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"TBPrint", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Processing files: \>\"", ",", 
          RowBox[{"TableForm", "[", "basisDefinitionFiles", "]"}]}], "}"}], 
        ",", "1"}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      
      RowBox[{"TBAvailableBasisNames", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"TBBasisDocs", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Unprotect", "[", 
       RowBox[{
       "TBGetBasisElement", ",", "TBGetMetric", ",", "TBGetInverseMetric", 
        ",", "TBGetProjector", ",", "TBInfo", ",", "TBGetVertex", ",", 
        "TBGetInnerProduct", ",", "TBGetCanonicalProduct"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ClearCache", "/@", "basisDefinitionFiles"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"TBAutoDefineBasis", "/@", "basisDefinitionFiles"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Protect", "[", 
       RowBox[{
       "TBGetBasisElement", ",", "TBGetMetric", ",", "TBGetInverseMetric", 
        ",", "TBGetProjector", ",", "TBInfo", ",", "TBGetVertex", ",", 
        "TBGetInnerProduct", ",", "TBGetCanonicalProduct"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"endTime", "=", 
       RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"TBPrint", "[", 
       RowBox[{"\"\<\\n-------------------------------\\n\>\"", ",", "1"}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TBPrint", "[", 
        RowBox[{
         RowBox[{
         "\"\<  \!\(\*StyleBox[\"Basis\",FontSize->14]\)\!\(\*StyleBox[\" \
\",FontSize->14]\)\!\(\*StyleBox[\"processing\",FontSize->14]\)\!\(\*StyleBox[\
\" \",FontSize->14]\)finished after \>\"", "~~", 
          RowBox[{"ToString", "[", 
           RowBox[{"Round", "[", 
            FractionBox[
             RowBox[{"endTime", "-", "startTime"}], "60"], "]"}], "]"}], 
          "~~", "\"\<min\!\(\*StyleBox[\".\",FontSize->14]\)\>\""}], ",", 
         "1"}], "]"}], "\[IndentingNewLine]", 
       RowBox[{"TBPrint", "[", 
        RowBox[{"\"\<\>\"", ",", "1"}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.933940315051129*^9, 3.933940397991638*^9}, {
   3.9339405680437183`*^9, 3.93394057426978*^9}, {3.933940619804352*^9, 
   3.933940644171417*^9}, {3.933940713251175*^9, 3.933940714680614*^9}, {
   3.934087776585174*^9, 3.934087868779227*^9}, {3.934348151660913*^9, 
   3.9343481542801323`*^9}, 3.93547656879394*^9, {3.935476624329867*^9, 
   3.93547662658576*^9}, {3.935476710201949*^9, 3.935476711113432*^9}, 
   3.935844139441034*^9, {3.9411776886761093`*^9, 3.941177712195971*^9}, {
   3.969347618437463*^9, 
   3.969347618904976*^9}},ExpressionUUID->"516650ad-94d7-4c45-86f1-\
a468f0befd43"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Global`TBSkipBaseProcessing", "=!=", "True"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ProcessBases", "[", "]"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.933940401217484*^9, 3.933940422437884*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"4bd30e8a-e2ca-4156-95a1-a802bc6392e7"],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\!\\(\\*StyleBox[\\\"Group\\\",FontSize->10]\\)\\!\\(\\*\
StyleBox[\\\" \
\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\"with\\\",FontSize->10]\\)\\!\\(\\*\
StyleBox[\\\" \
\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\"name\\\",FontSize->10]\\)\\!\\(\\*\
StyleBox[\\\" \
\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\"color\\\",FontSize->10,FontColor->\
RGBColor[0.5, 0, 0.5]]\\)\\!\\(\\*StyleBox[\\\" \
\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\"undefined\\\",FontSize->10]\\)\\!\\\
(\\*StyleBox[\\\",\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\" \
\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\"using\\\",FontSize->10]\\)\\!\\(\\*\
StyleBox[\\\" \
\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\"default\\\",FontSize->10]\\)\\!\\(\
\\*StyleBox[\\\" \
\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\"names\\\",FontSize->10]\\)\\!\\(\\*\
StyleBox[\\\".\\\",FontSize->10]\\)\"\>"], "Print",
 CellChangeTimes->{3.941524047953485*^9},
 CellLabel->
  "During evaluation of \
In[205]:=",ExpressionUUID->"0acca0b3-8454-42cd-b9bf-6763330b40df"],

Cell[BoxData["\<\"\\!\\(\\*StyleBox[\\\"Group\\\",FontSize->10]\\)\\!\\(\\*\
StyleBox[\\\" \
\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\"with\\\",FontSize->10]\\)\\!\\(\\*\
StyleBox[\\\" \
\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\"name\\\",FontSize->10]\\)\\!\\(\\*\
StyleBox[\\\" \
\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\"flavor\\\",FontSize->10,FontColor->\
RGBColor[0.5, 0, 0.5]]\\)\\!\\(\\*StyleBox[\\\" \
\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\"undefined\\\",FontSize->10]\\)\\!\\\
(\\*StyleBox[\\\",\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\" \
\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\"using\\\",FontSize->10]\\)\\!\\(\\*\
StyleBox[\\\" \
\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\"default\\\",FontSize->10]\\)\\!\\(\
\\*StyleBox[\\\" \
\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\"names\\\",FontSize->10]\\)\\!\\(\\*\
StyleBox[\\\".\\\",FontSize->10]\\)\"\>"], "Print",
 CellChangeTimes->{3.941524048082008*^9},
 CellLabel->
  "During evaluation of \
In[205]:=",ExpressionUUID->"6dad3b0e-87b1-4cd2-8f15-e8f9e0eea03c"]
}, Open  ]],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.941524048597191*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"62c49d00-1308-4327-9f61-1fa94e6a1750"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Constructing and getting other things from Bases", "Chapter",
 CellChangeTimes->{{3.935567816913097*^9, 3.93556783378259*^9}, {
  3.9507839353582697`*^9, 3.950783945243785*^9}, {3.950783997068142*^9, 
  3.9507839992158403`*^9}},ExpressionUUID->"34a6e352-6706-4c26-a9dc-\
a4f7001cae32"],

Cell[CellGroupData[{

Cell["Basis Transformations", "Section",
 CellChangeTimes->{{3.969414762856432*^9, 
  3.969414768803349*^9}},ExpressionUUID->"8f688e9a-3910-494a-a87f-\
f2f844618e52"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBBasisTransformation", "::", "vertex"}], "=", 
    "\"\<Either the basis \\\"`1`\\\" or \\\"`2`\\\" is a pure vertex basis. \
Cannot infer the basis elements from the vertices!\>\""}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBBasisTransformation", "[", 
    RowBox[{"BasisName1_String", ",", "BasisName2_String"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"isVertex", "=", 
        RowBox[{
         RowBox[{"TBVertexBasis", "[", "BasisName1", "]"}], "||", 
         RowBox[{"TBVertexBasis", "[", "BasisName1", "]"}]}]}], ",", 
       "\[IndentingNewLine]", "cProd", ",", "cProd1", ",", "cMetric12", ",", 
       "cMetric11", ",", "cMetric11Inv", ",", "momentumConservation"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "\[IndentingNewLine]", "   ", 
      RowBox[{
       RowBox[{
        RowBox[{
        "The", " ", "projection", " ", "operator", " ", "to", " ", "get", " ", 
         SubscriptBox["b", "i"], " ", "from", " ", "a", " ", "vector", " ", 
         TemplateBox[{"v"},
          "Ket"]}], "=", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", "i"], 
         SubscriptBox["b", "i"], 
         TemplateBox[{"i"},
          "Ket"], " ", "reads", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           TemplateBox[{
             RowBox[{"i", "'"}], "i"},
            "BraKet"], ")"}], 
          RowBox[{"-", "1"}]], 
         RowBox[{
          TemplateBox[{
            RowBox[{"i", "'"}]},
           "Bra"], ".", "\[IndentingNewLine]", "Accordingly"}]}]}], ",", " ", 
       
       RowBox[{
        RowBox[{"to", " ", "get", " ", 
         SubscriptBox["b", "i"], " ", "from", " ", 
         TemplateBox[{"v"},
          "Ket"]}], "=", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[CapitalSigma]", "i"], 
          SubscriptBox["b", "i"], 
          TemplateBox[{"i"},
           "Ket"]}], "=", 
         RowBox[{
          SubscriptBox["\[CapitalSigma]", "a"], 
          SubscriptBox["c", "a"], 
          TemplateBox[{"a"},
           "Ket"]}]}]}], ",", " ", 
       RowBox[{
       "if", " ", "given", " ", "the", " ", "representation", " ", "in", " ", 
        "terms", " ", "of", " ", 
        SubscriptBox["c", "a"]}], ",", " ", 
       RowBox[{
        RowBox[{
        "the", " ", "transformation", " ", "matrix", " ", "reads", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           TemplateBox[{
             RowBox[{"i", "'"}], "i"},
            "BraKet"], ")"}], 
          RowBox[{"-", "1"}]], 
         TemplateBox[{
           RowBox[{"i", "'"}], "a"},
          "BraKet"]}], " ", "=", " ", 
        RowBox[{"cMetric11Inv", ".", "cMetric12"}]}], ",", " ", 
       RowBox[{"as", " ", "calculated", " ", 
        RowBox[{"below", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"isVertex", ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"TBBasisTransformation", "::", "vertex"}], ",", 
           "BasisName1", ",", "BasisName2"}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"cProd", "=", 
       RowBox[{"TBMakeCanonicalProduct", "[", 
        RowBox[{"BasisName1", ",", "BasisName2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cProd1", "=", 
       RowBox[{"TBMakeCanonicalProduct", "[", 
        RowBox[{"BasisName1", ",", "BasisName1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"momentumConservation", "=", 
       RowBox[{"InsertOutputNaming", "[", 
        RowBox[{"TBMomentumConservation", "[", "BasisName1", "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"cMetric12", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"cProd", "[", 
            RowBox[{
            "TBGetBasisElement", ",", "i", ",", "TBGetBasisElement", ",", 
             "j"}], "]"}], ")"}], "//.", "momentumConservation"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"TBGetBasisSize", "[", "BasisName1", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"TBGetBasisSize", "[", "BasisName2", "]"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cMetric12", "=", 
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{"Global`UseLorentzLinearity", "[", 
            RowBox[{"TBFormTrace", "[", "#", "]"}], "]"}], "]"}], "&"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "cMetric12", ",", 
         
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"cMetric11", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"cProd1", "[", 
            RowBox[{
            "TBGetBasisElement", ",", "i", ",", "TBGetBasisElement", ",", 
             "j"}], "]"}], ")"}], "//.", "momentumConservation"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"TBGetBasisSize", "[", "BasisName1", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"TBGetBasisSize", "[", "BasisName1", "]"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cMetric11", "=", 
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{"Global`UseLorentzLinearity", "[", 
            RowBox[{"Simplify", "[", 
             RowBox[{"TBFormTrace", "[", "#", "]"}], "]"}], "]"}], "]"}], 
          "&"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         "cMetric11", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cMetric11Inv", "=", 
       RowBox[{"Inverse", "[", "cMetric11", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{"Simplify", ",", 
        RowBox[{"cMetric11Inv", ".", "cMetric12"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBVertexTransformation", "[", 
    RowBox[{"BasisName1_String", ",", "BasisName2_String"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cProd", ",", "cProd1", ",", "cMetric12", ",", "cMetric11", ",", 
       "cMetric11Inv", ",", "momentumConservation"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "\[IndentingNewLine]", "   ", 
      RowBox[{
       RowBox[{
        RowBox[{
        "The", " ", "projection", " ", "operator", " ", "to", " ", "get", " ", 
         SubscriptBox["b", "i"], " ", "from", " ", "a", " ", "vector", " ", 
         TemplateBox[{"v"},
          "Ket"]}], "=", 
        RowBox[{
         SubscriptBox["\[CapitalSigma]", "i"], 
         SubscriptBox["b", "i"], 
         TemplateBox[{"i"},
          "Ket"], " ", "reads", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           TemplateBox[{
             RowBox[{"i", "'"}], "i"},
            "BraKet"], ")"}], 
          RowBox[{"-", "1"}]], 
         RowBox[{
          TemplateBox[{
            RowBox[{"i", "'"}]},
           "Bra"], ".", "\[IndentingNewLine]", "Accordingly"}]}]}], ",", " ", 
       
       RowBox[{
        RowBox[{"to", " ", "get", " ", 
         SubscriptBox["b", "i"], " ", "from", " ", 
         TemplateBox[{"v"},
          "Ket"]}], "=", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[CapitalSigma]", "i"], 
          SubscriptBox["b", "i"], 
          TemplateBox[{"i"},
           "Ket"]}], "=", 
         RowBox[{
          SubscriptBox["\[CapitalSigma]", "a"], 
          SubscriptBox["c", "a"], 
          TemplateBox[{"a"},
           "Ket"]}]}]}], ",", " ", 
       RowBox[{
       "if", " ", "given", " ", "the", " ", "representation", " ", "in", " ", 
        "terms", " ", "of", " ", 
        SubscriptBox["c", "a"]}], ",", " ", 
       RowBox[{
        RowBox[{
        "the", " ", "transformation", " ", "matrix", " ", "reads", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           TemplateBox[{
             RowBox[{"i", "'"}], "i"},
            "BraKet"], ")"}], 
          RowBox[{"-", "1"}]], 
         TemplateBox[{
           RowBox[{"i", "'"}], "a"},
          "BraKet"]}], " ", "=", " ", 
        RowBox[{"cMetric11Inv", ".", "cMetric12"}]}], ",", " ", 
       RowBox[{"as", " ", "calculated", " ", 
        RowBox[{"below", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cProd", "=", 
       RowBox[{"TBMakeCanonicalProduct", "[", 
        RowBox[{"BasisName1", ",", "BasisName2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cProd1", "=", 
       RowBox[{"TBMakeCanonicalProduct", "[", 
        RowBox[{"BasisName1", ",", "BasisName1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"momentumConservation", "=", 
       RowBox[{"InsertOutputNaming", "[", 
        RowBox[{"TBMomentumConservation", "[", "BasisName1", "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"cMetric12", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"cProd", "[", 
            RowBox[{"TBGetVertex", ",", "i", ",", "TBGetVertex", ",", "j"}], 
            "]"}], ")"}], "//.", "momentumConservation"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"TBGetBasisSize", "[", "BasisName1", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"TBGetBasisSize", "[", "BasisName2", "]"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"cMetric12", "=", 
       RowBox[{"ParallelMap", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{"Global`UseLorentzLinearity", "[", 
            RowBox[{"TBFormTrace", "[", "#", "]"}], "]"}], "]"}], "&"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "cMetric12", ",", 
         
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"cMetric11", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"cProd1", "[", 
            RowBox[{"TBGetVertex", ",", "i", ",", "TBGetVertex", ",", "j"}], 
            "]"}], ")"}], "//.", "momentumConservation"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"TBGetBasisSize", "[", "BasisName1", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"TBGetBasisSize", "[", "BasisName1", "]"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cMetric11", "=", 
       RowBox[{"ParallelMap", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{"Global`UseLorentzLinearity", "[", 
            RowBox[{"TBFormTrace", "[", "#", "]"}], "]"}], "]"}], "&"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "cMetric11", ",", 
         
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cMetric11Inv", "=", 
       RowBox[{"Inverse", "[", "cMetric11", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{"Simplify", ",", 
        RowBox[{"cMetric11Inv", ".", "cMetric12"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.969414778421459*^9, 3.96941478738867*^9}, {
   3.969415569725296*^9, 3.969415574581581*^9}, {3.969415638066874*^9, 
   3.969415663530004*^9}, {3.969415694681038*^9, 3.9694157133993273`*^9}, {
   3.969415788286725*^9, 3.969415797205681*^9}, {3.969416039661626*^9, 
   3.969416042957592*^9}, {3.969416299826092*^9, 3.969416340613453*^9}, {
   3.969416378482131*^9, 3.969416379917164*^9}, {3.969416439269486*^9, 
   3.969416446553492*^9}, 3.9694164916621923`*^9, {3.96941655025032*^9, 
   3.9694165599103947`*^9}},ExpressionUUID->"0ec9bdae-e9ab-45ab-9804-\
e4f709e96573"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tools", "Section",
 CellChangeTimes->{{3.9507839194050283`*^9, 3.950783930253127*^9}, {
  3.950783993296248*^9, 
  3.9507840076444197`*^9}},ExpressionUUID->"371e5165-5789-4a54-b8ed-\
1ad9279324ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBGetIdentityMatrix", "[", "BasisName_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "@", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"TBAvailableBasisNames", ",", "BasisName"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Unknown Basis \\\"\>\"", "~~", "BasisName", "~~", 
           "\"\<\\\"!\>\""}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"TBGetIdentityMatrix", "[", 
           RowBox[{"BasisName", ",", "##"}], "]"}], "&"}], ")"}], "@@", 
        RowBox[{"TBInternal", "[", 
         RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.950776505385805*^9, 
  3.950776543497945*^9}},ExpressionUUID->"c295db63-b755-42d4-905e-\
1f60bd136daf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TBGetIndexSet", "[", 
    RowBox[{"BasisName_String", ",", "id_Integer", ",", "p_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "indices", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "@", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"TBAvailableBasisNames", ",", "BasisName"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Unknown Basis \\\"\>\"", "~~", "BasisName", "~~", 
           "\"\<\\\"!\>\""}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"id", ">", 
         RowBox[{"Length", "[", 
          RowBox[{"TBInternal", "[", 
           RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
           RowBox[{
           "\"\<Basis \\\"\>\"", "~~", "BasisName", "~~", 
            "\"\<\\\" has only \>\"", "~~", 
            RowBox[{"ToString", "[", 
             RowBox[{"Length", "[", 
              RowBox[{"TBInternal", "[", 
               RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}], "]"}], 
             "]"}], "~~", "\"\< elements!\>\""}], ";"}], "]"}], 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"indices", "=", 
       RowBox[{
        RowBox[{"TBInternal", "[", 
         RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}], "[", 
        RowBox[{"[", "id", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\[IndentingNewLine]", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "p", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Unique", "[", 
             RowBox[{"SymbolName", "[", "#", "]"}], "]"}], "&"}], ",", 
           RowBox[{"indices", "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;"}], "]"}], "]"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBGetIndexSet", "[", 
    RowBox[{"set_List", ",", "p_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "p", "}"}], ",", 
         RowBox[{"set", "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;"}], "]"}], "]"}]}], "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.950777115727106*^9, 3.950777250417992*^9}, 
   3.950777287742092*^9, {3.950777318670321*^9, 3.950777472206792*^9}, {
   3.95079496856889*^9, 3.9507950177949266`*^9}, {3.950795115478713*^9, 
   3.95079513076735*^9}, 3.9507953137024593`*^9, {3.9507953611308804`*^9, 
   3.9507953996180353`*^9}},ExpressionUUID->"4846ddb1-8167-43f8-81b1-\
6123f63d2e77"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBGetIdentityMatrix", "[", 
    RowBox[{"BasisName_String", ",", "indices___"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "groups", ",", "diracIndices", ",", "lorentzIndices", ",", 
       "fundIndices", ",", "adjIndices", ",", "\[IndentingNewLine]", 
       "idxList", ",", "originalIndices", ",", "newIndices", ",", 
       "replacements", ",", "\[IndentingNewLine]", "chooseDelta", ",", 
       "deltas"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "@", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"TBAvailableBasisNames", ",", "BasisName"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Unknown Basis \\\"\>\"", "~~", "BasisName", "~~", 
           "\"\<\\\"!\>\""}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"TBInternal", "[", 
           RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}], "]"}], "=!=",
          "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<Can only create an identity matrix for two-point \
functions!\>\"", "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"groups", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Symbol", "[", 
           RowBox[{"SymbolName", "[", "#", "]"}], "]"}], "&"}], ",", 
         RowBox[{
          RowBox[{"TBRequiredGroups", "[", "BasisName", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"diracIndices", "=", 
       RowBox[{"FormTracer`GetOpenDiracIndices", "[", 
        RowBox[{"InsertOutputNaming", "@", 
         RowBox[{
          RowBox[{"TBInternal", "[", 
           RowBox[{"BasisName", ",", "\"\<Basis\>\""}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lorentzIndices", "=", 
       RowBox[{"FormTracer`GetOpenLorentzIndices", "[", 
        RowBox[{"InsertOutputNaming", "@", 
         RowBox[{
          RowBox[{"TBInternal", "[", 
           RowBox[{"BasisName", ",", "\"\<Basis\>\""}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fundIndices", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FormTracer`GetOpenFundGroupIndices", "[", 
           RowBox[{
            RowBox[{"InsertOutputNaming", "@", 
             RowBox[{
              RowBox[{"TBInternal", "[", 
               RowBox[{"BasisName", ",", "\"\<Basis\>\""}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", "#"}], "]"}], "&"}], ",",
          "groups"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"adjIndices", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FormTracer`GetOpenAdjGroupIndices", "[", 
           RowBox[{
            RowBox[{"InsertOutputNaming", "@", 
             RowBox[{
              RowBox[{"TBInternal", "[", 
               RowBox[{"BasisName", ",", "\"\<Basis\>\""}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", "#"}], "]"}], "&"}], ",",
          "groups"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"chooseDelta", "[", 
        RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "idx", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"diracIndices", ",", "i"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Return", "[", 
              RowBox[{"TBdeltaDirac", "[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"lorentzIndices", ",", "i"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Return", "[", 
              RowBox[{"TBdeltaLorentz", "[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"idx", "=", "1"}], ",", 
            RowBox[{"idx", "<=", 
             RowBox[{"Length", "[", "groups", "]"}]}], ",", 
            RowBox[{"idx", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{"fundIndices", "[", 
                  RowBox[{"[", "idx", "]"}], "]"}], ",", "i"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Return", "[", 
                 RowBox[{"TBdeltaFund", "[", 
                  RowBox[{
                   RowBox[{"groups", "[", 
                    RowBox[{"[", "idx", "]"}], "]"}], ",", "i", ",", "j"}], 
                  "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"idx", "=", "1"}], ",", 
            RowBox[{"idx", "<=", 
             RowBox[{"Length", "[", "groups", "]"}]}], ",", 
            RowBox[{"idx", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{"adjIndices", "[", 
                  RowBox[{"[", "idx", "]"}], "]"}], ",", "i"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Return", "[", 
                 RowBox[{"TBdeltaAdj", "[", 
                  RowBox[{
                   RowBox[{"groups", "[", 
                    RowBox[{"[", "idx", "]"}], "]"}], ",", "i", ",", "j"}], 
                  "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"originalIndices", "=", 
       RowBox[{"TBInternal", "[", 
        RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"idxList", "=", 
       RowBox[{"MakeIndexList", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"TBInternal", "[", 
           RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}], "//", 
          "Length"}], ",", "indices"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newIndices", "=", 
       RowBox[{"Flatten", "[", "idxList", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"replacements", "=", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", "originalIndices", "]"}], "->", 
         "newIndices"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"deltas", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"chooseDelta", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", "originalIndices", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Times", "@@", "deltas"}], "/.", "replacements"}], "//", 
        "InsertOutputNaming"}], "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.950774396871924*^9, 3.950774439537141*^9}, {
   3.950774522037652*^9, 3.950774596053883*^9}, {3.950774673137979*^9, 
   3.9507747240496902`*^9}, {3.950774762678657*^9, 3.9507748808001204`*^9}, {
   3.9507749153820343`*^9, 3.950774982910487*^9}, 3.9507750735120983`*^9, {
   3.950775104282672*^9, 3.950775274764222*^9}, {3.9507753085627728`*^9, 
   3.950775331382022*^9}, {3.950775395018339*^9, 3.95077562333881*^9}, {
   3.950775743026621*^9, 3.950775743278986*^9}, {3.95077584931917*^9, 
   3.95077586337458*^9}, {3.950775930104041*^9, 3.9507760983392057`*^9}, {
   3.950776549959394*^9, 3.950776559572237*^9}, {3.950776599771222*^9, 
   3.950776682317708*^9}, {3.950776751951123*^9, 3.950776829927094*^9}, 
   3.950777284566708*^9},ExpressionUUID->"9d9e432a-d4af-4dcc-9d9e-\
1c04658c33ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBGetBasisSize", "[", "BasisName_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "@", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"TBAvailableBasisNames", ",", "BasisName"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Unknown Basis \\\"\>\"", "~~", "BasisName", "~~", 
           "\"\<\\\"!\>\""}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Length", "[", 
        RowBox[{"TBInternal", "[", 
         RowBox[{"BasisName", ",", "\"\<Vertices\>\""}], "]"}], "]"}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.950777972630578*^9, 3.9507780129311132`*^9}, {
  3.952939277029456*^9, 
  3.95293927868935*^9}},ExpressionUUID->"e68c39a2-a812-43a3-91aa-\
78fdedec2843"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBGetBasisFields", "[", "BasisName_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "@", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"TBAvailableBasisNames", ",", "BasisName"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Unknown Basis \\\"\>\"", "~~", "BasisName", "~~", 
           "\"\<\\\"!\>\""}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"InsertOutputNaming", "@", 
        RowBox[{"TBVertex", "[", "BasisName", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.950777972630578*^9, 3.9507780129311132`*^9}, {
  3.952939277029456*^9, 3.95293927868935*^9}, {3.952953578467094*^9, 
  3.952953578922751*^9}, {3.9529571050445213`*^9, 3.9529571075918217`*^9}, {
  3.952957164024314*^9, 
  3.952957168836329*^9}},ExpressionUUID->"9bc022fa-0a10-4835-b882-\
4bc39407c56a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Internal Tools", "Section",
 CellChangeTimes->{{3.9507839194050283`*^9, 3.950783930253127*^9}, {
  3.950783993296248*^9, 
  3.9507839944088097`*^9}},ExpressionUUID->"84d986be-8d17-4863-a617-\
8340b33ff44f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"exclusions", "[", "a_", "]"}], ":=", 
  RowBox[{"And", "@@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "=!=", "List"}], ",", 
     RowBox[{"a", "=!=", "Complex"}], ",", 
     RowBox[{"a", "=!=", "Plus"}], ",", 
     RowBox[{"a", "=!=", "Power"}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetAllSymbols", "[", "expr_", "]"}], ":=", 
  RowBox[{"DeleteDuplicates", "@", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "expr", "}"}], "//.", 
        RowBox[{
         RowBox[{"Times", "[", 
          RowBox[{"a_", ",", "b__"}], "]"}], ":>", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b"}], "}"}]}]}], "/.", 
       RowBox[{
        RowBox[{
         RowBox[{"a_Symbol", "[", "b__", "]"}], "/;", 
         RowBox[{"exclusions", "[", "a", "]"}]}], ":>", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}]}]}], "]"}], ",", "_Symbol", ",", 
     "Infinity"}], "]"}]}]}]}], "Input",ExpressionUUID->"d665743c-fc53-4c25-\
a3dd-abde9a533ea6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetIdentityVector", "[", 
    RowBox[{"BasisName_", ",", "p_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"idxSet1", ",", "idxSet2"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"idxSet1", "=", 
       RowBox[{"TBGetIndexSet", "[", 
        RowBox[{"BasisName", ",", "1", ",", "p"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"idxSet2", "=", 
       RowBox[{"TBGetIndexSet", "[", 
        RowBox[{"BasisName", ",", "1", ",", "p"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"TBFormTrace", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"TBGetProjector", "[", 
             RowBox[{"BasisName", ",", "i", ",", "idxSet2", ",", "idxSet1"}], 
             "]"}], 
            RowBox[{"TBGetIdentityMatrix", "[", 
             RowBox[{"BasisName", ",", "idxSet1", ",", "idxSet2"}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], "//", "FullSimplify"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"TBGetBasisSize", "[", "BasisName", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], "//", "Return"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9507749916271267`*^9, 3.950775008342486*^9}, {
   3.950775085893941*^9, 3.950775086303728*^9}, 3.950775958780498*^9, {
   3.950776104566078*^9, 3.950776118586149*^9}, {3.950776349911921*^9, 
   3.950776355161703*^9}, 3.950776449951745*^9, {3.95077673493125*^9, 
   3.950776736878182*^9}, {3.95077683767047*^9, 3.950776857686722*^9}, {
   3.950777753279141*^9, 3.9507779112903967`*^9}, {3.950778032863203*^9, 
   3.950778082171165*^9}, {3.950778150295116*^9, 3.950778172200365*^9}, {
   3.950778216726842*^9, 3.950778254756425*^9}, 3.950779344435216*^9, 
   3.95078483105651*^9, {3.950795039512265*^9, 3.9507950406053457`*^9}, {
   3.965463717191639*^9, 
   3.9654637177994347`*^9}},ExpressionUUID->"5e78e10f-4d64-4a4e-bbb8-\
8b3d20131c47"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get propagators", "Section",
 CellChangeTimes->{{3.9507839194050283`*^9, 
  3.9507839544159317`*^9}},ExpressionUUID->"01de564e-e77c-4793-b30b-\
519a41b90f3e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TBGetBasis", "[", "BasisName_String", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Return", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"TBGetBasis", "[", 
           RowBox[{"BasisName", ",", "##"}], "]"}], "&"}], "@@", 
         RowBox[{"TBInternal", "[", 
          RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBGetBasis", "[", 
    RowBox[{"BasisName_String", ",", "indices___"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "idxList", ",", "originalIndices", ",", "newIndices", ",", 
       "replacements", ",", "\[IndentingNewLine]", "rawBasis", ",", 
       "fixIndices"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"fixIndices", "[", "expr_", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"closedIndices", ",", "IndexReplacements"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"closedIndices", "=", 
           RowBox[{"FormTracer`GetClosedIndices", "[", 
            RowBox[{"InsertOutputNaming", "@", "expr"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"IndexReplacements", ":=", 
           RowBox[{"Thread", "[", 
            RowBox[{"closedIndices", "->", 
             RowBox[{"Map", "[", 
              RowBox[{"TBUnique", ",", "closedIndices"}], "]"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"expr", "//.", "IndexReplacements"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"originalIndices", "=", 
       RowBox[{"TBInternal", "[", 
        RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"idxList", "=", 
       RowBox[{"MakeIndexList", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"TBInternal", "[", 
           RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}], "//", 
          "Length"}], ",", "indices"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newIndices", "=", 
       RowBox[{"Flatten", "[", "idxList", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"replacements", "=", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", "originalIndices", "]"}], "->", 
         "newIndices"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"rawBasis", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"fixIndices", ",", 
         RowBox[{"InsertOutputNaming", "@", 
          RowBox[{"TBInternal", "[", 
           RowBox[{"BasisName", ",", "\"\<Basis\>\""}], "]"}]}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"rawBasis", "//.", "replacements"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.950794445798915*^9, 3.950794575269693*^9}, {
   3.950794824481023*^9, 3.950794865785471*^9}, 
   3.950794903941427*^9},ExpressionUUID->"dcbb158f-daa3-4447-b3fa-\
de02c92ce373"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TBMakePropagator", "[", 
    RowBox[{"BasisName_String", ",", "InvProp_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "idxSet1", ",", "idxSet2", ",", "idxSet3", ",", "invPropR", ",", 
       "\[IndentingNewLine]", "Prop", ",", "T2", ",", "T3", ",", 
       "\[IndentingNewLine]", "projections", ",", "idvec", ",", "identities", 
       ",", "solution", ",", "\[IndentingNewLine]", "makeList", ",", "b", ",",
        "A", ",", "p"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p", "=", 
       RowBox[{
        RowBox[{"TBInternal", "[", 
         RowBox[{"BasisName", ",", "\"\<Indices\>\""}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"idxSet1", "=", 
       RowBox[{"TBGetIndexSet", "[", 
        RowBox[{"BasisName", ",", "1", ",", "p"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"idxSet2", "=", 
       RowBox[{"TBGetIndexSet", "[", 
        RowBox[{"BasisName", ",", "1", ",", "p"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"idxSet3", "=", 
       RowBox[{"TBGetIndexSet", "[", 
        RowBox[{"BasisName", ",", "1", ",", "p"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"invPropR", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Unique", "[", "\"\<a\>\"", "]"}], "&"}], ",", "InvProp"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Prop", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Unique", "[", 
          RowBox[{"\"\<v\>\"", "<>", 
           RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"TBGetBasisSize", "[", "BasisName", "]"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"FormTracer`AddExtraVars", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"GetAllSymbols", "[", "Prop", "]"}], "\[Union]", 
         RowBox[{"GetAllSymbols", "[", "invPropR", "]"}]}], ")"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"T2", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"TBGetVertex", "[", 
          RowBox[{"BasisName", ",", "i", ",", 
           RowBox[{"{", 
            RowBox[{"p", ",", 
             RowBox[{"idxSet2", "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "p"}], ",", 
             RowBox[{"idxSet3", "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"TBGetBasisSize", "[", "BasisName", "]"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"T3", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"TBGetVertex", "[", 
          RowBox[{"BasisName", ",", "i", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "p"}], ",", 
             RowBox[{"idxSet3", "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"p", ",", 
             RowBox[{"idxSet1", "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"TBGetBasisSize", "[", "BasisName", "]"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"idvec", "=", 
       RowBox[{"GetIdentityVector", "[", 
        RowBox[{"BasisName", ",", "p"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"projections", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"TBFormTrace", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"TBGetProjector", "[", 
              RowBox[{"BasisName", ",", "i", ",", 
               RowBox[{"{", 
                RowBox[{"p", ",", 
                 RowBox[{"idxSet1", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ";;"}], "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "p"}], ",", 
                 RowBox[{"idxSet2", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ";;"}], "]"}], "]"}]}], "}"}]}], "]"}], 
             RowBox[{"(", 
              RowBox[{"Prop", ".", "T2"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"invPropR", ".", "T3"}], ")"}]}], "//", 
            "InsertInputNaming"}], "\[IndentingNewLine]", "]"}], "//", 
          "FullSimplify"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"TBGetBasisSize", "[", "BasisName", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"makeList", "[", "expr_", "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "expr", "]"}], "===", "Plus"}], ",", 
         RowBox[{"List", "@@", "expr"}], ",", 
         RowBox[{"{", "expr", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"identities", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "==", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "&"}], ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"projections", ",", "idvec"}], "}"}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"b", ",", "A"}], "}"}], "=", 
       RowBox[{"CoefficientArrays", "[", 
        RowBox[{"identities", ",", "Prop"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"solution", "=", 
       RowBox[{"LinearSolve", "[", 
        RowBox[{"A", ",", 
         RowBox[{"-", "b"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"solution", "/.", 
        RowBox[{"Thread", "[", 
         RowBox[{"invPropR", "->", "InvProp"}], "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9507690873981*^9, 3.950769103396866*^9}, {
   3.950769150533229*^9, 3.950769186773878*^9}, {3.95076922285434*^9, 
   3.950769280205647*^9}, {3.950769376741515*^9, 3.950769422892254*^9}, {
   3.950778486556282*^9, 3.9507784874575253`*^9}, {3.950778567371345*^9, 
   3.950778674322752*^9}, {3.9507787750111103`*^9, 3.9507788633380404`*^9}, {
   3.95077894151363*^9, 3.950779014628113*^9}, {3.950779173764791*^9, 
   3.950779267527341*^9}, {3.950779303808517*^9, 3.95077940996703*^9}, {
   3.950779443030478*^9, 3.950779444890649*^9}, {3.950779751579962*^9, 
   3.950779761487961*^9}, {3.95077979508547*^9, 3.9507798396907*^9}, {
   3.950779879529351*^9, 3.9507799683511753`*^9}, {3.9507800340207357`*^9, 
   3.9507801514753847`*^9}, {3.950781086861175*^9, 3.950781147860174*^9}, {
   3.950781208717319*^9, 3.9507812192919083`*^9}, {3.950781432807075*^9, 
   3.950781453815688*^9}, {3.9507821384020243`*^9, 3.9507821398969173`*^9}, 
   3.95078391747677*^9, {3.950783956741308*^9, 3.9507839629886312`*^9}, 
   3.950784042481247*^9, {3.9507843684319363`*^9, 3.950784368780987*^9}, {
   3.950784406733212*^9, 3.95078442418952*^9}, {3.9507844655981913`*^9, 
   3.95078450100171*^9}, {3.950784566365324*^9, 3.9507845685460577`*^9}, {
   3.950784608118186*^9, 3.950784656924321*^9}, 3.950784723245554*^9, 
   3.950784806854479*^9, {3.950784918380785*^9, 3.9507849232059917`*^9}, {
   3.950784995413394*^9, 3.950785034385775*^9}, {3.9507950558583097`*^9, 
   3.950795057804902*^9}, {3.950795603042906*^9, 3.9507956252479353`*^9}, {
   3.950795678725868*^9, 3.950795694371972*^9}, {3.9507957336400223`*^9, 
   3.950795767137742*^9}, {3.953094766267345*^9, 3.95309476641129*^9}, {
   3.95309480851917*^9, 3.953094817295404*^9}, {3.9530951127113256`*^9, 
   3.95309511576392*^9}, {3.953095207943679*^9, 3.9530952115671062`*^9}, {
   3.953095344015719*^9, 3.953095370891436*^9}, {3.953096017863455*^9, 
   3.953096095394421*^9}, {3.965463734772517*^9, 
   3.965463762076936*^9}},ExpressionUUID->"038f472d-4965-4744-92f5-\
a4507f90d81b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Momentum  Transformations", "Chapter",
 CellChangeTimes->{{3.935567816913097*^9, 
  3.93556783378259*^9}},ExpressionUUID->"1e0c9b17-26f2-4dfa-9b12-\
f0fcfa71397f"],

Cell[CellGroupData[{

Cell["Information", "Section",
 CellChangeTimes->{{3.935568889657905*^9, 
  3.935568893873023*^9}},ExpressionUUID->"5e56d50d-49e6-4304-9335-\
02ae825ce1c2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "@", "TBInfo"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBInfo", "[", "\"\<Momenta\>\"", "]"}], ":=", 
   RowBox[{
   "Print", "[", 
    "\"\<Currently, the \
\!\(\*StyleBox[\"TensorBases\",FontWeight->\"Bold\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\"]\)package implements the following momentum \
transformations:\n\
\!\(\*StyleBox[\"Projections\",FontWeight->\"Bold\"]\)\!\(\*StyleBox[\":\",\
FontWeight->\"Bold\"]\)\\n\!\(\*StyleBox[\"TBProjectToSymmetricPoint\",\
FontColor->RGBColor[1, 0.5, \
0]]\),\!\(\*StyleBox[\"TBProjectToSymmetricPointSpatial\",FontColor->RGBColor[\
1, 0.5, 0]]\)\n\
\!\(\*StyleBox[\"Three\",FontWeight->\"Bold\"]\)\!\(\*StyleBox[\"-\",\
FontWeight->\"Bold\"]\)\!\(\*StyleBox[\"Point\",FontWeight->\"Bold\"]\)\!\(\*\
StyleBox[\" \
\",FontWeight->\"Bold\"]\)\!\(\*StyleBox[\"functions\",FontWeight->\"Bold\"]\)\
\!\(\*StyleBox[\":\",FontWeight->\"Bold\"]\)\\n\!\(\*StyleBox[\"\
TB3PToS0S1SPhi\",FontColor->RGBColor[1, 0.5, 0]]\), \
\!\(\*StyleBox[\"TB3PToS0S1SPhi\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[\"TB3PFromS0as\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[\"TB3PToS0as\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[\"TB3PFromS0S1SPhiQk\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[1, 0.5, \
0]]\)\!\(\*StyleBox[\"TB3PToS0S1SPhiQk\",FontColor->RGBColor[1, 0.5, 0]]\)\n\
\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "@", "TBInfo"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9355688873451777`*^9, 3.935569015001339*^9}, {
  3.935569087817604*^9, 3.9355691022977853`*^9}, {3.9358319730983152`*^9, 
  3.935832003170556*^9}, {3.941222025325467*^9, 3.9412220364528418`*^9}, {
  3.949682091602001*^9, 
  3.94968214549028*^9}},ExpressionUUID->"b9ed0595-8856-47f8-b683-\
4ccc50eab34d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symmetric  point projection", "Section",
 CellChangeTimes->{{3.935831522252043*^9, 
  3.935831538642988*^9}},ExpressionUUID->"8ffa1e1e-e9b7-4c60-a83a-\
b25d1067fe84"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TBProjectToSymmetricPoint", "[", 
   RowBox[{
   "expr_", ",", "q_Symbol", ",", "p_Symbol", ",", "momenta___Symbol"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "momentaList", ",", "nMomenta", ",", "rules", ",", "qf", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"conv", "=", "InsertOutputNaming"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"momentaList", "=", 
      RowBox[{"{", "momenta", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nMomenta", "=", 
      RowBox[{"Length", "[", "momentaList", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"qf", "=", 
      RowBox[{"Symbol", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "q", "]"}], "<>", "\"\<f\>\""}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"rules", "=", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"conv", "@", 
            RowBox[{"TBsp", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "->", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"nMomenta", "-", "1"}], ")"}]}], ")"}]}], 
            RowBox[{"conv", "@", 
             RowBox[{"TBsp", "[", 
              RowBox[{"p", ",", "p"}], "]"}]}]}]}], "&"}], ",", 
         RowBox[{"Subsets", "[", 
          RowBox[{"momentaList", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
       "\[Union]", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"conv", "@", 
            RowBox[{"TBsp", "[", 
             RowBox[{"#", ",", "#"}], "]"}]}], "->", 
           RowBox[{"conv", "@", 
            RowBox[{"TBsp", "[", 
             RowBox[{"p", ",", "p"}], "]"}]}]}], "&"}], ",", "momentaList"}], 
        "]"}], "\[IndentingNewLine]", "\[Union]", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"conv", "@", 
            RowBox[{"TBsp", "[", 
             RowBox[{"#", ",", "q"}], "]"}]}], "->", 
           RowBox[{
            RowBox[{"Symbol", "[", 
             RowBox[{"\"\<cos\>\"", "~~", 
              RowBox[{"StringJoin", "@", 
               RowBox[{"(", 
                RowBox[{"ToString", "/@", 
                 RowBox[{"Sort", "[", 
                  RowBox[{"{", 
                   RowBox[{"#", ",", "q"}], "}"}], "]"}]}], ")"}]}]}], "]"}], 
            " ", "p", " ", "q"}]}], "&"}], ",", 
         RowBox[{"momentaList", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", 
            RowBox[{"nMomenta", "-", "1"}]}], "]"}], "]"}]}], "]"}], 
       "\[IndentingNewLine]", "\[Union]", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"conv", "@", 
            RowBox[{"TBsp", "[", 
             RowBox[{"#", ",", "qf"}], "]"}]}], "->", 
           RowBox[{
            RowBox[{"Symbol", "[", 
             RowBox[{"\"\<cos\>\"", "~~", 
              RowBox[{"StringJoin", "@", 
               RowBox[{"(", 
                RowBox[{"ToString", "/@", 
                 RowBox[{"Sort", "[", 
                  RowBox[{"{", 
                   RowBox[{"#", ",", "qf"}], "}"}], "]"}]}], ")"}]}]}], "]"}],
             " ", "p", " ", "qf"}]}], "&"}], ",", 
         RowBox[{"momentaList", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", 
            RowBox[{"nMomenta", "-", "1"}]}], "]"}], "]"}]}], "]"}], 
       "\[IndentingNewLine]", "\[Union]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"momentaList", "[", 
          RowBox[{"[", "nMomenta", "]"}], "]"}], "->", 
         RowBox[{"-", 
          RowBox[{"Total", "[", 
           RowBox[{"momentaList", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", 
              RowBox[{"nMomenta", "-", "1"}]}], "]"}], "]"}], "]"}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Global`UseLorentzLinearity", "[", "expr", "]"}], "//.", 
      "rules"}]}]}], "\n", "]"}]}]], "Input",
 CellChangeTimes->{{3.916559442541823*^9, 3.9165594451789*^9}, {
   3.926573415046593*^9, 3.926573470871396*^9}, {3.933302352394223*^9, 
   3.933302352562035*^9}, {3.935553339208991*^9, 3.93555335908197*^9}, 
   3.93555832561948*^9, {3.9358317618438883`*^9, 3.9358319308754263`*^9}, 
   3.9358319664299793`*^9, {3.9358320111553507`*^9, 3.935832014178755*^9}, 
   3.935832100387535*^9},
 CellLabel->
  "In[210]:=",ExpressionUUID->"552fd81a-00e9-4406-bd7b-53eaf56cdea5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"separateScalarProductsSpatial", "[", "expr_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"conv", "=", "InsertOutputNaming"}], ",", "repl"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"repl", "=", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", 
           RowBox[{"conv", "[", 
            RowBox[{"TBsp", "[", 
             RowBox[{"a", ",", "b"}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"q_", ",", "p_"}], "]"}], ":>", 
         RowBox[{"conv", "[", 
          RowBox[{
           RowBox[{"TBsps", "[", 
            RowBox[{"q", ",", "p"}], "]"}], "+", 
           RowBox[{
            RowBox[{"TBvec", "[", 
             RowBox[{"q", ",", "0"}], "]"}], 
            RowBox[{"TBvec", "[", 
             RowBox[{"p", ",", "0"}], "]"}]}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", 
           RowBox[{"conv", "[", 
            RowBox[{"TBvec", "[", 
             RowBox[{"a", ",", "b"}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"p_", ",", 
           RowBox[{"mu_", "/;", 
            RowBox[{"mu", "=!=", "0"}]}]}], "]"}], ":>", 
         RowBox[{"conv", "[", 
          RowBox[{
           RowBox[{"TBvecs", "[", 
            RowBox[{"p", ",", "mu"}], "]"}], "+", 
           RowBox[{
            RowBox[{"TBdeltaLorentz", "[", 
             RowBox[{"mu", ",", "0"}], "]"}], 
            RowBox[{"TBvec", "[", 
             RowBox[{"p", ",", "0"}], "]"}]}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Global`UseLorentzLinearity", "[", "expr", "]"}], "//.", 
      "repl"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.935832080258368*^9, 3.935832081474134*^9}, 
   3.9358323803928213`*^9, {3.93583245446461*^9, 3.93583247062496*^9}, {
   3.935832633976708*^9, 3.9358327365999603`*^9}, {3.935832770887868*^9, 
   3.9358327748639593`*^9}, {3.935833093022517*^9, 3.935833111438477*^9}, {
   3.9358331544706287`*^9, 3.93583317471049*^9}, {3.935833291110214*^9, 
   3.935833344832539*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"6078d412-e4a5-4d75-91d7-f6401e2febfe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TBProjectToSymmetricPointSpatial", "[", 
   RowBox[{
   "expr_", ",", "q_Symbol", ",", "p_Symbol", ",", "momenta___Symbol"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "momentaList", ",", "nMomenta", ",", "rules", ",", "qf", ",", "out", ",",
       "\[IndentingNewLine]", 
      RowBox[{"conv", "=", "InsertOutputNaming"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"momentaList", "=", 
      RowBox[{"{", "momenta", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nMomenta", "=", 
      RowBox[{"Length", "[", "momentaList", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"qf", "=", 
      RowBox[{"Symbol", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "q", "]"}], "<>", "\"\<f\>\""}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"rules", "=", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"conv", "@", 
            RowBox[{"TBsps", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "->", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"nMomenta", "-", "1"}], ")"}]}], ")"}]}], 
            RowBox[{"conv", "@", 
             RowBox[{"TBsps", "[", 
              RowBox[{"p", ",", "p"}], "]"}]}]}]}], "&"}], ",", 
         RowBox[{"Subsets", "[", 
          RowBox[{"momentaList", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
       "\[Union]", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"conv", "@", 
            RowBox[{"TBsps", "[", 
             RowBox[{"#", ",", "#"}], "]"}]}], "->", 
           RowBox[{"conv", "@", 
            RowBox[{"TBsps", "[", 
             RowBox[{"p", ",", "p"}], "]"}]}]}], "&"}], ",", "momentaList"}], 
        "]"}], "\[IndentingNewLine]", "\[Union]", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"conv", "@", 
            RowBox[{"TBsps", "[", 
             RowBox[{"#", ",", "q"}], "]"}]}], "->", 
           RowBox[{
            RowBox[{"Symbol", "[", 
             RowBox[{"\"\<cos\>\"", "~~", 
              RowBox[{"StringJoin", "@", 
               RowBox[{"(", 
                RowBox[{"ToString", "/@", 
                 RowBox[{"Sort", "[", 
                  RowBox[{"conv", "@", 
                   RowBox[{"{", 
                    RowBox[{"#", ",", "q"}], "}"}]}], "]"}]}], ")"}]}]}], 
             "]"}], " ", "p", " ", "q"}]}], "&"}], ",", 
         RowBox[{"momentaList", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", 
            RowBox[{"nMomenta", "-", "1"}]}], "]"}], "]"}]}], "]"}], 
       "\[IndentingNewLine]", "\[Union]", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"conv", "@", 
            RowBox[{"TBsps", "[", 
             RowBox[{"#", ",", "qf"}], "]"}]}], "->", 
           RowBox[{
            RowBox[{"Symbol", "[", 
             RowBox[{"\"\<cos\>\"", "~~", 
              RowBox[{"StringJoin", "@", 
               RowBox[{"(", 
                RowBox[{"ToString", "/@", 
                 RowBox[{"Sort", "[", 
                  RowBox[{"conv", "@", 
                   RowBox[{"{", 
                    RowBox[{"#", ",", "qf"}], "}"}]}], "]"}]}], ")"}]}]}], 
             "]"}], " ", "p", " ", "qf"}]}], "&"}], ",", 
         RowBox[{"momentaList", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", 
            RowBox[{"nMomenta", "-", "1"}]}], "]"}], "]"}]}], "]"}], 
       "\[IndentingNewLine]", "\[Union]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"momentaList", "[", 
          RowBox[{"[", "nMomenta", "]"}], "]"}], "->", 
         RowBox[{"-", 
          RowBox[{"Total", "[", 
           RowBox[{"momentaList", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", 
              RowBox[{"nMomenta", "-", "1"}]}], "]"}], "]"}], "]"}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{
       RowBox[{"separateScalarProductsSpatial", "[", 
        RowBox[{"Global`UseLorentzLinearity", "[", "expr", "]"}], "]"}], "//.",
        "rules"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Global`UseLorentzLinearity", "[", "out", "]"}], "//.", 
      "rules"}]}]}], "\n", "]"}]}]], "Input",
 CellChangeTimes->{{3.916559442541823*^9, 3.9165594778406363`*^9}, {
   3.916559555130072*^9, 3.916559557510188*^9}, {3.926573482381485*^9, 
   3.926573503924843*^9}, {3.9333023556343207`*^9, 3.933302371892617*^9}, {
   3.933302412575669*^9, 3.933302414491004*^9}, 3.935553341344554*^9, {
   3.935553383736532*^9, 3.935553389248622*^9}, 3.935558331258843*^9, {
   3.93583203029974*^9, 3.93583205054732*^9}, {3.9358320917065277`*^9, 
   3.935832095451117*^9}, 3.935832312418008*^9, {3.9358325454816628`*^9, 
   3.935832572816966*^9}, {3.935832610800815*^9, 3.9358326120969343`*^9}, {
   3.935833043792164*^9, 3.935833061583391*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"a17f937c-f706-4976-8f08-42a105f6ccc9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Three - point", "Section",
 CellChangeTimes->{{3.935568182473837*^9, 3.9355681904223337`*^9}, 
   3.935831539800334*^9},ExpressionUUID->"04ef16ce-b8bd-4593-9dd9-\
7f337307e574"],

Cell[CellGroupData[{

Cell["S0 S1 SPhi", "Subsection",
 CellChangeTimes->{{3.936869460744554*^9, 
  3.936869485630905*^9}},ExpressionUUID->"171d1c15-50f3-4038-94a7-\
5c5590d84e9a"],

Cell[CellGroupData[{

Cell["p123 variant", "Subsubsection",
 CellChangeTimes->{{3.9417800946503897`*^9, 
  3.941780102593484*^9}},ExpressionUUID->"b7c07b71-68a3-4a76-94a8-\
f9a553ef4e87"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TB3PToS0S1SPhi", "[", 
    RowBox[{
    "p1_Symbol", ",", "p2_Symbol", ",", "p3_Symbol", ",", "q_Symbol", ",", 
     "S0_Symbol", ",", "S1_Symbol", ",", "SPhi_Symbol"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"change", ",", "rules", ",", 
       RowBox[{"conv", "=", "InsertOutputNaming"}], ",", 
       "\[IndentingNewLine]", "vec4", ",", "Qvec", ",", "kvec", ",", "qvec", 
       ",", "ruleqk", ",", "ruleqQ", ",", "\[IndentingNewLine]", "t", ",", 
       "xi", ",", "a", ",", "s", ",", "z", ",", "Q", ",", "k"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"System`$Assumptions", "=", 
       RowBox[{"System`$Assumptions", "&&", 
        RowBox[{"S0", ">", "0"}], "&&", 
        RowBox[{"1", ">=", "S1", ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "<", "SPhi", "<=", "\[Pi]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"vec4", "[", 
        RowBox[{
        "\[CapitalTheta]1_", ",", "\[CapitalTheta]2_", ",", "\[Phi]_"}], 
        "]"}], ":=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "\[CapitalTheta]1", "]"}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "\[CapitalTheta]1", "]"}], 
          RowBox[{"Cos", "[", "\[CapitalTheta]2", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "\[CapitalTheta]1", "]"}], 
          RowBox[{"Sin", "[", "\[CapitalTheta]2", "]"}], 
          RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "\[CapitalTheta]1", "]"}], 
          RowBox[{"Sin", "[", "\[CapitalTheta]2", "]"}], 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Qvec", "=", 
       RowBox[{
        SqrtBox[
         RowBox[{"sp", "[", 
          RowBox[{"Q", ",", "Q"}], "]"}]], 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kvec", "=", 
       RowBox[{
        SqrtBox[
         RowBox[{"sp", "[", 
          RowBox[{"k", ",", "k"}], "]"}]], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"sp", "[", 
            RowBox[{"k", ",", "Q"}], "]"}], "/", 
           RowBox[{"(", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"sp", "[", 
                RowBox[{"Q", ",", "Q"}], "]"}], 
               RowBox[{"sp", "[", 
                RowBox[{"k", ",", "k"}], "]"}]}], ")"}]}], ")"}]}], ",", 
          RowBox[{"\[Sqrt]", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"sp", "[", 
                 RowBox[{"k", ",", "Q"}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"sp", "[", 
                    RowBox[{"Q", ",", "Q"}], "]"}], 
                    RowBox[{"sp", "[", 
                    RowBox[{"k", ",", "k"}], "]"}]}], ")"}]}], ")"}]}], ")"}],
               "2"]}], ")"}]}], ",", "0", ",", "0"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"qvec", "=", 
       RowBox[{"q", " ", 
        RowBox[{"vec4", "[", 
         RowBox[{
          RowBox[{"ArcCos", "[", 
           RowBox[{"Symbol", "[", "\"\<cos1\>\"", "]"}], "]"}], ",", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"Symbol", "[", "\"\<cos2\>\"", "]"}], "]"}], ",", 
          RowBox[{"Symbol", "[", "\"\<phi\>\"", "]"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ruleqk", "=", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"kvec", ".", "qvec"}], ")"}], ",", 
         RowBox[{"Assumptions", "->", 
          RowBox[{"$Assumptions", "&&", 
           RowBox[{
            RowBox[{"-", "1"}], "<", 
            RowBox[{"Symbol", "[", "\"\<cos1\>\"", "]"}], "<=", "1"}], "&&", 
           RowBox[{
            RowBox[{"-", "1"}], "<", 
            RowBox[{"Symbol", "[", "\"\<cos2\>\"", "]"}], "<=", "1"}], "&&", 
           RowBox[{"0", "<=", 
            RowBox[{"Symbol", "[", "\"\<phi\>\"", "]"}], "<", 
            RowBox[{"2", "\[Pi]"}]}]}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ruleqQ", "=", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Qvec", ".", "qvec"}], ")"}], ",", 
         RowBox[{"Assumptions", "->", 
          RowBox[{"$Assumptions", "&&", 
           RowBox[{
            RowBox[{"-", "1"}], "<", 
            RowBox[{"Symbol", "[", "\"\<cos1\>\"", "]"}], "<=", "1"}], "&&", 
           RowBox[{
            RowBox[{"-", "1"}], "<", 
            RowBox[{"Symbol", "[", "\"\<cos2\>\"", "]"}], "<=", "1"}], "&&", 
           RowBox[{"0", "<=", 
            RowBox[{"Symbol", "[", "\"\<phi\>\"", "]"}], "<", 
            RowBox[{"2", "\[Pi]"}]}]}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"change", "[", "expr_", "]"}], ":=", 
       RowBox[{"Global`UseLorentzLinearity", "[", 
        RowBox[{"conv", "[", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"expr", "//.", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"p1", "->", "Q"}], ",", "\[IndentingNewLine]", 
             RowBox[{"p2", "->", 
              RowBox[{
               RowBox[{"-", "k"}], "-", 
               FractionBox["Q", "2"]}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"p3", "->", 
              RowBox[{"k", "-", 
               FractionBox["Q", "2"]}]}]}], "\[IndentingNewLine]", "}"}]}], 
          "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"rules", "=", 
       RowBox[{"Dispatch", "[", "\[IndentingNewLine]", 
        RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Global`UseLorentzLinearity", "[", "\[IndentingNewLine]", 
           RowBox[{"conv", "[", 
            RowBox[{"Evaluate", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"Q", ",", "Q"}], "]"}], "->", 
                  RowBox[{"4", "t"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"k", ",", "k"}], "]"}], "->", 
                  RowBox[{"3", "xi", " ", "t"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"Q", ",", "k"}], "]"}], "->", 
                  RowBox[{"2", 
                   SqrtBox["3"], 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["t", "2"], " ", "xi"}]], "z"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"k", ",", "Q"}], "]"}], "->", 
                  RowBox[{"2", 
                   SqrtBox["3"], 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["t", "2"], " ", "xi"}]], "z"}]}], ",", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"k", ",", "q"}], "]"}], "->", "ruleqk"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"q", ",", "k"}], "]"}], "->", "ruleqk"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"Q", ",", "q"}], "]"}], "->", "ruleqQ"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"q", ",", "Q"}], "]"}], "->", "ruleqQ"}]}], 
                "\[IndentingNewLine]", "}"}], "//.", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"t", "->", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"1", "-", "s"}], "4"], 
                   SuperscriptBox["S0", "2"]}]}], ",", "\[IndentingNewLine]", 
                 
                 RowBox[{"xi", "->", 
                  FractionBox[
                   RowBox[{"1", "+", "s"}], 
                   RowBox[{"1", "-", "s"}]]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"z", "->", 
                  FractionBox["a", 
                   SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["s", "2"]}]]]}]}], "\[IndentingNewLine]", 
                "}"}]}], "//.", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"a", "->", 
                 RowBox[{"S1", " ", 
                  RowBox[{"Cos", "[", "SPhi", "]"}]}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"s", "->", 
                 RowBox[{"S1", " ", 
                  RowBox[{"Sin", "[", "SPhi", "]"}]}]}]}], 
               "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], 
            "]"}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Assumptions", "->", 
           RowBox[{"System`$Assumptions", "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p1", ",", "p1"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p2", ",", "p2"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p3", ",", "p3"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{"0", "<=", "a", "<=", "1"}], "&&", 
            RowBox[{"0", "<=", "s", "<=", "1"}], "&&", 
            RowBox[{"S0", ">=", "0"}], "&&", 
            RowBox[{"1", ">=", "S1", ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "<", "SPhi", "<=", "\[Pi]"}], "&&", 
            RowBox[{"xi", ">=", "0"}]}]}]}], "\[IndentingNewLine]", "]"}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"change", "[", "#", "]"}], "//.", "rules"}], ")"}], "&"}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.935567851484016*^9, 3.935567891826725*^9}, {
   3.935567924476222*^9, 3.935568125133035*^9}, {3.935568248100608*^9, 
   3.935568253419171*^9}, {3.935568290036735*^9, 3.9355682981472807`*^9}, {
   3.935568369051241*^9, 3.935568371547052*^9}, {3.935568419763962*^9, 
   3.935568439650738*^9}, {3.935568492292036*^9, 3.93556849971489*^9}, {
   3.935568543468109*^9, 3.935568556836597*^9}, {3.935568601934041*^9, 
   3.935568617258655*^9}, {3.935568647525443*^9, 3.935568650523687*^9}, {
   3.935570237940086*^9, 3.935570241892354*^9}, {3.9355704706140223`*^9, 
   3.935570473990324*^9}, 3.935570646497664*^9, {3.93557075275231*^9, 
   3.935570764351408*^9}, {3.9355708011260633`*^9, 3.935570807910563*^9}, {
   3.935570908814569*^9, 3.935570926174837*^9}, {3.935571288134744*^9, 
   3.9355712944321203`*^9}, {3.935571335279447*^9, 3.935571340094409*^9}, {
   3.935642670583332*^9, 3.935642710138158*^9}, {3.935642795767605*^9, 
   3.935642807747527*^9}, 3.935642868069143*^9, 3.935642903063818*^9, 
   3.935643056158264*^9, {3.935643155458076*^9, 3.935643186145089*^9}, {
   3.935643236108461*^9, 3.935643288757062*^9}, {3.935643327199599*^9, 
   3.935643345519648*^9}, 3.935643381577079*^9, 3.935643757273583*^9, {
   3.935643859354795*^9, 3.935643881790259*^9}, {3.935643982721689*^9, 
   3.935643982845061*^9}, {3.935644036380038*^9, 3.935644039292553*^9}, {
   3.935859437896254*^9, 3.935859441056033*^9}, 3.935859532592021*^9, {
   3.935910827227302*^9, 3.935910838699278*^9}, {3.9359108740432863`*^9, 
   3.9359108883878307`*^9}, {3.935910918700355*^9, 3.93591094264423*^9}, {
   3.935914838724524*^9, 3.935915046828701*^9}, {3.936760049424843*^9, 
   3.9367600496682663`*^9}, {3.936760380608631*^9, 3.936760387148481*^9}, {
   3.936760472079035*^9, 3.936760474803399*^9}, 3.936773310306766*^9, {
   3.941640418611765*^9, 3.941640419751532*^9}, {3.941640467234021*^9, 
   3.941640470131373*^9}},ExpressionUUID->"78d1d83d-1db3-48fe-9d5d-\
0549bc1ca3eb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TB3PToS0S1SPhi", "[", 
    RowBox[{
    "p1_Symbol", ",", "p2_Symbol", ",", "p3_Symbol", ",", "S0_Symbol", ",", 
     "S1_Symbol", ",", "SPhi_Symbol"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"change", ",", "rules", ",", 
       RowBox[{"conv", "=", "InsertOutputNaming"}], ",", 
       "\[IndentingNewLine]", "t", ",", "xi", ",", "a", ",", "s", ",", "z", 
       ",", "Q", ",", "k"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"System`$Assumptions", "=", 
       RowBox[{"System`$Assumptions", "&&", 
        RowBox[{"S0", ">", "0"}], "&&", 
        RowBox[{"1", ">=", "S1", ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "<", "SPhi", "<=", "\[Pi]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"change", "[", "expr_", "]"}], ":=", 
       RowBox[{"Global`UseLorentzLinearity", "[", 
        RowBox[{"conv", "[", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"expr", "//.", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"p1", "->", "Q"}], ",", "\[IndentingNewLine]", 
             RowBox[{"p2", "->", 
              RowBox[{
               RowBox[{"-", "k"}], "-", 
               FractionBox["Q", "2"]}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"p3", "->", 
              RowBox[{"k", "-", 
               FractionBox["Q", "2"]}]}]}], "\[IndentingNewLine]", "}"}]}], 
          "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rules", "=", 
       RowBox[{"Dispatch", "[", "\[IndentingNewLine]", 
        RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Global`UseLorentzLinearity", "[", "\[IndentingNewLine]", 
           RowBox[{"conv", "[", 
            RowBox[{"Evaluate", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"Q", ",", "Q"}], "]"}], "->", 
                  RowBox[{"4", "t"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"k", ",", "k"}], "]"}], "->", 
                  RowBox[{"3", "xi", " ", "t"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"Q", ",", "k"}], "]"}], "->", 
                  RowBox[{"2", 
                   SqrtBox["3"], 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["t", "2"], " ", "xi"}]], "z"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"k", ",", "Q"}], "]"}], "->", 
                  RowBox[{"2", 
                   SqrtBox["3"], 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["t", "2"], " ", "xi"}]], "z"}]}]}], 
                "\[IndentingNewLine]", "}"}], "//.", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"t", "->", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"1", "-", "s"}], "4"], 
                   SuperscriptBox["S0", "2"]}]}], ",", "\[IndentingNewLine]", 
                 
                 RowBox[{"xi", "->", 
                  FractionBox[
                   RowBox[{"1", "+", "s"}], 
                   RowBox[{"1", "-", "s"}]]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"z", "->", 
                  FractionBox["a", 
                   SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["s", "2"]}]]]}]}], "\[IndentingNewLine]", 
                "}"}]}], "//.", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"a", "->", 
                 RowBox[{"S1", " ", 
                  RowBox[{"Cos", "[", "SPhi", "]"}]}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"s", "->", 
                 RowBox[{"S1", " ", 
                  RowBox[{"Sin", "[", "SPhi", "]"}]}]}]}], 
               "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], 
            "]"}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Assumptions", "->", 
           RowBox[{"System`$Assumptions", "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p1", ",", "p1"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p2", ",", "p2"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p3", ",", "p3"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{"0", "<=", "a", "<=", "1"}], "&&", 
            RowBox[{"0", "<=", "s", "<=", "1"}], "&&", 
            RowBox[{"S0", ">=", "0"}], "&&", 
            RowBox[{"1", ">=", "S1", ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "<", "SPhi", "<=", "\[Pi]"}], "&&", 
            RowBox[{"xi", ">=", "0"}]}]}]}], "\[IndentingNewLine]", "]"}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"change", "[", "#", "]"}], "//.", "rules"}], ")"}], "&"}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TB3PFromS0S1SPhi", "[", 
    RowBox[{
    "p1_Symbol", ",", "p2_Symbol", ",", "p3_Symbol", ",", "S0_Symbol", ",", 
     "S1_Symbol", ",", "SPhi_Symbol"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rules", ",", 
       RowBox[{"conv", "=", "InsertOutputNaming"}], ",", 
       "\[IndentingNewLine]", "t", ",", "xi", ",", "a", ",", "s", ",", "z", 
       ",", "Q", ",", "k"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rules", "=", 
       RowBox[{"Dispatch", "[", "\[IndentingNewLine]", 
        RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Global`UseLorentzLinearity", "[", "\[IndentingNewLine]", 
           RowBox[{"conv", "[", 
            RowBox[{"Evaluate", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"S0", "->", 
                   SqrtBox[
                    RowBox[{"2", "t", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "xi"}], ")"}]}]]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"S1", "->", 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["a", "2"], "+", 
                    SuperscriptBox["s", "2"]}]]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"SPhi", "->", 
                   RowBox[{"ArcTan", "[", 
                    RowBox[{"a", ",", "s"}], "]"}]}]}], "\[IndentingNewLine]",
                  "}"}], "//.", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"a", "->", 
                   FractionBox[
                    RowBox[{"2", 
                    SqrtBox["xi"], "z"}], 
                    RowBox[{"xi", "+", "1"}]]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"s", "->", 
                   FractionBox[
                    RowBox[{"xi", "-", "1"}], 
                    RowBox[{"xi", "+", "1"}]]}]}], "\[IndentingNewLine]", 
                 "}"}]}], "//.", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"t", "->", 
                  FractionBox[
                   RowBox[{"TBsp", "[", 
                    RowBox[{"Q", ",", "Q"}], "]"}], "4"]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"xi", "->", 
                  FractionBox[
                   RowBox[{"4", 
                    RowBox[{"TBsp", "[", 
                    RowBox[{"k", ",", "k"}], "]"}]}], 
                   RowBox[{"3", 
                    RowBox[{"TBsp", "[", 
                    RowBox[{"Q", ",", "Q"}], "]"}]}]]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"z", "->", 
                  RowBox[{
                   RowBox[{"TBsp", "[", 
                    RowBox[{"Q", ",", "k"}], "]"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"\[Sqrt]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"TBsp", "[", 
                    RowBox[{"k", ",", "k"}], "]"}], 
                    RowBox[{"TBsp", "[", 
                    RowBox[{"Q", ",", "Q"}], "]"}]}], ")"}]}], ")"}]}]}]}], 
                "\[IndentingNewLine]", "}"}]}], "//.", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Q", "->", "p1"}], ",", "\[IndentingNewLine]", 
                RowBox[{"k", "->", 
                 FractionBox[
                  RowBox[{"p3", "-", "p2"}], "2"]}]}], "\[IndentingNewLine]", 
               "}"}]}], "]"}], "]"}], "\[IndentingNewLine]", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Assumptions", "->", 
           RowBox[{"System`$Assumptions", "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p1", ",", "p1"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p2", ",", "p2"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p3", ",", "p3"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{"0", "<=", "a", "<=", "1"}], "&&", 
            RowBox[{"0", "<=", "s", "<=", "1"}], "&&", 
            RowBox[{"S0", ">=", "0"}], "&&", 
            RowBox[{"1", ">=", "S1", ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "<", "SPhi", "<=", "\[Pi]"}], "&&", 
            RowBox[{"xi", ">=", "0"}]}]}]}], "\[IndentingNewLine]", "]"}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "//.", "rules"}], ")"}], "&"}], "\[IndentingNewLine]", 
       "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.935567851484016*^9, 3.935567891826725*^9}, {
   3.935567924476222*^9, 3.935568125133035*^9}, {3.935568248100608*^9, 
   3.935568253419171*^9}, {3.935568290036735*^9, 3.9355682981472807`*^9}, {
   3.935568369051241*^9, 3.935568371547052*^9}, {3.935568419763962*^9, 
   3.935568439650738*^9}, {3.935568492292036*^9, 3.93556849971489*^9}, {
   3.935568543468109*^9, 3.935568556836597*^9}, {3.935568601934041*^9, 
   3.935568617258655*^9}, {3.935568647525443*^9, 3.935568650523687*^9}, {
   3.935570237940086*^9, 3.935570241892354*^9}, {3.9355704706140223`*^9, 
   3.935570473990324*^9}, 3.935570646497664*^9, {3.93557075275231*^9, 
   3.935570764351408*^9}, {3.9355708011260633`*^9, 3.935570807910563*^9}, {
   3.935570908814569*^9, 3.935570926174837*^9}, {3.935571288134744*^9, 
   3.9355712944321203`*^9}, {3.935571335279447*^9, 3.935571340094409*^9}, {
   3.935642670583332*^9, 3.935642710138158*^9}, {3.935642795767605*^9, 
   3.935642807747527*^9}, 3.935642868069143*^9, 3.935642903063818*^9, 
   3.935643056158264*^9, {3.935643155458076*^9, 3.935643186145089*^9}, {
   3.935643236108461*^9, 3.935643288757062*^9}, {3.935643327199599*^9, 
   3.935643345519648*^9}, 3.935643381577079*^9, 3.935643757273583*^9, {
   3.935643859354795*^9, 3.935643881790259*^9}, {3.935643982721689*^9, 
   3.935643982845061*^9}, {3.935644036380038*^9, 3.935644039292553*^9}, {
   3.935859437896254*^9, 3.935859441056033*^9}, 3.935859532592021*^9, 
   3.936760000683238*^9, {3.936760037070725*^9, 3.9367600373340397`*^9}, 
   3.9416403164031763`*^9, {3.9416403821474667`*^9, 3.941640383883491*^9}, {
   3.941640473899171*^9, 
   3.941640480263316*^9}},ExpressionUUID->"48f54286-12c9-432b-b442-\
cd476a94214d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["pq variant", "Subsubsection",
 CellChangeTimes->{{3.9417800946503897`*^9, 
  3.941780112498074*^9}},ExpressionUUID->"760961e8-a2ff-4ade-a764-\
8d04318f13d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TB3PToS0S1SPhiQk", "[", 
    RowBox[{
    "Q_Symbol", ",", "k_Symbol", ",", "q_Symbol", ",", "S0_Symbol", ",", 
     "S1_Symbol", ",", "SPhi_Symbol"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rules", ",", 
       RowBox[{"conv", "=", "InsertOutputNaming"}], ",", 
       "\[IndentingNewLine]", "vec4", ",", "Qvec", ",", "kvec", ",", "qvec", 
       ",", "ruleqk", ",", "ruleqQ", ",", "\[IndentingNewLine]", "t", ",", 
       "xi", ",", "a", ",", "s", ",", "z"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"System`$Assumptions", "=", 
       RowBox[{"System`$Assumptions", "&&", 
        RowBox[{"S0", ">", "0"}], "&&", 
        RowBox[{"1", ">=", "S1", ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "<", "SPhi", "<=", "\[Pi]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"vec4", "[", 
        RowBox[{
        "\[CapitalTheta]1_", ",", "\[CapitalTheta]2_", ",", "\[Phi]_"}], 
        "]"}], ":=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "\[CapitalTheta]1", "]"}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "\[CapitalTheta]1", "]"}], 
          RowBox[{"Cos", "[", "\[CapitalTheta]2", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "\[CapitalTheta]1", "]"}], 
          RowBox[{"Sin", "[", "\[CapitalTheta]2", "]"}], 
          RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "\[CapitalTheta]1", "]"}], 
          RowBox[{"Sin", "[", "\[CapitalTheta]2", "]"}], 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Qvec", "=", 
       RowBox[{
        SqrtBox[
         RowBox[{"sp", "[", 
          RowBox[{"Q", ",", "Q"}], "]"}]], 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kvec", "=", 
       RowBox[{
        SqrtBox[
         RowBox[{"sp", "[", 
          RowBox[{"k", ",", "k"}], "]"}]], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"sp", "[", 
            RowBox[{"k", ",", "Q"}], "]"}], "/", 
           RowBox[{"(", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"sp", "[", 
                RowBox[{"Q", ",", "Q"}], "]"}], 
               RowBox[{"sp", "[", 
                RowBox[{"k", ",", "k"}], "]"}]}], ")"}]}], ")"}]}], ",", 
          RowBox[{"\[Sqrt]", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"sp", "[", 
                 RowBox[{"k", ",", "Q"}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"sp", "[", 
                    RowBox[{"Q", ",", "Q"}], "]"}], 
                    RowBox[{"sp", "[", 
                    RowBox[{"k", ",", "k"}], "]"}]}], ")"}]}], ")"}]}], ")"}],
               "2"]}], ")"}]}], ",", "0", ",", "0"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"qvec", "=", 
       RowBox[{"q", " ", 
        RowBox[{"vec4", "[", 
         RowBox[{
          RowBox[{"ArcCos", "[", 
           RowBox[{"Symbol", "[", "\"\<cos1\>\"", "]"}], "]"}], ",", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"Symbol", "[", "\"\<cos2\>\"", "]"}], "]"}], ",", 
          RowBox[{"Symbol", "[", "\"\<phi\>\"", "]"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ruleqk", "=", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"kvec", ".", "qvec"}], ")"}], ",", 
         RowBox[{"Assumptions", "->", 
          RowBox[{"$Assumptions", "&&", 
           RowBox[{
            RowBox[{"-", "1"}], "<", 
            RowBox[{"Symbol", "[", "\"\<cos1\>\"", "]"}], "<=", "1"}], "&&", 
           RowBox[{
            RowBox[{"-", "1"}], "<", 
            RowBox[{"Symbol", "[", "\"\<cos2\>\"", "]"}], "<=", "1"}], "&&", 
           RowBox[{"0", "<=", 
            RowBox[{"Symbol", "[", "\"\<phi\>\"", "]"}], "<", 
            RowBox[{"2", "\[Pi]"}]}]}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ruleqQ", "=", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Qvec", ".", "qvec"}], ")"}], ",", 
         RowBox[{"Assumptions", "->", 
          RowBox[{"$Assumptions", "&&", 
           RowBox[{
            RowBox[{"-", "1"}], "<", 
            RowBox[{"Symbol", "[", "\"\<cos1\>\"", "]"}], "<=", "1"}], "&&", 
           RowBox[{
            RowBox[{"-", "1"}], "<", 
            RowBox[{"Symbol", "[", "\"\<cos2\>\"", "]"}], "<=", "1"}], "&&", 
           RowBox[{"0", "<=", 
            RowBox[{"Symbol", "[", "\"\<phi\>\"", "]"}], "<", 
            RowBox[{"2", "\[Pi]"}]}]}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rules", "=", 
       RowBox[{"Dispatch", "[", "\[IndentingNewLine]", 
        RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Global`UseLorentzLinearity", "[", "\[IndentingNewLine]", 
           RowBox[{"conv", "[", 
            RowBox[{"Evaluate", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"Q", ",", "Q"}], "]"}], "->", 
                  RowBox[{"4", "t"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"k", ",", "k"}], "]"}], "->", 
                  RowBox[{"3", "xi", " ", "t"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"Q", ",", "k"}], "]"}], "->", 
                  RowBox[{"2", 
                   SqrtBox["3"], 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["t", "2"], " ", "xi"}]], "z"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"k", ",", "Q"}], "]"}], "->", 
                  RowBox[{"2", 
                   SqrtBox["3"], 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["t", "2"], " ", "xi"}]], "z"}]}], ",", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"k", ",", "q"}], "]"}], "->", "ruleqk"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"q", ",", "k"}], "]"}], "->", "ruleqk"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"Q", ",", "q"}], "]"}], "->", "ruleqQ"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"q", ",", "Q"}], "]"}], "->", "ruleqQ"}]}], 
                "\[IndentingNewLine]", "}"}], "//.", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"t", "->", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"1", "-", "s"}], "4"], 
                   SuperscriptBox["S0", "2"]}]}], ",", "\[IndentingNewLine]", 
                 
                 RowBox[{"xi", "->", 
                  FractionBox[
                   RowBox[{"1", "+", "s"}], 
                   RowBox[{"1", "-", "s"}]]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"z", "->", 
                  FractionBox["a", 
                   SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["s", "2"]}]]]}]}], "\[IndentingNewLine]", 
                "}"}]}], "//.", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"a", "->", 
                 RowBox[{"S1", " ", 
                  RowBox[{"Cos", "[", "SPhi", "]"}]}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"s", "->", 
                 RowBox[{"S1", " ", 
                  RowBox[{"Sin", "[", "SPhi", "]"}]}]}]}], 
               "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], 
            "]"}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Assumptions", "->", 
           RowBox[{"System`$Assumptions", "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p1", ",", "p1"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p2", ",", "p2"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p3", ",", "p3"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{"0", "<=", "a", "<=", "1"}], "&&", 
            RowBox[{"0", "<=", "s", "<=", "1"}], "&&", 
            RowBox[{"S0", ">=", "0"}], "&&", 
            RowBox[{"1", ">=", "S1", ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "<", "SPhi", "<=", "\[Pi]"}], "&&", 
            RowBox[{"xi", ">=", "0"}]}]}]}], "\[IndentingNewLine]", "]"}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "//.", "rules"}], ")"}], "&"}], "\[IndentingNewLine]", 
       "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.935567851484016*^9, 3.935567891826725*^9}, {
   3.935567924476222*^9, 3.935568125133035*^9}, {3.935568248100608*^9, 
   3.935568253419171*^9}, {3.935568290036735*^9, 3.9355682981472807`*^9}, {
   3.935568369051241*^9, 3.935568371547052*^9}, {3.935568419763962*^9, 
   3.935568439650738*^9}, {3.935568492292036*^9, 3.93556849971489*^9}, {
   3.935568543468109*^9, 3.935568556836597*^9}, {3.935568601934041*^9, 
   3.935568617258655*^9}, {3.935568647525443*^9, 3.935568650523687*^9}, {
   3.935570237940086*^9, 3.935570241892354*^9}, {3.9355704706140223`*^9, 
   3.935570473990324*^9}, 3.935570646497664*^9, {3.93557075275231*^9, 
   3.935570764351408*^9}, {3.9355708011260633`*^9, 3.935570807910563*^9}, {
   3.935570908814569*^9, 3.935570926174837*^9}, {3.935571288134744*^9, 
   3.9355712944321203`*^9}, {3.935571335279447*^9, 3.935571340094409*^9}, {
   3.935642670583332*^9, 3.935642710138158*^9}, {3.935642795767605*^9, 
   3.935642807747527*^9}, 3.935642868069143*^9, 3.935642903063818*^9, 
   3.935643056158264*^9, {3.935643155458076*^9, 3.935643186145089*^9}, {
   3.935643236108461*^9, 3.935643288757062*^9}, {3.935643327199599*^9, 
   3.935643345519648*^9}, 3.935643381577079*^9, 3.935643757273583*^9, {
   3.935643859354795*^9, 3.935643881790259*^9}, {3.935643982721689*^9, 
   3.935643982845061*^9}, {3.935644036380038*^9, 3.935644039292553*^9}, {
   3.935859437896254*^9, 3.935859441056033*^9}, 3.935859532592021*^9, {
   3.935910827227302*^9, 3.935910838699278*^9}, {3.9359108740432863`*^9, 
   3.9359108883878307`*^9}, {3.935910918700355*^9, 3.93591094264423*^9}, {
   3.935914838724524*^9, 3.935915046828701*^9}, {3.936760049424843*^9, 
   3.9367600496682663`*^9}, {3.936760380608631*^9, 3.936760387148481*^9}, {
   3.936760472079035*^9, 3.936760474803399*^9}, 3.936773310306766*^9, {
   3.941640418611765*^9, 3.941640419751532*^9}, {3.941640467234021*^9, 
   3.941640470131373*^9}, {3.941780119146853*^9, 3.9417801437462*^9}, {
   3.94178020311053*^9, 3.941780227514079*^9}, {3.941781388576251*^9, 
   3.94178138897256*^9}},ExpressionUUID->"eb0d0058-7e72-44ea-9964-\
09dd66819a96"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TB3PToS0S1SPhiQk", "[", 
    RowBox[{
    "Q_Symbol", ",", "k_Symbol", ",", "S0_Symbol", ",", "S1_Symbol", ",", 
     "SPhi_Symbol"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rules", ",", 
       RowBox[{"conv", "=", "InsertOutputNaming"}], ",", 
       "\[IndentingNewLine]", "t", ",", "xi", ",", "a", ",", "s", ",", "z"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"System`$Assumptions", "=", 
       RowBox[{"System`$Assumptions", "&&", 
        RowBox[{"S0", ">", "0"}], "&&", 
        RowBox[{"1", ">=", "S1", ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "<", "SPhi", "<=", "\[Pi]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rules", "=", 
       RowBox[{"Dispatch", "[", "\[IndentingNewLine]", 
        RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Global`UseLorentzLinearity", "[", "\[IndentingNewLine]", 
           RowBox[{"conv", "[", 
            RowBox[{"Evaluate", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"Q", ",", "Q"}], "]"}], "->", 
                  RowBox[{"4", "t"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"k", ",", "k"}], "]"}], "->", 
                  RowBox[{"3", "xi", " ", "t"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"Q", ",", "k"}], "]"}], "->", 
                  RowBox[{"2", 
                   SqrtBox["3"], 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["t", "2"], " ", "xi"}]], "z"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"k", ",", "Q"}], "]"}], "->", 
                  RowBox[{"2", 
                   SqrtBox["3"], 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["t", "2"], " ", "xi"}]], "z"}]}]}], 
                "\[IndentingNewLine]", "}"}], "//.", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"t", "->", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"1", "-", "s"}], "4"], 
                   SuperscriptBox["S0", "2"]}]}], ",", "\[IndentingNewLine]", 
                 
                 RowBox[{"xi", "->", 
                  FractionBox[
                   RowBox[{"1", "+", "s"}], 
                   RowBox[{"1", "-", "s"}]]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"z", "->", 
                  FractionBox["a", 
                   SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["s", "2"]}]]]}]}], "\[IndentingNewLine]", 
                "}"}]}], "//.", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"a", "->", 
                 RowBox[{"S1", " ", 
                  RowBox[{"Cos", "[", "SPhi", "]"}]}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"s", "->", 
                 RowBox[{"S1", " ", 
                  RowBox[{"Sin", "[", "SPhi", "]"}]}]}]}], 
               "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], 
            "]"}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Assumptions", "->", 
           RowBox[{"System`$Assumptions", "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p1", ",", "p1"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p2", ",", "p2"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p3", ",", "p3"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{"0", "<=", "a", "<=", "1"}], "&&", 
            RowBox[{"0", "<=", "s", "<=", "1"}], "&&", 
            RowBox[{"S0", ">=", "0"}], "&&", 
            RowBox[{"1", ">=", "S1", ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "<", "SPhi", "<=", "\[Pi]"}], "&&", 
            RowBox[{"xi", ">=", "0"}]}]}]}], "\[IndentingNewLine]", "]"}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "//.", "rules"}], ")"}], "&"}], "\[IndentingNewLine]", 
       "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TB3PFromS0S1SPhiQk", "[", 
    RowBox[{
    "Q_Symbol", ",", "k_Symbol", ",", "S0_Symbol", ",", "S1_Symbol", ",", 
     "SPhi_Symbol"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rules", ",", 
       RowBox[{"conv", "=", "InsertOutputNaming"}], ",", 
       "\[IndentingNewLine]", "t", ",", "xi", ",", "a", ",", "s", ",", "z"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rules", "=", 
       RowBox[{"Dispatch", "[", "\[IndentingNewLine]", 
        RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Global`UseLorentzLinearity", "[", "\[IndentingNewLine]", 
           RowBox[{"conv", "[", 
            RowBox[{"Evaluate", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"S0", "->", 
                  SqrtBox[
                   RowBox[{"2", "t", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "xi"}], ")"}]}]]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"S1", "->", 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["a", "2"], "+", 
                    SuperscriptBox["s", "2"]}]]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"SPhi", "->", 
                  RowBox[{"ArcTan", "[", 
                   RowBox[{"a", ",", "s"}], "]"}]}]}], "\[IndentingNewLine]", 
                "}"}], "//.", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"a", "->", 
                  FractionBox[
                   RowBox[{"2", 
                    SqrtBox["xi"], "z"}], 
                   RowBox[{"xi", "+", "1"}]]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"s", "->", 
                  FractionBox[
                   RowBox[{"xi", "-", "1"}], 
                   RowBox[{"xi", "+", "1"}]]}]}], "\[IndentingNewLine]", 
                "}"}]}], "//.", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"t", "->", 
                 FractionBox[
                  RowBox[{"TBsp", "[", 
                   RowBox[{"Q", ",", "Q"}], "]"}], "4"]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"xi", "->", 
                 FractionBox[
                  RowBox[{"4", 
                   RowBox[{"TBsp", "[", 
                    RowBox[{"k", ",", "k"}], "]"}]}], 
                  RowBox[{"3", 
                   RowBox[{"TBsp", "[", 
                    RowBox[{"Q", ",", "Q"}], "]"}]}]]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"z", "->", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"Q", ",", "k"}], "]"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"\[Sqrt]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"TBsp", "[", 
                    RowBox[{"k", ",", "k"}], "]"}], 
                    RowBox[{"TBsp", "[", 
                    RowBox[{"Q", ",", "Q"}], "]"}]}], ")"}]}], ")"}]}]}]}], 
               "\[IndentingNewLine]", "}"}]}], "]"}], "]"}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Assumptions", "->", 
           RowBox[{"System`$Assumptions", "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p1", ",", "p1"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p2", ",", "p2"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p3", ",", "p3"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{"0", "<=", "a", "<=", "1"}], "&&", 
            RowBox[{"0", "<=", "s", "<=", "1"}], "&&", 
            RowBox[{"S0", ">=", "0"}], "&&", 
            RowBox[{"1", ">=", "S1", ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "<", "SPhi", "<=", "\[Pi]"}], "&&", 
            RowBox[{"xi", ">=", "0"}]}]}]}], "\[IndentingNewLine]", "]"}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "//.", "rules"}], ")"}], "&"}], "\[IndentingNewLine]", 
       "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.935567851484016*^9, 3.935567891826725*^9}, {
   3.935567924476222*^9, 3.935568125133035*^9}, {3.935568248100608*^9, 
   3.935568253419171*^9}, {3.935568290036735*^9, 3.9355682981472807`*^9}, {
   3.935568369051241*^9, 3.935568371547052*^9}, {3.935568419763962*^9, 
   3.935568439650738*^9}, {3.935568492292036*^9, 3.93556849971489*^9}, {
   3.935568543468109*^9, 3.935568556836597*^9}, {3.935568601934041*^9, 
   3.935568617258655*^9}, {3.935568647525443*^9, 3.935568650523687*^9}, {
   3.935570237940086*^9, 3.935570241892354*^9}, {3.9355704706140223`*^9, 
   3.935570473990324*^9}, 3.935570646497664*^9, {3.93557075275231*^9, 
   3.935570764351408*^9}, {3.9355708011260633`*^9, 3.935570807910563*^9}, {
   3.935570908814569*^9, 3.935570926174837*^9}, {3.935571288134744*^9, 
   3.9355712944321203`*^9}, {3.935571335279447*^9, 3.935571340094409*^9}, {
   3.935642670583332*^9, 3.935642710138158*^9}, {3.935642795767605*^9, 
   3.935642807747527*^9}, 3.935642868069143*^9, 3.935642903063818*^9, 
   3.935643056158264*^9, {3.935643155458076*^9, 3.935643186145089*^9}, {
   3.935643236108461*^9, 3.935643288757062*^9}, {3.935643327199599*^9, 
   3.935643345519648*^9}, 3.935643381577079*^9, 3.935643757273583*^9, {
   3.935643859354795*^9, 3.935643881790259*^9}, {3.935643982721689*^9, 
   3.935643982845061*^9}, {3.935644036380038*^9, 3.935644039292553*^9}, {
   3.935859437896254*^9, 3.935859441056033*^9}, 3.935859532592021*^9, 
   3.936760000683238*^9, {3.936760037070725*^9, 3.9367600373340397`*^9}, 
   3.9416403164031763`*^9, {3.9416403821474667`*^9, 3.941640383883491*^9}, {
   3.941640473899171*^9, 3.941640480263316*^9}, {3.941780234654352*^9, 
   3.941780266930209*^9}, {3.941781392899849*^9, 
   3.94178139851132*^9}},ExpressionUUID->"eda0cfa0-8b5d-471e-93a5-\
482d7d0e9336"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["S0 a s", "Subsection",
 CellChangeTimes->{{3.936869460744554*^9, 
  3.936869481670494*^9}},ExpressionUUID->"fe90355d-812c-40f2-9b7c-\
b012ae540bf9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TB3PToS0as", "[", 
    RowBox[{
    "p1_Symbol", ",", "p2_Symbol", ",", "p3_Symbol", ",", "q_Symbol", ",", 
     "S0_Symbol", ",", "a_Symbol", ",", "s_Symbol"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"change", ",", "rules", ",", 
       RowBox[{"conv", "=", "InsertOutputNaming"}], ",", 
       "\[IndentingNewLine]", "vec4", ",", "Qvec", ",", "kvec", ",", "qvec", 
       ",", "ruleqk", ",", "ruleqQ", ",", "\[IndentingNewLine]", "t", ",", 
       "xi", ",", "z", ",", "Q", ",", "k"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"System`$Assumptions", "=", 
       RowBox[{"System`$Assumptions", "&&", 
        RowBox[{"S0", ">", "0"}], "&&", 
        RowBox[{"1", ">=", "a", ">=", "0"}], "&&", 
        RowBox[{"0", "<=", "s", "<=", "1"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"vec4", "[", 
        RowBox[{
        "\[CapitalTheta]1_", ",", "\[CapitalTheta]2_", ",", "\[Phi]_"}], 
        "]"}], ":=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "\[CapitalTheta]1", "]"}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "\[CapitalTheta]1", "]"}], 
          RowBox[{"Cos", "[", "\[CapitalTheta]2", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "\[CapitalTheta]1", "]"}], 
          RowBox[{"Sin", "[", "\[CapitalTheta]2", "]"}], 
          RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "\[CapitalTheta]1", "]"}], 
          RowBox[{"Sin", "[", "\[CapitalTheta]2", "]"}], 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Qvec", "=", 
       RowBox[{
        SqrtBox[
         RowBox[{"sp", "[", 
          RowBox[{"Q", ",", "Q"}], "]"}]], 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kvec", "=", 
       RowBox[{
        SqrtBox[
         RowBox[{"sp", "[", 
          RowBox[{"k", ",", "k"}], "]"}]], 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"sp", "[", 
            RowBox[{"k", ",", "Q"}], "]"}], 
           SqrtBox[
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"Q", ",", "Q"}], "]"}], 
             RowBox[{"sp", "[", 
              RowBox[{"k", ",", "k"}], "]"}]}]]], ",", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"sp", "[", 
                RowBox[{"k", ",", "Q"}], "]"}], 
               SqrtBox[
                RowBox[{
                 RowBox[{"sp", "[", 
                  RowBox[{"Q", ",", "Q"}], "]"}], 
                 RowBox[{"sp", "[", 
                  RowBox[{"k", ",", "k"}], "]"}]}]]], ")"}], "2"]}]], ",", 
          "0", ",", "0"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"qvec", "=", 
       RowBox[{"q", " ", 
        RowBox[{"vec4", "[", 
         RowBox[{
          RowBox[{"ArcCos", "[", 
           RowBox[{"Symbol", "[", "\"\<cos1\>\"", "]"}], "]"}], ",", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"Symbol", "[", "\"\<cos2\>\"", "]"}], "]"}], ",", 
          RowBox[{"Symbol", "[", "\"\<phi\>\"", "]"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ruleqk", "=", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"kvec", ".", "qvec"}], ")"}], ",", 
         RowBox[{"Assumptions", "->", 
          RowBox[{"$Assumptions", "&&", 
           RowBox[{
            RowBox[{"-", "1"}], "<", 
            RowBox[{"Symbol", "[", "\"\<cos1\>\"", "]"}], "<=", "1"}], "&&", 
           RowBox[{
            RowBox[{"-", "1"}], "<", 
            RowBox[{"Symbol", "[", "\"\<cos2\>\"", "]"}], "<=", "1"}], "&&", 
           RowBox[{"0", "<=", 
            RowBox[{"Symbol", "[", "\"\<phi\>\"", "]"}], "<", 
            RowBox[{"2", "\[Pi]"}]}]}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ruleqQ", "=", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Qvec", ".", "qvec"}], ")"}], ",", 
         RowBox[{"Assumptions", "->", 
          RowBox[{"$Assumptions", "&&", 
           RowBox[{
            RowBox[{"-", "1"}], "<", 
            RowBox[{"Symbol", "[", "\"\<cos1\>\"", "]"}], "<=", "1"}], "&&", 
           RowBox[{
            RowBox[{"-", "1"}], "<", 
            RowBox[{"Symbol", "[", "\"\<cos2\>\"", "]"}], "<=", "1"}], "&&", 
           RowBox[{"0", "<=", 
            RowBox[{"Symbol", "[", "\"\<phi\>\"", "]"}], "<", 
            RowBox[{"2", "\[Pi]"}]}]}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"change", "[", "expr_", "]"}], ":=", 
       RowBox[{"Global`UseLorentzLinearity", "[", 
        RowBox[{"conv", "[", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"expr", "//.", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"p1", "->", "Q"}], ",", "\[IndentingNewLine]", 
             RowBox[{"p2", "->", 
              RowBox[{
               RowBox[{"-", "k"}], "-", 
               FractionBox["Q", "2"]}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"p3", "->", 
              RowBox[{"k", "-", 
               FractionBox["Q", "2"]}]}]}], "\[IndentingNewLine]", "}"}]}], 
          "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"rules", "=", 
       RowBox[{"Dispatch", "[", "\[IndentingNewLine]", 
        RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Global`UseLorentzLinearity", "[", "\[IndentingNewLine]", 
           RowBox[{"conv", "[", 
            RowBox[{"Evaluate", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"TBsp", "[", 
                  RowBox[{"Q", ",", "Q"}], "]"}], "->", 
                 RowBox[{"4", "t"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"TBsp", "[", 
                  RowBox[{"k", ",", "k"}], "]"}], "->", 
                 RowBox[{"3", "xi", " ", "t"}]}], ",", "\[IndentingNewLine]", 
                
                RowBox[{
                 RowBox[{"TBsp", "[", 
                  RowBox[{"Q", ",", "k"}], "]"}], "->", 
                 RowBox[{"2", 
                  SqrtBox["3"], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["t", "2"], " ", "xi"}]], "z"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"TBsp", "[", 
                  RowBox[{"k", ",", "Q"}], "]"}], "->", 
                 RowBox[{"2", 
                  SqrtBox["3"], 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["t", "2"], " ", "xi"}]], "z"}]}], ",", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"TBsp", "[", 
                  RowBox[{"k", ",", "q"}], "]"}], "->", "ruleqk"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"TBsp", "[", 
                  RowBox[{"q", ",", "k"}], "]"}], "->", "ruleqk"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"TBsp", "[", 
                  RowBox[{"Q", ",", "q"}], "]"}], "->", "ruleqQ"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"TBsp", "[", 
                  RowBox[{"q", ",", "Q"}], "]"}], "->", "ruleqQ"}]}], 
               "\[IndentingNewLine]", "}"}], "//.", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"t", "->", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "-", "s"}], "4"], 
                  SuperscriptBox["S0", "2"]}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"xi", "->", 
                 FractionBox[
                  RowBox[{"1", "+", "s"}], 
                  RowBox[{"1", "-", "s"}]]}], ",", "\[IndentingNewLine]", 
                RowBox[{"z", "->", 
                 FractionBox["a", 
                  SqrtBox[
                   RowBox[{"1", "-", 
                    SuperscriptBox["s", "2"]}]]]}]}], "\[IndentingNewLine]", 
               "}"}]}], "\[IndentingNewLine]", "]"}], "]"}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Assumptions", "->", 
           RowBox[{"System`$Assumptions", "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p1", ",", "p1"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p2", ",", "p2"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p3", ",", "p3"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{"0", "<=", "a", "<=", "1"}], "&&", 
            RowBox[{"0", "<=", "s", "<=", "1"}], "&&", 
            RowBox[{"S0", ">=", "0"}], "&&", 
            RowBox[{"xi", ">=", "0"}]}]}]}], "\[IndentingNewLine]", "]"}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"change", "[", "#", "]"}], "//.", "rules"}], ")"}], "&"}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.935567851484016*^9, 3.935567891826725*^9}, {
   3.935567924476222*^9, 3.935568125133035*^9}, {3.935568248100608*^9, 
   3.935568253419171*^9}, {3.935568290036735*^9, 3.9355682981472807`*^9}, {
   3.935568369051241*^9, 3.935568371547052*^9}, {3.935568419763962*^9, 
   3.935568439650738*^9}, {3.935568492292036*^9, 3.93556849971489*^9}, {
   3.935568543468109*^9, 3.935568556836597*^9}, {3.935568601934041*^9, 
   3.935568617258655*^9}, {3.935568647525443*^9, 3.935568650523687*^9}, {
   3.935570237940086*^9, 3.935570241892354*^9}, {3.9355704706140223`*^9, 
   3.935570473990324*^9}, 3.935570646497664*^9, {3.93557075275231*^9, 
   3.935570764351408*^9}, {3.9355708011260633`*^9, 3.935570807910563*^9}, {
   3.935570908814569*^9, 3.935570926174837*^9}, {3.935571288134744*^9, 
   3.9355712944321203`*^9}, {3.935571335279447*^9, 3.935571340094409*^9}, {
   3.935642670583332*^9, 3.935642710138158*^9}, {3.935642795767605*^9, 
   3.935642807747527*^9}, 3.935642868069143*^9, 3.935642903063818*^9, 
   3.935643056158264*^9, {3.935643155458076*^9, 3.935643186145089*^9}, {
   3.935643236108461*^9, 3.935643288757062*^9}, {3.935643327199599*^9, 
   3.935643345519648*^9}, 3.935643381577079*^9, 3.935643757273583*^9, {
   3.935643859354795*^9, 3.935643881790259*^9}, {3.935643982721689*^9, 
   3.935643982845061*^9}, {3.935644036380038*^9, 3.935644039292553*^9}, {
   3.935859437896254*^9, 3.935859441056033*^9}, 3.935859532592021*^9, {
   3.935910827227302*^9, 3.935910838699278*^9}, {3.9359108740432863`*^9, 
   3.9359108883878307`*^9}, {3.935910918700355*^9, 3.93591094264423*^9}, {
   3.935914838724524*^9, 3.935915046828701*^9}, {3.936760049424843*^9, 
   3.9367600496682663`*^9}, {3.936760380608631*^9, 3.936760387148481*^9}, {
   3.936760472079035*^9, 3.936760474803399*^9}, 3.936773310306766*^9, {
   3.93686949016903*^9, 3.936869516339879*^9}, {3.936869560522151*^9, 
   3.936869596919012*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"aabc8ef7-49e5-4333-9181-ae2ddd34f9e3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TB3PToS0as", "[", 
     RowBox[{
     "p1_Symbol", ",", "p2_Symbol", ",", "p3_Symbol", ",", "S0_Symbol", ",", 
      "a_Symbol", ",", "s_Symbol"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"change", ",", "rules", ",", 
        RowBox[{"conv", "=", "InsertOutputNaming"}], ",", 
        "\[IndentingNewLine]", "t", ",", "xi", ",", "z", ",", "Q", ",", "k"}],
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"System`$Assumptions", "=", 
        RowBox[{"System`$Assumptions", "&&", 
         RowBox[{"S0", ">", "0"}], "&&", 
         RowBox[{"1", ">=", "a", ">=", "0"}], "&&", 
         RowBox[{"0", "<=", "s", "<=", "1"}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"change", "[", "expr_", "]"}], ":=", 
        RowBox[{"Global`UseLorentzLinearity", "[", 
         RowBox[{"conv", "[", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"expr", "//.", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"p1", "->", "Q"}], ",", "\[IndentingNewLine]", 
              RowBox[{"p2", "->", 
               RowBox[{
                RowBox[{"-", "k"}], "-", 
                FractionBox["Q", "2"]}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"p3", "->", 
               RowBox[{"k", "-", 
                FractionBox["Q", "2"]}]}]}], "\[IndentingNewLine]", "}"}]}], 
           "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rules", "=", 
        RowBox[{"Dispatch", "[", "\[IndentingNewLine]", 
         RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Global`UseLorentzLinearity", "[", "\[IndentingNewLine]", 
            RowBox[{"conv", "[", 
             RowBox[{"Evaluate", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"Q", ",", "Q"}], "]"}], "->", 
                  RowBox[{"4", "t"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"k", ",", "k"}], "]"}], "->", 
                  RowBox[{"3", "xi", " ", "t"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"Q", ",", "k"}], "]"}], "->", 
                  RowBox[{"2", 
                   SqrtBox["3"], 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["t", "2"], " ", "xi"}]], "z"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TBsp", "[", 
                   RowBox[{"k", ",", "Q"}], "]"}], "->", 
                  RowBox[{"2", 
                   SqrtBox["3"], 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["t", "2"], " ", "xi"}]], "z"}]}]}], 
                "\[IndentingNewLine]", "}"}], "//.", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"t", "->", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"1", "-", "s"}], "4"], 
                   SuperscriptBox["S0", "2"]}]}], ",", "\[IndentingNewLine]", 
                 
                 RowBox[{"xi", "->", 
                  FractionBox[
                   RowBox[{"1", "+", "s"}], 
                   RowBox[{"1", "-", "s"}]]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"z", "->", 
                  FractionBox["a", 
                   SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["s", "2"]}]]]}]}], "\[IndentingNewLine]", 
                "}"}]}], "\[IndentingNewLine]", "]"}], "]"}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Assumptions", "->", 
            RowBox[{"System`$Assumptions", "&&", 
             RowBox[{
              RowBox[{"sp", "[", 
               RowBox[{"p1", ",", "p1"}], "]"}], ">=", "0"}], "&&", 
             RowBox[{
              RowBox[{"sp", "[", 
               RowBox[{"p2", ",", "p2"}], "]"}], ">=", "0"}], "&&", 
             RowBox[{
              RowBox[{"sp", "[", 
               RowBox[{"p3", ",", "p3"}], "]"}], ">=", "0"}], "&&", 
             RowBox[{"0", "<=", "a", "<=", "1"}], "&&", 
             RowBox[{"0", "<=", "s", "<=", "1"}], "&&", 
             RowBox[{"S0", ">=", "0"}], "&&", 
             RowBox[{"xi", ">=", "0"}]}]}]}], "\[IndentingNewLine]", "]"}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"change", "[", "#", "]"}], "//.", "rules"}], ")"}], "&"}], 
        "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TB3PFromS0as", "[", 
    RowBox[{
    "p1_Symbol", ",", "p2_Symbol", ",", "p3_Symbol", ",", "S0_Symbol", ",", 
     "a_Symbol", ",", "s_Symbol"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rules", ",", 
       RowBox[{"conv", "=", "InsertOutputNaming"}], ",", 
       "\[IndentingNewLine]", "t", ",", "xi", ",", "z", ",", "Q", ",", "k"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rules", "=", 
       RowBox[{"Dispatch", "[", "\[IndentingNewLine]", 
        RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Global`UseLorentzLinearity", "[", "\[IndentingNewLine]", 
           RowBox[{"conv", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"S0", "->", 
                  SqrtBox[
                   RowBox[{"2", "t", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "xi"}], ")"}]}]]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"a", "->", 
                  FractionBox[
                   RowBox[{"2", 
                    SqrtBox["xi"], "z"}], 
                   RowBox[{"xi", "+", "1"}]]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"s", "->", 
                  FractionBox[
                   RowBox[{"xi", "-", "1"}], 
                   RowBox[{"xi", "+", "1"}]]}]}], "\[IndentingNewLine]", 
                "}"}], "//.", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"t", "->", 
                  FractionBox[
                   RowBox[{"TBsp", "[", 
                    RowBox[{"Q", ",", "Q"}], "]"}], "4"]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"xi", "->", 
                  FractionBox[
                   RowBox[{"4", 
                    RowBox[{"TBsp", "[", 
                    RowBox[{"k", ",", "k"}], "]"}]}], 
                   RowBox[{"3", 
                    RowBox[{"TBsp", "[", 
                    RowBox[{"Q", ",", "Q"}], "]"}]}]]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"z", "->", 
                  FractionBox[
                   RowBox[{"TBsp", "[", 
                    RowBox[{"Q", ",", "k"}], "]"}], 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"TBsp", "[", 
                    RowBox[{"k", ",", "k"}], "]"}], 
                    RowBox[{"TBsp", "[", 
                    RowBox[{"Q", ",", "Q"}], "]"}]}]]]}]}], 
                "\[IndentingNewLine]", "}"}]}], "//.", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Q", "->", "p1"}], ",", "\[IndentingNewLine]", 
                RowBox[{"k", "->", 
                 FractionBox[
                  RowBox[{"p3", "-", "p2"}], "2"]}]}], "\[IndentingNewLine]", 
               "}"}]}], "]"}], "]"}], "\[IndentingNewLine]", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Assumptions", "->", 
           RowBox[{"System`$Assumptions", "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p1", ",", "p1"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p2", ",", "p2"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{
             RowBox[{"sp", "[", 
              RowBox[{"p3", ",", "p3"}], "]"}], ">=", "0"}], "&&", 
            RowBox[{"0", "<=", "a", "<=", "1"}], "&&", 
            RowBox[{"0", "<=", "s", "<=", "1"}], "&&", 
            RowBox[{"S0", ">=", "0"}], "&&", 
            RowBox[{"xi", ">=", "0"}]}]}]}], "\[IndentingNewLine]", "]"}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "//.", "rules"}], ")"}], "&"}], "\[IndentingNewLine]", 
       "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.935567851484016*^9, 3.935567891826725*^9}, {
   3.935567924476222*^9, 3.935568125133035*^9}, {3.935568248100608*^9, 
   3.935568253419171*^9}, {3.935568290036735*^9, 3.9355682981472807`*^9}, {
   3.935568369051241*^9, 3.935568371547052*^9}, {3.935568419763962*^9, 
   3.935568439650738*^9}, {3.935568492292036*^9, 3.93556849971489*^9}, {
   3.935568543468109*^9, 3.935568556836597*^9}, {3.935568601934041*^9, 
   3.935568617258655*^9}, {3.935568647525443*^9, 3.935568650523687*^9}, {
   3.935570237940086*^9, 3.935570241892354*^9}, {3.9355704706140223`*^9, 
   3.935570473990324*^9}, 3.935570646497664*^9, {3.93557075275231*^9, 
   3.935570764351408*^9}, {3.9355708011260633`*^9, 3.935570807910563*^9}, {
   3.935570908814569*^9, 3.935570926174837*^9}, {3.935571288134744*^9, 
   3.9355712944321203`*^9}, {3.935571335279447*^9, 3.935571340094409*^9}, {
   3.935642670583332*^9, 3.935642710138158*^9}, {3.935642795767605*^9, 
   3.935642807747527*^9}, 3.935642868069143*^9, 3.935642903063818*^9, 
   3.935643056158264*^9, {3.935643155458076*^9, 3.935643186145089*^9}, {
   3.935643236108461*^9, 3.935643288757062*^9}, {3.935643327199599*^9, 
   3.935643345519648*^9}, 3.935643381577079*^9, 3.935643757273583*^9, {
   3.935643859354795*^9, 3.935643881790259*^9}, {3.935643982721689*^9, 
   3.935643982845061*^9}, {3.935644036380038*^9, 3.935644039292553*^9}, {
   3.935859437896254*^9, 3.935859441056033*^9}, 3.935859532592021*^9, 
   3.936760000683238*^9, {3.936760037070725*^9, 3.9367600373340397`*^9}, {
   3.936869542286315*^9, 3.936869557681724*^9}, {3.936869609252618*^9, 
   3.936869652782132*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"57457dd7-5571-4c38-a645-c46447a3a30c"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finishing package", "Chapter",
 CellChangeTimes->{{3.919139867121632*^9, 
  3.919139874722487*^9}},ExpressionUUID->"e8c3cc19-732d-4100-ba41-\
4f741977ed46"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Protect", "[", "\"\<TensorBases`*\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.932041570050847*^9, 3.932041572308077*^9}, {
  3.9338200005526*^9, 3.933820001984568*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"9b9ea4fc-21b7-44a7-a56c-9624eb86aa03"],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]], "Code",
 CellLabel->
  "In[220]:=",ExpressionUUID->"404ab529-fa01-4a17-8d30-d78a744d6275"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]], "Code",
 CellLabel->
  "In[221]:=",ExpressionUUID->"71cbb145-c03b-495b-a560-6fe322da1f14"]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
InitializationCellEvaluation->False,
InitializationCellWarning->False,
WindowSize->{588.75, 711},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>0.8 Inherited,
FrontEndVersion->"14.1 for Linux x86 (64-bit) (July 16, 2024)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Input"], InitializationCell -> True]}, Visible -> False, 
  FrontEndVersion -> "14.1 for Linux x86 (64-bit) (July 16, 2024)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"3149dff9-433b-4831-b0e6-7a8267329937"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 211, 4, 77, "Title",ExpressionUUID->"255990ba-0600-4517-a841-3b30ef1076f1"],
Cell[CellGroupData[{
Cell[812, 30, 158, 3, 53, "Chapter",ExpressionUUID->"2d5f9f27-5490-4bea-8ecf-1b321b723da0"],
Cell[CellGroupData[{
Cell[995, 37, 188, 3, 53, "Section",ExpressionUUID->"14b72385-f030-403e-a0c1-5d8222f87d9c"],
Cell[1186, 42, 3945, 88, 620, "Input",ExpressionUUID->"2125670c-8e80-4950-89c2-d22305005954"],
Cell[CellGroupData[{
Cell[5156, 134, 3005, 46, 288, "Input",ExpressionUUID->"cff12a64-b8f4-41c0-bf5f-6bed048747c5"],
Cell[8164, 182, 4079, 62, 189, "Print",ExpressionUUID->"653ab452-b552-416d-a18f-e66588142d05"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12292, 250, 184, 3, 53, "Section",ExpressionUUID->"436dffab-0715-4dc4-9893-1534c639b158"],
Cell[CellGroupData[{
Cell[12501, 257, 7780, 188, 780, "Input",ExpressionUUID->"b5c156b0-48dd-4f0b-b103-49b8869d43c2"],
Cell[20284, 447, 286, 5, 18, "Print",ExpressionUUID->"c9f3d842-9ce9-41fa-acbe-888c601f1def"],
Cell[20573, 454, 357, 6, 28, "Output",ExpressionUUID->"e91ed60a-a087-42b8-bdc0-acad488342af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20967, 465, 689, 13, 56, "Input",ExpressionUUID->"102739d5-abf9-4cd7-b201-831760d9bc3c"],
Cell[21659, 480, 2954, 42, 34, "Print",ExpressionUUID->"a221858b-784e-48a1-a052-ff381322f202"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24650, 527, 501, 11, 37, "Input",ExpressionUUID->"b2853eeb-7d21-4045-928b-88a01a09d003"],
Cell[25154, 540, 415, 8, 49, "Print",ExpressionUUID->"b040574c-0232-4e09-94d7-1ecfc83fd757"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25618, 554, 259, 4, 53, "Section",ExpressionUUID->"db779555-ecf5-414b-9ffe-a23354af864d"],
Cell[25880, 560, 2075, 54, 203, "Input",ExpressionUUID->"6b97ee68-1ec3-4863-b4b5-c6c874bbb5ff"],
Cell[27958, 616, 1928, 33, 292, "Input",ExpressionUUID->"9d748520-463b-4673-8dbf-05d7992768a8"],
Cell[29889, 651, 5454, 133, 560, "Input",ExpressionUUID->"f56832ff-a350-4aa1-8112-dc4f04970905"],
Cell[35346, 786, 1721, 42, 166, "Input",ExpressionUUID->"e50ee3b0-10d2-4eed-b352-52a93420a5f3"],
Cell[37070, 830, 3847, 85, 523, "Input",ExpressionUUID->"d6b6bbb9-3345-45a0-85dd-a35cd6fbe82c"],
Cell[40920, 917, 4007, 89, 593, "Input",ExpressionUUID->"aa92b93a-9b79-4b4b-b856-7897148043bc"],
Cell[44930, 1008, 1415, 34, 148, "Input",ExpressionUUID->"dd937277-d672-41e4-9591-3f9cf27c3310"],
Cell[46348, 1044, 1002, 21, 93, "Input",ExpressionUUID->"f4b4be25-93f6-4d3d-9c1f-25ef9d1ee98e"],
Cell[47353, 1067, 12963, 257, 941, "Input",ExpressionUUID->"136f0a81-1f78-410c-a510-fd6e05afdfe1"],
Cell[CellGroupData[{
Cell[60341, 1328, 3015, 57, 166, "Input",ExpressionUUID->"1d0a7378-10e8-44e5-ac34-cc759cb2766f"],
Cell[63359, 1387, 864, 15, 18, "Print",ExpressionUUID->"dba95bb8-bad2-470c-9618-59bee8165789"]
}, Open  ]],
Cell[64238, 1405, 2981, 71, 217, "Input",ExpressionUUID->"a4e4af53-1b25-4820-aafe-c9c3ee5db581"],
Cell[67222, 1478, 1546, 38, 129, "Input",ExpressionUUID->"f42e7fcf-aed4-4ea5-bb46-42d923e9aecb"],
Cell[68771, 1518, 327, 7, 37, "Input",ExpressionUUID->"a12fffeb-b23c-482f-b3c6-974cd4d90c8e"],
Cell[69101, 1527, 5305, 136, 506, "Input",ExpressionUUID->"941a5f15-7c76-4ca5-81aa-4e5a668fdb3e"],
Cell[74409, 1665, 4495, 113, 398, "Input",ExpressionUUID->"f189d402-5d73-4821-a327-342585e8f469"],
Cell[78907, 1780, 1054, 21, 72, "Input",ExpressionUUID->"29f8c600-84c8-4c49-873c-18edfcb4af3b"],
Cell[79964, 1803, 2557, 66, 168, "Input",ExpressionUUID->"5befda18-05ad-4bf2-b49c-d50854f16f21"],
Cell[82524, 1871, 1830, 45, 199, "Input",ExpressionUUID->"349af2e8-124c-46fb-ac24-9e658f6b07b9"],
Cell[84357, 1918, 5182, 120, 648, "Input",ExpressionUUID->"79c471e6-d456-4320-ac55-bcbbeb206c62"],
Cell[89542, 2040, 1834, 45, 199, "Input",ExpressionUUID->"f8d0ce3a-d9e9-440c-9456-88207b758f72"],
Cell[91379, 2087, 10056, 241, 664, "Input",ExpressionUUID->"e922503b-8241-4aba-aa0f-75c69241d47a"],
Cell[101438, 2330, 7670, 201, 506, "Input",ExpressionUUID->"f3ea6309-60d5-4adf-9938-addd5d5f4741"],
Cell[109111, 2533, 14572, 298, 1170, "Input",ExpressionUUID->"377a1416-7c5f-4000-b6d8-2a50aee7d278"]
}, Closed]],
Cell[CellGroupData[{
Cell[123720, 2836, 197, 4, 42, "Section",ExpressionUUID->"519c8cf4-00ad-429f-90d6-d6259640b221"],
Cell[123920, 2842, 796, 17, 110, "Code",ExpressionUUID->"44dc6e77-47eb-4c57-945f-d5a7c5cda42d"],
Cell[CellGroupData[{
Cell[124741, 2863, 1105, 22, 56, "Input",ExpressionUUID->"bb3a37eb-d538-4d41-8217-39204afc0d84"],
Cell[125849, 2887, 336, 6, 28, "Output",ExpressionUUID->"acf014db-5c6c-4a08-841b-375e4eee33e7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[126234, 2899, 174, 3, 42, "Section",ExpressionUUID->"4029e77f-5a28-4c64-82f6-7635a458148b"],
Cell[126411, 2904, 709, 19, 69, "Input",ExpressionUUID->"4d3f01e4-537a-4ee6-883b-ac7809cb4485"],
Cell[127123, 2925, 12269, 220, 1375, "Code",ExpressionUUID->"fa4c288d-f6fa-4904-b906-ae7fe81b8ecf"],
Cell[139395, 3147, 1300, 24, 169, "Input",ExpressionUUID->"2ace8e61-0363-414a-aec2-78ad21a6b37c"],
Cell[140698, 3173, 2091, 43, 368, "Input",ExpressionUUID->"961023d5-c081-4924-a4a2-771943e79ed6"],
Cell[142792, 3218, 6106, 111, 934, "Input",ExpressionUUID->"b369a129-6cd6-4cba-9c5e-28d2d18ce42d"],
Cell[148901, 3331, 548, 12, 56, "Input",ExpressionUUID->"9dedee05-7403-4f49-af58-65aba455c566"],
Cell[149452, 3345, 1288, 22, 170, "Input",ExpressionUUID->"9a87c29c-9c9e-41e8-b49c-cc4140e36576"],
Cell[150743, 3369, 1347, 24, 191, "Input",ExpressionUUID->"be2e6840-c5b7-46d7-8454-3e14628bb533"]
}, Closed]],
Cell[CellGroupData[{
Cell[152127, 3398, 159, 3, 42, "Section",ExpressionUUID->"e355101f-e9af-4241-a28d-d8c2150a645e"],
Cell[152289, 3403, 212, 4, 42, "Code",ExpressionUUID->"334e210a-0008-4f8a-aa82-905e18a840c0"],
Cell[CellGroupData[{
Cell[152526, 3411, 730, 17, 56, "Input",ExpressionUUID->"efff9365-e605-44e2-96ed-3bb97e4ee665"],
Cell[153259, 3430, 336, 6, 28, "Output",ExpressionUUID->"8af54105-7c27-450e-a0d6-a4a27c093902"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[153656, 3443, 308, 5, 53, "Chapter",ExpressionUUID->"337028bb-22a5-4c7a-abf1-dfc7beb47d0a"],
Cell[CellGroupData[{
Cell[153989, 3452, 224, 4, 53, "Section",ExpressionUUID->"dbe6e042-2d89-4387-bbaa-a2256028c645"],
Cell[154216, 3458, 2371, 51, 356, "Input",ExpressionUUID->"ef80aa05-824a-4470-b476-ddcf32456fc1"],
Cell[156590, 3511, 3883, 93, 273, "Input",ExpressionUUID->"6e076dbb-146a-4f86-8dd4-efa0ea4f3802"],
Cell[160476, 3606, 8163, 181, 610, "Input",ExpressionUUID->"4067993b-78cc-4eab-a413-1ccb6e45d9eb"],
Cell[168642, 3789, 3438, 86, 271, "Input",ExpressionUUID->"0506a667-986c-4b85-9f62-5514c39fc506"],
Cell[172083, 3877, 1527, 30, 111, "Input",ExpressionUUID->"b63997b2-abf3-4330-be84-36295372784e"],
Cell[173613, 3909, 4802, 167, 574, "Input",ExpressionUUID->"07be19eb-22d0-491d-acac-4ebb05b77005"]
}, Closed]],
Cell[CellGroupData[{
Cell[178452, 4081, 185, 3, 42, "Section",ExpressionUUID->"2da5ecf0-e090-4d2e-b392-bb3466e0c2eb"],
Cell[178640, 4086, 972, 24, 56, "Input",ExpressionUUID->"f67051ff-d457-4e90-a315-afaf11fe82c4"],
Cell[179615, 4112, 1730, 46, 203, "Input",ExpressionUUID->"8ce792ad-49a8-4a56-8abc-de5826491428"],
Cell[181348, 4160, 739, 17, 111, "Input",ExpressionUUID->"0b12d5b2-017d-4cf6-b1cf-cbe10312ea40"],
Cell[182090, 4179, 444, 11, 37, "Input",ExpressionUUID->"eda1049b-d470-45b6-af18-dbfc767fa940"],
Cell[182537, 4192, 2382, 64, 201, "Input",ExpressionUUID->"9f480c74-eca2-469f-bfe8-255f7c611d82"],
Cell[184922, 4258, 2912, 69, 330, "Input",ExpressionUUID->"87c42bbb-3c0d-454a-93a1-4b0b25de9b39",
 InitializationCell->True],
Cell[187837, 4329, 2177, 51, 304, "Input",ExpressionUUID->"c69a1f90-52d2-4c70-a615-7352da6779eb"]
}, Closed]],
Cell[CellGroupData[{
Cell[190051, 4385, 170, 3, 42, "Section",ExpressionUUID->"ee0a3f20-4449-4c13-b99e-a02f47060c2b"],
Cell[190224, 4390, 3373, 91, 349, "Input",ExpressionUUID->"822fba52-6de1-43c4-885f-5e6ab1f6fc3b"],
Cell[193600, 4483, 3331, 91, 349, "Input",ExpressionUUID->"bbdfd93e-0b45-4ca4-90ca-a3a9b22aa1ac"],
Cell[196934, 4576, 1057, 29, 128, "Input",ExpressionUUID->"5b3a0713-e32a-40c8-baf1-a8d35b9ca4d7"],
Cell[197994, 4607, 1059, 30, 128, "Input",ExpressionUUID->"e639b518-8d0a-4143-92d8-ccb99c3e3134"],
Cell[199056, 4639, 3104, 88, 349, "Input",ExpressionUUID->"235217ce-2a52-433b-9dcb-ca48aa796831"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[202209, 4733, 264, 4, 53, "Chapter",ExpressionUUID->"b45359a4-435a-48f5-938f-6624251f7dc8"],
Cell[CellGroupData[{
Cell[202498, 4741, 173, 3, 53, "Section",ExpressionUUID->"57618d00-5575-4b3a-bb3d-ab20be3bd518"],
Cell[CellGroupData[{
Cell[202696, 4748, 244, 4, 42, "Subsection",ExpressionUUID->"fdbba363-df9e-4831-8273-2e976f9760de"],
Cell[202943, 4754, 19942, 507, 1038, "Input",ExpressionUUID->"276d2ca9-7d95-4b0a-b9e8-001c42d065e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222922, 5266, 218, 4, 42, "Subsection",ExpressionUUID->"4d8cf1c7-8120-4fd8-8435-e5bdbedca1d6"],
Cell[223143, 5272, 2003, 43, 179, "Input",ExpressionUUID->"3fdb3362-9708-45f6-90ec-4a08285d194a"],
Cell[225149, 5317, 4839, 103, 359, "Input",ExpressionUUID->"cd19b020-7808-4b5c-a1a3-737ab5f86d7a"],
Cell[229991, 5422, 3830, 89, 308, "Input",ExpressionUUID->"a0647142-035b-4af3-86c3-0ef0ea513443"],
Cell[233824, 5513, 4589, 112, 552, "Input",ExpressionUUID->"c3c5409f-48fe-41df-9ce8-a07da018aff7"],
Cell[238416, 5627, 4188, 95, 399, "Input",ExpressionUUID->"7662e852-6b7d-4ee4-96de-95764d7a2591"],
Cell[242607, 5724, 3827, 83, 414, "Input",ExpressionUUID->"40224019-5bbe-4af3-bb73-5d0fce2e4594"],
Cell[246437, 5809, 4248, 95, 521, "Input",ExpressionUUID->"61eaeae7-1a13-4ce5-831f-881e2297d0d2"],
Cell[250688, 5906, 7108, 133, 729, "Input",ExpressionUUID->"6be61425-e734-43e1-8f41-a7b0f08b8855"],
Cell[257799, 6041, 2126, 45, 252, "Input",ExpressionUUID->"ac6faa51-ce9e-4b84-bada-36b9f44afbb9"],
Cell[259928, 6088, 4682, 100, 581, "Input",ExpressionUUID->"7b039ccb-9100-4dea-b99c-bec5c7ee5184"],
Cell[264613, 6190, 4080, 93, 537, "Input",ExpressionUUID->"9ef01342-89a5-4ac7-97c3-96645a7ca791"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268730, 6288, 166, 3, 42, "Subsection",ExpressionUUID->"721a4bfa-aee9-42d0-96d3-96743ca88c9a"],
Cell[268899, 6293, 2627, 66, 276, "Input",ExpressionUUID->"b09ddb40-3738-43ba-bb9f-5b40636f77fc"],
Cell[271529, 6361, 16005, 352, 2133, "Input",ExpressionUUID->"5fd29c15-2ee2-45bb-8e2c-84772a8fccb6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287571, 6718, 194, 3, 42, "Subsection",ExpressionUUID->"4242c64b-75cf-4833-9d4c-f8fa32859c1c"],
Cell[287768, 6723, 735, 20, 111, "Input",ExpressionUUID->"9cc81c11-fd01-456a-8d42-c7e11e50298a"],
Cell[288506, 6745, 4897, 102, 394, "Input",ExpressionUUID->"2554b4b1-4f7a-4978-8f23-c17c75e9fec4"],
Cell[293406, 6849, 511, 14, 54, "Input",ExpressionUUID->"bb7d78b6-0709-4a59-a019-6b02011b3430"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293954, 6868, 165, 3, 42, "Subsection",ExpressionUUID->"d227ef0c-8266-4409-8f73-aa6465e26740"],
Cell[294122, 6873, 8140, 183, 991, "Input",ExpressionUUID->"bfd8db10-63e3-4def-a1fc-e8d43db1a1f0"],
Cell[302265, 7058, 7422, 165, 901, "Input",ExpressionUUID->"116a0c96-5bd5-4c0a-adb7-e6a94047e56f"],
Cell[309690, 7225, 3897, 69, 253, "Input",ExpressionUUID->"25fdb4b4-859c-4eee-92ea-5ea5491eae01"],
Cell[313590, 7296, 1063, 25, 163, "Input",ExpressionUUID->"8d6d551a-80c8-4fc7-a71d-942b77d4b246"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[314702, 7327, 171, 3, 53, "Section",ExpressionUUID->"affba3cf-2232-4f92-a752-5294cc029251"],
Cell[314876, 7332, 3925, 83, 221, "Input",ExpressionUUID->"8c849199-ac20-4382-a7f0-940f2ba5fe23"]
}, Closed]],
Cell[CellGroupData[{
Cell[318838, 7420, 163, 3, 42, "Section",ExpressionUUID->"ec752d41-e18b-46c9-a687-2a43acbc2c49"],
Cell[CellGroupData[{
Cell[319026, 7427, 173, 3, 42, "Subsection",ExpressionUUID->"3e413af6-2afb-4184-9b39-a1aaa5f0470a"],
Cell[319202, 7432, 4601, 105, 376, "Input",ExpressionUUID->"ddd79a10-fb97-42d5-8007-c57acf0bf44a"],
Cell[323806, 7539, 7771, 179, 495, "Input",ExpressionUUID->"8dfab7ec-76d6-44d3-bd88-b570064f104c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331614, 7723, 166, 3, 42, "Subsection",ExpressionUUID->"dc801699-1d95-410e-9663-9189a6f1e807"],
Cell[331783, 7728, 666, 18, 55, "Input",ExpressionUUID->"e7e8722e-6c81-4b40-87c8-d6ef15800524"],
Cell[332452, 7748, 12747, 305, 1211, "Input",ExpressionUUID->"cee60305-1632-4714-aee9-1dcaae6ffc44"],
Cell[345202, 8055, 10487, 215, 1263, "Input",ExpressionUUID->"df914fa8-0897-4c10-9328-ade25a1bd30a"]
}, Closed]],
Cell[CellGroupData[{
Cell[355726, 8275, 159, 3, 30, "Subsection",ExpressionUUID->"1efcce37-5c6a-46da-b65a-c7e8cd3a1ea3"],
Cell[355888, 8280, 6167, 140, 543, "Input",ExpressionUUID->"c51852e4-4259-4a60-afd1-89085a704206"]
}, Closed]],
Cell[CellGroupData[{
Cell[362092, 8425, 172, 3, 30, "Subsection",ExpressionUUID->"6fd1aab8-49ce-4b72-8f10-a955c0d61aff"],
Cell[362267, 8430, 1049, 26, 109, "Input",ExpressionUUID->"722f1a94-94b0-4458-8e49-4565186956ca"],
Cell[363319, 8458, 3000, 60, 234, "Input",ExpressionUUID->"ed8767a1-38cb-4d61-8fcd-d8bef0b02bf2"],
Cell[366322, 8520, 6874, 170, 646, "Input",ExpressionUUID->"d4d0c117-b8d3-4534-9810-eca46ea7b9ca"],
Cell[373199, 8692, 11409, 250, 1401, "Input",ExpressionUUID->"449db943-f88d-4296-bedc-a6300214bcf4"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[384669, 8949, 213, 4, 53, "Chapter",ExpressionUUID->"221bb86f-745e-4bc2-a4c0-d57eedca7fe8"],
Cell[384885, 8955, 1357, 34, 129, "Input",ExpressionUUID->"cba66cbf-1d59-4a38-9eb3-c28a5bd46deb"],
Cell[386245, 8991, 4755, 104, 480, "Input",ExpressionUUID->"516650ad-94d7-4c45-86f1-a468f0befd43"],
Cell[CellGroupData[{
Cell[391025, 9099, 392, 10, 72, "Input",ExpressionUUID->"4bd30e8a-e2ca-4156-95a1-a802bc6392e7"],
Cell[CellGroupData[{
Cell[391442, 9113, 1029, 19, 18, "Print",ExpressionUUID->"0acca0b3-8454-42cd-b9bf-6763330b40df"],
Cell[392474, 9134, 1030, 19, 18, "Print",ExpressionUUID->"6dad3b0e-87b1-4cd2-8f15-e8f9e0eea03c"]
}, Open  ]],
Cell[393519, 9156, 160, 3, 26, "Output",ExpressionUUID->"62c49d00-1308-4327-9f61-1fa94e6a1750"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[393728, 9165, 291, 4, 45, "Chapter",ExpressionUUID->"34a6e352-6706-4c26-a9dc-a4f7001cae32"],
Cell[CellGroupData[{
Cell[394044, 9173, 166, 3, 53, "Section",ExpressionUUID->"8f688e9a-3910-494a-a87f-f2f844618e52"],
Cell[394213, 9178, 13248, 322, 1377, "Input",ExpressionUUID->"0ec9bdae-e9ab-45ab-9804-e4f709e96573"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407498, 9505, 203, 4, 53, "Section",ExpressionUUID->"371e5165-5789-4a54-b8ed-1ad9279324ac"],
Cell[407704, 9511, 1238, 32, 146, "Input",ExpressionUUID->"c295db63-b755-42d4-905e-1f60bd136daf"],
Cell[408945, 9545, 3167, 78, 276, "Input",ExpressionUUID->"4846ddb1-8167-43f8-81b1-6123f63d2e77"],
Cell[412115, 9625, 9291, 217, 833, "Input",ExpressionUUID->"9d9e432a-d4af-4dcc-9d9e-1c04658c33ba"],
Cell[421409, 9844, 1064, 27, 93, "Input",ExpressionUUID->"e68c39a2-a812-43a3-91aa-78fdedec2843"],
Cell[422476, 9873, 1172, 28, 93, "Input",ExpressionUUID->"9bc022fa-0a10-4835-b882-4bc39407c56a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[423685, 9906, 212, 4, 53, "Section",ExpressionUUID->"84d986be-8d17-4863-a617-8340b33ff44f"],
Cell[423900, 9912, 1087, 31, 56, "Input",ExpressionUUID->"d665743c-fc53-4c25-a3dd-abde9a533ea6"],
Cell[424990, 9945, 2190, 48, 203, "Input",ExpressionUUID->"5e78e10f-4d64-4a4e-bbb8-8b3d20131c47"]
}, Open  ]],
Cell[CellGroupData[{
Cell[427217, 9998, 164, 3, 53, "Section",ExpressionUUID->"01de564e-e77c-4793-b30b-519a41b90f3e"],
Cell[427384, 10003, 3575, 85, 484, "Input",ExpressionUUID->"dcbb158f-daa3-4447-b3fa-de02c92ce373"],
Cell[430962, 10090, 8934, 199, 709, "Input",ExpressionUUID->"038f472d-4965-4744-92f5-a4507f90d81b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[439945, 10295, 169, 3, 53, "Chapter",ExpressionUUID->"1e0c9b17-26f2-4dfa-9b12-f0fcfa71397f"],
Cell[CellGroupData[{
Cell[440139, 10302, 156, 3, 53, "Section",ExpressionUUID->"5e56d50d-49e6-4304-9335-02ae825ce1c2"],
Cell[440298, 10307, 2046, 40, 123, "Input",ExpressionUUID->"b9ed0595-8856-47f8-b683-4ccc50eab34d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[442381, 10352, 172, 3, 53, "Section",ExpressionUUID->"8ffa1e1e-e9b7-4c60-a83a-b25d1067fe84"],
Cell[442556, 10357, 4831, 127, 258, "Input",ExpressionUUID->"552fd81a-00e9-4406-bd7b-53eaf56cdea5"],
Cell[447390, 10486, 2338, 59, 148, "Input",ExpressionUUID->"6078d412-e4a5-4d75-91d7-f6401e2febfe"],
Cell[449731, 10547, 5416, 137, 276, "Input",ExpressionUUID->"a17f937c-f706-4976-8f08-42a105f6ccc9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[455184, 10689, 183, 3, 53, "Section",ExpressionUUID->"04ef16ce-b8bd-4593-9dd9-7f337307e574"],
Cell[CellGroupData[{
Cell[455392, 10696, 158, 3, 42, "Subsection",ExpressionUUID->"171d1c15-50f3-4038-94a7-5c5590d84e9a"],
Cell[CellGroupData[{
Cell[455575, 10703, 165, 3, 34, "Subsubsection",ExpressionUUID->"b7c07b71-68a3-4a76-94a8-f9a553ef4e87"],
Cell[455743, 10708, 12835, 285, 1244, "Input",ExpressionUUID->"78d1d83d-1db3-48fe-9d5d-0549bc1ca3eb"],
Cell[468581, 10995, 12403, 269, 1683, "Input",ExpressionUUID->"48f54286-12c9-432b-b442-cd476a94214d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[481021, 11269, 163, 3, 34, "Subsubsection",ExpressionUUID->"760961e8-a2ff-4ade-a764-8d04318f13d6"],
Cell[481187, 11274, 12119, 267, 1072, "Input",ExpressionUUID->"eb0d0058-7e72-44ea-9964-09dd66819a96"],
Cell[493309, 11543, 11264, 244, 1458, "Input",ExpressionUUID->"eda0cfa0-8b5d-471e-93a5-482d7d0e9336"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[504622, 11793, 154, 3, 42, "Subsection",ExpressionUUID->"fe90355d-812c-40f2-9b7c-b012ae540bf9"],
Cell[504779, 11798, 11820, 265, 1190, "Input",ExpressionUUID->"aabc8ef7-49e5-4333-9181-ae2ddd34f9e3"],
Cell[516602, 12065, 11003, 238, 1600, "Input",ExpressionUUID->"57457dd7-5571-4c38-a645-c46447a3a30c"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[527666, 12310, 162, 3, 53, "Chapter",ExpressionUUID->"e8c3cc19-732d-4100-ba41-4f741977ed46"],
Cell[527831, 12315, 294, 6, 37, "Input",ExpressionUUID->"9b9ea4fc-21b7-44a7-a56c-9624eb86aa03"],
Cell[528128, 12323, 151, 4, 41, "Code",ExpressionUUID->"404ab529-fa01-4a17-8d30-d78a744d6275"],
Cell[528282, 12329, 158, 4, 41, "Code",ExpressionUUID->"71cbb145-c03b-495b-a560-6fe322da1f14"]
}, Open  ]]
}, Open  ]]
}
]
*)

